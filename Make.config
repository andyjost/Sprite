# The configurable portion of the build scripts.  Update global paths, flags,
# versions, etc. here.

# Make variables that may be useful to set on the command line:
#
#     COMPILER     The C++ compiler; either GCC or CLANG.  (default: GCC)
#     DEBUG        Whether to build debug flavor; unset or 1. (default: unset)
#     DEBUG_LLVM   Whether to use a debug LLVM; unset or 1. (default: unset)
#     PREFIX       The installation root directory. (default: <work-tree-root>/install)
#     OBJECT_ROOT  The directory under which to place object files.
#                  (default: <work-tree-root>/object-root)
#     WITHDOC      Whether to build and install the documentation.

# Tools
# =====
ifndef COMPILER
  COMPILER := GCC
endif

ifeq ($(COMPILER),GCC)
  CC := /usr/bin/gcc
  CXX := /usr/bin/g++
else ifeq ($(COMPILER),CLANG)
  CC := /usr/bin/clang
  CXX := /usr/bin/clang++
else
  $(error COMPILER must be set to GCC or CLANG, not $(COMPILER))
endif

# Download the Memory Pool System (MPS) from www.ravenbrook.com/project/mps.
MPS_PATH := /usr/local/src/mps


# Compiler flags
# ==============
CFLAGS     += -Wall -DBOOST_NO_AUTO_PTR
ifeq ($(DEBUG),1)
  CFLAGS   += -O0 -ggdb
else
  CFLAGS   += -O2
endif
CXXFLAGS += $(CFLAGS) -std=c++17 -Wno-register
ARFLAGS  += -U


# LLVM
# ====
ifeq ($(DEBUG_LLVM),1)
  LLVM_INCLUDE_PATH   := /opt/llvm-5.0-g/include
  LLVM_C_INCLUDE_PATH := /opt/llvm-5.0-g/include
  LLVM_LIBRARY_PATH   := /opt/llvm-5.0-g/lib
else
  LLVM_INCLUDE_PATH   := /usr/include/llvm-5.0
  LLVM_C_INCLUDE_PATH := /usr/include/llvm-c-5.0
  LLVM_LIBRARY_PATH   := /usr/lib/llvm-5.0/lib
endif

# Strings are appended to this variable to form tool names, e.g.,
# $(LLVM)-config for llvm-config.
LLVM := /usr/bin/llvm


# Python
# ======
# The top directory of the Python installation to build against.  Should have
# bin, include, and lib subdirectoriees.
PYTHON_HOME := /opt/python2.7-valgrind
# PYTHON_HOME := /usr/bin/python

# The name of the Python package that will be created.
PYTHON_PACKAGE_NAME := curry

# The Python package will be installed under $(PREFIX)/lib/$(PYTHON_VERSION).
PYTHON_VERSION := python2.7


# Boost
# =====
# Use version 1.66 or newer.
BOOST_HOME := /opt/boost_1_66_0-valgrind


# CMC
# ===
# The location of the Curry Meta-Compiler.  This may be cloned from https://projects.cecs.pdx.edu/git/antoy-cmc.
CMC_HOME := /opt/antoy-cmc

