# The configurable portion of the build scripts.  Everything an installer might
# need to adjust is in this file.

# PAKCS
# =====
# You will need PACKS to run Sprite.  You can get a copy from
# https://www.informatik.uni-kiel.de/~pakcs/download.html.  By default, Sprite
# uses whichever PAKCS is in your path.
PAKCS := $(shell which pakcs)

# ICURRY
# ======
# ICurry is used to convert Curry source code into ICurry.  It can be
# downloaded with CPM.  See
# https://www-ps.informatik.uni-kiel.de/currywiki/tools/cpm.
ICURRY_EXECUTABLE := $(shell which icurry)
ICURRY2JSONTEXT_EXECUTABLE := $(shell which icurry2jsontext)

# If jq is installed, it will be used to compact JSON output.
JQ_EXECUTABLE := $(shell which jq)

# Compiler Settings
# =================
CC := $(shell which gcc)
CXX := $(shell which g++)

ifeq ($(DEBUG),1)
  CFLAGS   += -O0 -ggdb -Wno-register -Wall
else
  CFLAGS   += -O2 -Wno-register -Wall
endif
CXXFLAGS += $(CFLAGS) -std=c++17

# Python
# ======
PYTHON_EXECUTABLE := $(shell which python)
PYTHON_COVERAGE_EXECUTABLE := $(shell which coverage)

# Sprite Configuration
# ====================
# The name of the top-level Python package, e.g., curry in 'import curry'.
PYTHON_PACKAGE_NAME := curry

# The name of the backed used by default.  Must match one of the subpackages
# under src/python/backends.
DEFAULT_BACKEND := py

# MPS
# ===
# Download the Memory Pool System (MPS) from www.ravenbrook.com/project/mps.
# MPS_HOME := /usr/local/src/mps

# Caching (development feature)
# =============================
# Sprite can be configured to cache certain steps in the compile chain, such as
# the conversion from Curry to ICurry, or ICurry to Python.  This is intended
# for development use, so you should leave it off unless you plan to edit the
# Sprite source and run the unit tests repeatedly.  Cached data is stored in an
# SQLite database.
#
# The following environment variables can be used to control
# caching at *runtime*:
#
#     SPRITE_CACHE_FILE
#       Overrides the default cache file.  Setting this to the empty string
#       disables caching.
#
#     SPRITE_CACHE_UPDATE=<pattern>
#       Upates cached data matching the pattern.  Everything in the cache is
#       keyed by a file name (e.g., of the ICurry file or JSON file), and the
#       pattern is compared against these file names.  The pattern is a glob
#       unless it is enclosed with slashes (/), in which case it is a regular
#       expression.  Regex patterns are not anchored, so the pattern needs only
#       to match some part of the file name.
#
#       Examples:
#           SPRITE_CACHE_UPDATE='*'         -- update everything
#           SPRITE_CACHE_UPDATE='*.json'    -- update JSON data
#           SPRITE_CACHE_UPDATE='/foo\d+/'  -- update files associated with
#                                           -- foo00.curry, foo01.curry, etc.

# This specifies the file to use by default for caching.  Clear the value to
# disable caching by default.  The environment variable SPRITE_CACHE_FILE can
# be used when invoking Sprite to override this or disable caching altogether.
DEFAULT_SPRITE_CACHE_FILE := {HOME}/.sprite/cache.db

# Whether to cache Curry-to-ICurry conversions.  If True, the cache file will
# store the output of the 'icurry' program keyed on the input filename, source
# text, and CURRYPATH environment variable.
ENABLE_ICURRY_CACHE := 0

# Whether to cache parsing of ICurry-JSON.  If True, the cache file will store
# the result of loading a JSON file into Python.  The stored data consists of
# pickled objects from the curry.icurry module.
ENABLE_PARSED_JSON_CACHE := 0

