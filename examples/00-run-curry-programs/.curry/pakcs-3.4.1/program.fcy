Prog "program" ["Prelude"] [] [Func ("program","digit") 0 Public (TCons ("Prelude","Int") []) (Rule [] (Free [1] (Case Rigid (Comb FuncCall ("Prelude","&&") [Comb FuncCall ("Prelude","_impl#<=#Prelude.Ord#Prelude.Int") [Lit (Intc 0),Var 1],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","_impl#<#Prelude.Ord#Prelude.Int") [],Var 1],Lit (Intc 10)]]) [Branch (Pattern ("Prelude","True") []) (Var 1),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") [])]))),Func ("program","main") 0 Public (TCons ("Prelude","Int") []) (Rule [] (Free [1] (Case Rigid (Comb FuncCall ("Prelude","_impl#==#Prelude.Eq#(,)") [Comb (FuncPartCall 1) ("Prelude","_inst#Prelude.Eq#Prelude.Int") [],Comb (FuncPartCall 1) ("Prelude","_inst#Prelude.Eq#Prelude.Int") [],Comb ConsCall ("Prelude","(,)") [Var 1,Lit (Intc 0)],Comb FuncCall ("Prelude","_impl#divMod#Prelude.Integral#Prelude.Int") [Comb FuncCall ("Prelude","_impl#+#Prelude.Num#Prelude.Int") [Comb FuncCall ("Prelude","_impl#+#Prelude.Num#Prelude.Int") [Comb FuncCall ("Prelude","_impl#*#Prelude.Num#Prelude.Int") [Lit (Intc 10000),Comb FuncCall ("program","digit") []],Lit (Intc 6790)],Comb FuncCall ("program","digit") []],Lit (Intc 72)]]) [Branch (Pattern ("Prelude","True") []) (Var 1),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") [])])))] []