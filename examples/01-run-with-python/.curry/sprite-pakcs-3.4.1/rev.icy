(IProg "rev" ["Prelude"] [] [(IFunction ("rev","append",0) 2 Public [0] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (ICaseCons 1 [(IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (IVar 2)))),(IConsBranch ("Prelude",":",1) 2 (IBlock [(IVarDecl 3),(IVarDecl 4)] [(IVarAssign 3 (IVarAccess 1 [0])),(IVarAssign 4 (IVarAccess 1 [1]))] (IReturn (ICCall ("Prelude",":",1) [(IVar 3),(IFCall ("rev","append",0) [(IVar 4),(IVar 2)])]))))])))),(IFunction ("rev","rev",1) 1 Public [0] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (ICaseCons 1 [(IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) [])))),(IConsBranch ("Prelude",":",1) 2 (IBlock [(IVarDecl 2),(IVarDecl 3)] [(IVarAssign 2 (IVarAccess 1 [0])),(IVarAssign 3 (IVarAccess 1 [1]))] (IReturn (IFCall ("rev","append",0) [(IFCall ("rev","rev",1) [(IVar 3)]),(ICCall ("Prelude",":",1) [(IVar 2),(ICCall ("Prelude","[]",0) [])])]))))])))),(IFunction ("rev","main",2) 0 Public [] (IFuncBody (IBlock [] [] (IReturn (IFCall ("rev","rev",1) [(ICCall ("Prelude",":",1) [(ILit (IInt 1)),(ICCall ("Prelude",":",1) [(ILit (IInt 2)),(ICCall ("Prelude",":",1) [(ILit (IInt 3)),(ICCall ("Prelude",":",1) [(ILit (IInt 4)),(ICCall ("Prelude","[]",0) [])])])])])])))))])