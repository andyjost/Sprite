(IProg "wildcard_matching" ["Prelude","Control.SetFunctions"] [] [(IFunction ("wildcard_matching","tails",0) 1 Public [0] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (ICaseCons 1 [(IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) [])))),(IConsBranch ("Prelude",":",1) 2 (IBlock [(IVarDecl 3)] [(IVarAssign 3 (IVarAccess 1 [1]))] (IReturn (IOr (IVar 1) (IFCall ("wildcard_matching","tails",0) [(IVar 3)])))))])))),(IFunction ("wildcard_matching","match",1) 2 Public [] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (IReturn (IFCall ("Prelude","$",669) [(IFPCall ("Control.SetFunctions","notEmpty",21) 1 []),(IFCall ("Control.SetFunctions","set2",5) [(IFPCall ("wildcard_matching","match.aux.7",3) 2 []),(IVar 1),(IVar 2)])]))))),(IFunction ("wildcard_matching","match.aux.7",3) 2 Private [1] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (ICaseCons 2 [(IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (IFCall ("wildcard_matching","match.aux.7_CASE0",8) [(IVar 1)])))),(IConsBranch ("Prelude",":",1) 2 (IBlock [(IVarDecl 3),(IVarDecl 4)] [(IVarAssign 3 (IVarAccess 2 [0])),(IVarAssign 4 (IVarAccess 2 [1]))] (IReturn (IOr (IFCall ("wildcard_matching","match.aux.7_CASE1",5) [(IVar 1),(IVar 3),(IVar 4)]) (IFCall ("wildcard_matching","match.aux.7_CASE4",4) [(IVar 3),(IVar 1),(IVar 4)])))))])))),(IFunction ("wildcard_matching","match.aux.7_CASE4",4) 3 Private [0] (IFuncBody (IBlock [(IVarDecl 3),(IVarDecl 1),(IVarDecl 4)] [(IVarAssign 3 (IVarAccess 0 [0])),(IVarAssign 1 (IVarAccess 0 [1])),(IVarAssign 4 (IVarAccess 0 [2]))] (ICaseLit 3 [(ILitBranch (IChar '*') (IBlock [] [] (IReturn (IFCall ("wildcard_matching","match.aux.7",3) [(IFCall ("wildcard_matching","tails",0) [(IVar 1)]),(IVar 4)]))))])))),(IFunction ("wildcard_matching","match.aux.7_CASE1",5) 3 Private [0] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 3),(IVarDecl 4)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 3 (IVarAccess 0 [1])),(IVarAssign 4 (IVarAccess 0 [2]))] (ICaseCons 1 [(IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] IExempt)),(IConsBranch ("Prelude",":",1) 2 (IBlock [(IVarDecl 5),(IVarDecl 6)] [(IVarAssign 5 (IVarAccess 1 [0])),(IVarAssign 6 (IVarAccess 1 [1]))] (IReturn (IOr (IFCall ("wildcard_matching","match.aux.7_CASE2",7) [(IVar 3),(IVar 6),(IVar 4)]) (IFCall ("Prelude","cond",761) [(IFCall ("Prelude","=:=",749) [(IFPCall ("Prelude","_inst#Prelude.Data#Prelude.Char",2) 1 []),(IVar 5),(IVar 3)]),(IFCall ("wildcard_matching","match.aux.7_COMPLEXCASE3",6) [(IVar 6),(IVar 4),(IFCall ("Prelude","&&",687) [(IFCall ("Prelude","apply",760) [(IFCall ("Prelude","apply",760) [(IFCall ("Prelude","_impl#/=#Prelude.Eq#Prelude.Char",39) []),(IVar 5)]),(ILit (IChar '?'))]),(IFCall ("Prelude","apply",760) [(IFCall ("Prelude","apply",760) [(IFCall ("Prelude","_impl#/=#Prelude.Eq#Prelude.Char",39) []),(IVar 5)]),(ILit (IChar '*'))])])])])))))])))),(IFunction ("wildcard_matching","match.aux.7_COMPLEXCASE3",6) 3 Private [2] (IFuncBody (IBlock [(IVarDecl 6),(IVarDecl 4),(IVarDecl 7)] [(IVarAssign 6 (IVarAccess 0 [0])),(IVarAssign 4 (IVarAccess 0 [1])),(IVarAssign 7 (IVarAccess 0 [2]))] (ICaseCons 7 [(IConsBranch ("Prelude","False",0) 0 (IBlock [] [] IExempt)),(IConsBranch ("Prelude","True",1) 0 (IBlock [] [] (IReturn (IFCall ("wildcard_matching","match.aux.7",3) [(IVar 6),(IVar 4)]))))])))),(IFunction ("wildcard_matching","match.aux.7_CASE2",7) 3 Private [0] (IFuncBody (IBlock [(IVarDecl 3),(IVarDecl 6),(IVarDecl 4)] [(IVarAssign 3 (IVarAccess 0 [0])),(IVarAssign 6 (IVarAccess 0 [1])),(IVarAssign 4 (IVarAccess 0 [2]))] (ICaseLit 3 [(ILitBranch (IChar '?') (IBlock [] [] (IReturn (IFCall ("wildcard_matching","match.aux.7",3) [(IVar 6),(IVar 4)]))))])))),(IFunction ("wildcard_matching","match.aux.7_CASE0",8) 1 Private [0] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (ICaseCons 1 [(IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",1) [])))),(IConsBranch ("Prelude",":",1) 2 (IBlock [] [] IExempt))])))),(IFunction ("wildcard_matching","main",2) 0 Public [] (IFuncBody (IBlock [] [] (IReturn (IFCall ("Prelude","&&",687) [(IFCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Bool",65) [(IFCall ("wildcard_matching","match",1) [(ICCall ("Prelude",":",1) [(ILit (IChar 'a')),(ICCall ("Prelude",":",1) [(ILit (IChar 'a')),(ICCall ("Prelude","[]",0) [])])]),(ICCall ("Prelude",":",1) [(ILit (IChar 'a')),(ICCall ("Prelude","[]",0) [])])]),(ICCall ("Prelude","False",0) [])]),(IFCall ("Prelude","&&",687) [(IFCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Bool",65) [(IFCall ("wildcard_matching","match",1) [(ICCall ("Prelude",":",1) [(ILit (IChar 'a')),(ICCall ("Prelude",":",1) [(ILit (IChar 'a')),(ICCall ("Prelude","[]",0) [])])]),(ICCall ("Prelude",":",1) [(ILit (IChar '*')),(ICCall ("Prelude","[]",0) [])])]),(ICCall ("Prelude","True",1) [])]),(IFCall ("Prelude","&&",687) [(IFCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Bool",65) [(IFCall ("wildcard_matching","match",1) [(ICCall ("Prelude",":",1) [(ILit (IChar 'a')),(ICCall ("Prelude",":",1) [(ILit (IChar 'b')),(ICCall ("Prelude",":",1) [(ILit (IChar 'c')),(ICCall ("Prelude","[]",0) [])])])]),(ICCall ("Prelude",":",1) [(ILit (IChar 'a')),(ICCall ("Prelude",":",1) [(ILit (IChar '*')),(ICCall ("Prelude","[]",0) [])])])]),(ICCall ("Prelude","True",1) [])]),(IFCall ("Prelude","&&",687) [(IFCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Bool",65) [(IFCall ("wildcard_matching","match",1) [(ICCall ("Prelude",":",1) [(ILit (IChar 'a')),(ICCall ("Prelude",":",1) [(ILit (IChar 'b')),(ICCall ("Prelude",":",1) [(ILit (IChar 'c')),(ICCall ("Prelude","[]",0) [])])])]),(ICCall ("Prelude",":",1) [(ILit (IChar 'a')),(ICCall ("Prelude",":",1) [(ILit (IChar '?')),(ICCall ("Prelude","[]",0) [])])])]),(ICCall ("Prelude","False",0) [])]),(IFCall ("Prelude","&&",687) [(IFCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Bool",65) [(IFCall ("wildcard_matching","match",1) [(ICCall ("Prelude",":",1) [(ILit (IChar 'c')),(ICCall ("Prelude",":",1) [(ILit (IChar 'b')),(ICCall ("Prelude","[]",0) [])])]),(ICCall ("Prelude",":",1) [(ILit (IChar '?')),(ICCall ("Prelude",":",1) [(ILit (IChar 'a')),(ICCall ("Prelude","[]",0) [])])])]),(ICCall ("Prelude","False",0) [])]),(IFCall ("Prelude","&&",687) [(IFCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Bool",65) [(IFCall ("wildcard_matching","match",1) [(ICCall ("Prelude",":",1) [(ILit (IChar 'a')),(ICCall ("Prelude",":",1) [(ILit (IChar 'd')),(ICCall ("Prelude",":",1) [(ILit (IChar 'c')),(ICCall ("Prelude",":",1) [(ILit (IChar 'e')),(ICCall ("Prelude",":",1) [(ILit (IChar 'b')),(ICCall ("Prelude","[]",0) [])])])])])]),(ICCall ("Prelude",":",1) [(ILit (IChar 'a')),(ICCall ("Prelude",":",1) [(ILit (IChar '*')),(ICCall ("Prelude",":",1) [(ILit (IChar 'b')),(ICCall ("Prelude","[]",0) [])])])])]),(ICCall ("Prelude","True",1) [])]),(IFCall ("Prelude","&&",687) [(IFCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Bool",65) [(IFCall ("wildcard_matching","match",1) [(ICCall ("Prelude",":",1) [(ILit (IChar 'a')),(ICCall ("Prelude",":",1) [(ILit (IChar 'c')),(ICCall ("Prelude",":",1) [(ILit (IChar 'd')),(ICCall ("Prelude",":",1) [(ILit (IChar 'c')),(ICCall ("Prelude",":",1) [(ILit (IChar 'b')),(ICCall ("Prelude","[]",0) [])])])])])]),(ICCall ("Prelude",":",1) [(ILit (IChar 'a')),(ICCall ("Prelude",":",1) [(ILit (IChar '*')),(ICCall ("Prelude",":",1) [(ILit (IChar 'c')),(ICCall ("Prelude",":",1) [(ILit (IChar '?')),(ICCall ("Prelude",":",1) [(ILit (IChar 'b')),(ICCall ("Prelude","[]",0) [])])])])])])]),(ICCall ("Prelude","False",0) [])]),(IFCall ("Prelude","&&",687) [(IFCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Bool",65) [(IFCall ("wildcard_matching","match",1) [(ICCall ("Prelude",":",1) [(ILit (IChar 'a')),(ICCall ("Prelude",":",1) [(ILit (IChar 'c')),(ICCall ("Prelude",":",1) [(ILit (IChar 'd')),(ICCall ("Prelude",":",1) [(ILit (IChar 'c')),(ICCall ("Prelude",":",1) [(ILit (IChar 'b')),(ICCall ("Prelude","[]",0) [])])])])])]),(ICCall ("Prelude",":",1) [(ILit (IChar 'a')),(ICCall ("Prelude",":",1) [(ILit (IChar '*')),(ICCall ("Prelude",":",1) [(ILit (IChar 'c')),(ICCall ("Prelude",":",1) [(ILit (IChar 'b')),(ICCall ("Prelude","[]",0) [])])])])])]),(ICCall ("Prelude","True",1) [])]),(IFCall ("Prelude","&&",687) [(IFCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Bool",65) [(IFCall ("wildcard_matching","match",1) [(ICCall ("Prelude",":",1) [(ILit (IChar 'a')),(ICCall ("Prelude",":",1) [(ILit (IChar 'c')),(ICCall ("Prelude",":",1) [(ILit (IChar 'd')),(ICCall ("Prelude",":",1) [(ILit (IChar 'b')),(ICCall ("Prelude",":",1) [(ILit (IChar 'b')),(ICCall ("Prelude","[]",0) [])])])])])]),(ICCall ("Prelude",":",1) [(ILit (IChar 'a')),(ICCall ("Prelude",":",1) [(ILit (IChar '*')),(ICCall ("Prelude",":",1) [(ILit (IChar 'c')),(ICCall ("Prelude",":",1) [(ILit (IChar '?')),(ICCall ("Prelude",":",1) [(ILit (IChar 'b')),(ICCall ("Prelude","[]",0) [])])])])])])]),(ICCall ("Prelude","False",0) [])]),(IFCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Bool",65) [(IFCall ("wildcard_matching","match",1) [(ICCall ("Prelude",":",1) [(ILit (IChar 'a')),(ICCall ("Prelude",":",1) [(ILit (IChar 'c')),(ICCall ("Prelude",":",1) [(ILit (IChar 'd')),(ICCall ("Prelude",":",1) [(ILit (IChar 'b')),(ICCall ("Prelude",":",1) [(ILit (IChar 'c')),(ICCall ("Prelude",":",1) [(ILit (IChar 'c')),(ICCall ("Prelude",":",1) [(ILit (IChar 'c')),(ICCall ("Prelude",":",1) [(ILit (IChar 'b')),(ICCall ("Prelude","[]",0) [])])])])])])])])]),(ICCall ("Prelude",":",1) [(ILit (IChar 'a')),(ICCall ("Prelude",":",1) [(ILit (IChar '*')),(ICCall ("Prelude",":",1) [(ILit (IChar 'c')),(ICCall ("Prelude",":",1) [(ILit (IChar '?')),(ICCall ("Prelude",":",1) [(ILit (IChar 'b')),(ICCall ("Prelude","[]",0) [])])])])])])]),(ICCall ("Prelude","True",1) [])])])])])])])])])])])))))])