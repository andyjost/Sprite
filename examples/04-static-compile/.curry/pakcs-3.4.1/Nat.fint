Prog "Nat" ["Prelude"] [Type ("Nat","Nat") Public [] [Cons ("Nat","O") 0 Public [],Cons ("Nat","I") 1 Public [TCons ("Nat","Nat") []]]] [Func ("Nat","_inst#Prelude.Data#Nat.Nat") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Data") [TCons ("Nat","Nat") []])) (Rule [] (Var 0)),Func ("Nat","_impl#===#Prelude.Data#Nat.Nat") 2 Public (FuncType (TCons ("Nat","Nat") []) (FuncType (TCons ("Nat","Nat") []) (TCons ("Prelude","Bool") []))) (Rule [] (Var 0)),Func ("Nat","_impl#aValue#Prelude.Data#Nat.Nat") 0 Public (TCons ("Nat","Nat") []) (Rule [] (Var 0)),Func ("Nat","_inst#Prelude.Show#Nat.Nat") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Show") [TCons ("Nat","Nat") []])) (Rule [] (Var 0)),Func ("Nat","_impl#show#Prelude.Show#Nat.Nat") 0 Public (FuncType (TCons ("Nat","Nat") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("Nat","_impl#showsPrec#Prelude.Show#Nat.Nat") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Nat","Nat") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])))) (Rule [] (Var 0)),Func ("Nat","_impl#showList#Prelude.Show#Nat.Nat") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Nat","Nat") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]))) (Rule [] (Var 0)),Func ("Nat","natToInt") 1 Public (FuncType (TCons ("Nat","Nat") []) (TCons ("Prelude","Int") [])) (Rule [] (Var 0)),Func ("Nat","natFromInt") 1 Public (FuncType (TCons ("Prelude","Int") []) (TCons ("Nat","Nat") [])) (Rule [] (Var 0))] []