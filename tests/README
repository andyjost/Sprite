Sprite unit tests
=================

1. USAGE
--------

        make ['testall' | pattern...]

Use 'make' or 'make testall' to run all tests.  Use 'make test_parse.py' to run
parser tests.


2. FILE LAYOUT
--------------

        data/       Test data files (e.g., sample input, golden results).
        lib/        Test harness code.
        test_*.py   Unit test source code.


3. TEST RUNNERS
---------------

        run_tests       Run unit tests.
        debug_tests     Run unit tests under gdb.
        valgrind_tests  Run unit tests under valgrind.
        cov_tests       Run unit tests under coverage.py.
        shell           Start a shell in the test environment.


4. EDITOR INTEGRATION
---------------------

A makefile is used to simplify integration with text editors.  For instance, in
vim <Enter> runs "make" by default, so that key can be used to easily run the
tests right from the text editor.

5. ENVIRONMENT VARIABLES
------------------------

    - SPRITE_LOG_LEVEL

        Default: INFO
        Used at: src/python/interpreter/__init__.py

        Produce more or less output.  This may be set to any of
        'DEBUG', 'INFO', 'WARNING', 'ERROR', or 'CRITICAL' (see the
        Python "logging" module documentation for details).  Setting
        this to 'DEBUG' will output detailed information about each
        function compiled.

    - SPRITE_CATCH_ERRORS

        Default: ''
        Used at: tests/lib/cytest.py

        Sets a breakpoint whenever a specified error type is created.  The
        value is a comma-separated list of Python exception names.  For
        example, seeting "AssertionError,RuntimeError" will cause an
        interactive prompt to start whenever either of these exceptions occurs.

