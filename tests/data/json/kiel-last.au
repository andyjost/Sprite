Module:
-------
  name: last
  imports: Prelude

  types:
  ------

  functions:
  ----------
    append:
      $1 <- LHS[1]
      $2 <- LHS[2]
      case $1 of Prelude.[] -> return $2
                 Prelude.:  -> $3 <- $1[1]
                               $4 <- $1[2]
                               return (Prelude.: $3 ((last.append $4 $2)))
      return $1
    last:
      $1 <- LHS[1]
      $2 <- IBind
      $3 <- IBind
      return (last.last_case_#1 ((Prelude.=:= ((last.append $3 ((Prelude.: $2 (Prelude.[]))))) $1)) $3 $2 $1)
    last_case_#1:
      $4 <- LHS[1]
      $3 <- LHS[2]
      $2 <- LHS[3]
      $1 <- LHS[4]
      case $4 of Prelude.True  -> return $2
                 Prelude.False -> return (Prelude.failed)
      return $4
    goal:
      return (last.last ((Prelude.: 1 ((Prelude.: 2 ((Prelude.: 3 ((Prelude.: 4 (Prelude.[]))))))))))