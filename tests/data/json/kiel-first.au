Module:
-------
  name: first
  imports: Prelude

  types:
  ------
    Nat = O | S

  functions:
  ----------
    first:
      $1 <- LHS[1]
      $2 <- LHS[2]
      case $1 of first.O -> return (Prelude.[])
                 first.S -> $3 <- $1[1]
                            return (first.first_case_#1 $2 $3)
      return $1
    first_case_#1:
      $2 <- LHS[1]
      $3 <- LHS[2]
      case $2 of Prelude.[] -> return Exempt
                 Prelude.:  -> $4 <- $2[1]
                               $5 <- $2[2]
                               return (Prelude.: $4 ((first.first $3 $5)))
      return $2
    from:
      $1 <- LHS[1]
      return (Prelude.: $1 ((first.from ((first.S $1)))))
    goal1:
      return (first.first ((first.S ((first.S (first.O))))) ((first.from (first.O))))
    goal2:
      $1 <- LHS[1]
      $2 <- LHS[2]
      return (Prelude.=:= ((first.first $1 ((first.from $2)))) ((Prelude.: (first.O) (Prelude.[]))))