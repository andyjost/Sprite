Module:
-------
  name: escher_higher
  imports: Prelude

  types:
  ------
    data Day = Mon | Tue | Wed | Thu | Fri | Sat | Sun

  functions:
  ----------
    _inst#Prelude.Data#escher_higher.Day:
      return ICCall('Prelude._Dict#Data', IFPCall('escher_higher._impl#===#Prelude.Data#escher_higher.Day'), IFPCall('escher_higher._impl#aValue#Prelude.Data#escher_higher.Day'))
    _impl#===#Prelude.Data#escher_higher.Day:
      var $1
      var $2
      $1 <- $0[0]
      $2 <- $0[1]
      case $1 of
        escher_higher.Mon -> return IFCall('escher_higher._impl#===#Prelude.Data#escher_higher.Day_CASE0', $2)
        escher_higher.Tue -> return IFCall('escher_higher._impl#===#Prelude.Data#escher_higher.Day_CASE1', $2)
        escher_higher.Wed -> return IFCall('escher_higher._impl#===#Prelude.Data#escher_higher.Day_CASE2', $2)
        escher_higher.Thu -> return IFCall('escher_higher._impl#===#Prelude.Data#escher_higher.Day_CASE3', $2)
        escher_higher.Fri -> return IFCall('escher_higher._impl#===#Prelude.Data#escher_higher.Day_CASE4', $2)
        escher_higher.Sat -> return IFCall('escher_higher._impl#===#Prelude.Data#escher_higher.Day_CASE5', $2)
        escher_higher.Sun -> return IFCall('escher_higher._impl#===#Prelude.Data#escher_higher.Day_CASE6', $2)
    _impl#===#Prelude.Data#escher_higher.Day_CASE6:
      var $2
      $2 <- $0[0]
      case $2 of
        escher_higher.Mon -> return ICCall('Prelude.False')
        escher_higher.Tue -> return ICCall('Prelude.False')
        escher_higher.Wed -> return ICCall('Prelude.False')
        escher_higher.Thu -> return ICCall('Prelude.False')
        escher_higher.Fri -> return ICCall('Prelude.False')
        escher_higher.Sat -> return ICCall('Prelude.False')
        escher_higher.Sun -> return ICCall('Prelude.True')
    _impl#===#Prelude.Data#escher_higher.Day_CASE5:
      var $2
      $2 <- $0[0]
      case $2 of
        escher_higher.Mon -> return ICCall('Prelude.False')
        escher_higher.Tue -> return ICCall('Prelude.False')
        escher_higher.Wed -> return ICCall('Prelude.False')
        escher_higher.Thu -> return ICCall('Prelude.False')
        escher_higher.Fri -> return ICCall('Prelude.False')
        escher_higher.Sat -> return ICCall('Prelude.True')
        escher_higher.Sun -> return ICCall('Prelude.False')
    _impl#===#Prelude.Data#escher_higher.Day_CASE4:
      var $2
      $2 <- $0[0]
      case $2 of
        escher_higher.Mon -> return ICCall('Prelude.False')
        escher_higher.Tue -> return ICCall('Prelude.False')
        escher_higher.Wed -> return ICCall('Prelude.False')
        escher_higher.Thu -> return ICCall('Prelude.False')
        escher_higher.Fri -> return ICCall('Prelude.True')
        escher_higher.Sat -> return ICCall('Prelude.False')
        escher_higher.Sun -> return ICCall('Prelude.False')
    _impl#===#Prelude.Data#escher_higher.Day_CASE3:
      var $2
      $2 <- $0[0]
      case $2 of
        escher_higher.Mon -> return ICCall('Prelude.False')
        escher_higher.Tue -> return ICCall('Prelude.False')
        escher_higher.Wed -> return ICCall('Prelude.False')
        escher_higher.Thu -> return ICCall('Prelude.True')
        escher_higher.Fri -> return ICCall('Prelude.False')
        escher_higher.Sat -> return ICCall('Prelude.False')
        escher_higher.Sun -> return ICCall('Prelude.False')
    _impl#===#Prelude.Data#escher_higher.Day_CASE2:
      var $2
      $2 <- $0[0]
      case $2 of
        escher_higher.Mon -> return ICCall('Prelude.False')
        escher_higher.Tue -> return ICCall('Prelude.False')
        escher_higher.Wed -> return ICCall('Prelude.True')
        escher_higher.Thu -> return ICCall('Prelude.False')
        escher_higher.Fri -> return ICCall('Prelude.False')
        escher_higher.Sat -> return ICCall('Prelude.False')
        escher_higher.Sun -> return ICCall('Prelude.False')
    _impl#===#Prelude.Data#escher_higher.Day_CASE1:
      var $2
      $2 <- $0[0]
      case $2 of
        escher_higher.Mon -> return ICCall('Prelude.False')
        escher_higher.Tue -> return ICCall('Prelude.True')
        escher_higher.Wed -> return ICCall('Prelude.False')
        escher_higher.Thu -> return ICCall('Prelude.False')
        escher_higher.Fri -> return ICCall('Prelude.False')
        escher_higher.Sat -> return ICCall('Prelude.False')
        escher_higher.Sun -> return ICCall('Prelude.False')
    _impl#===#Prelude.Data#escher_higher.Day_CASE0:
      var $2
      $2 <- $0[0]
      case $2 of
        escher_higher.Mon -> return ICCall('Prelude.True')
        escher_higher.Tue -> return ICCall('Prelude.False')
        escher_higher.Wed -> return ICCall('Prelude.False')
        escher_higher.Thu -> return ICCall('Prelude.False')
        escher_higher.Fri -> return ICCall('Prelude.False')
        escher_higher.Sat -> return ICCall('Prelude.False')
        escher_higher.Sun -> return ICCall('Prelude.False')
    _impl#aValue#Prelude.Data#escher_higher.Day:
      var $1
      $1 <- $0[0]
      case $1 of
        Prelude.() -> return ICCall('escher_higher.Mon') ? ICCall('escher_higher.Tue') ? ICCall('escher_higher.Wed') ? ICCall('escher_higher.Thu') ? ICCall('escher_higher.Fri') ? ICCall('escher_higher.Sat') ? ICCall('escher_higher.Sun')
    map_:
      var $1
      $1 <- $0[0]
      case $1 of
        Prelude.(,) _ _ ->
          var $2
          var $3
          $2 <- $1[0]
          $3 <- $1[1]
          return IFCall('escher_higher.map__CASE0', $3, $2)
    map__CASE0:
      var $3
      var $2
      $3 <- $0[0]
      $2 <- $0[1]
      case $3 of
        Prelude.[] -> return ICCall('Prelude.[]')
        Prelude.: _ _ ->
          var $4
          var $5
          $4 <- $3[0]
          $5 <- $3[1]
          return ICCall('Prelude.:', IFCall('Prelude.apply', $2, $4), IFCall('escher_higher.map_', ICCall('Prelude.(,)', $2, $5)))
    filter_:
      var $1
      $1 <- $0[0]
      case $1 of
        Prelude.(,) _ _ ->
          var $2
          var $3
          $2 <- $1[0]
          $3 <- $1[1]
          return IFCall('escher_higher.filter__CASE0', $3, $2)
    filter__CASE0:
      var $3
      var $2
      $3 <- $0[0]
      $2 <- $0[1]
      case $3 of
        Prelude.[] -> return ICCall('Prelude.[]')
        Prelude.: _ _ ->
          var $4
          var $5
          $4 <- $3[0]
          $5 <- $3[1]
          return IFCall('escher_higher.filter__COMPLEXCASE1', $4, $2, $5, IFCall('Prelude.apply', $2, $4))
    filter__COMPLEXCASE1:
      var $4
      var $2
      var $5
      var $6
      $4 <- $0[0]
      $2 <- $0[1]
      $5 <- $0[2]
      $6 <- $0[3]
      case $6 of
        Prelude.False -> return IFCall('escher_higher.filter_', ICCall('Prelude.(,)', $2, $5))
        Prelude.True -> return ICCall('Prelude.:', $4, IFCall('escher_higher.filter_', ICCall('Prelude.(,)', $2, $5)))
    next:
      var $1
      $1 <- $0[0]
      case $1 of
        escher_higher.Mon -> return ICCall('escher_higher.Tue')
        escher_higher.Tue -> return ICCall('escher_higher.Wed')
        escher_higher.Wed -> return ICCall('escher_higher.Thu')
        escher_higher.Thu -> return ICCall('escher_higher.Fri')
        escher_higher.Fri -> return ICCall('escher_higher.Sat')
        escher_higher.Sat -> return ICCall('escher_higher.Sun')
        escher_higher.Sun -> return ICCall('escher_higher.Mon')
    weekday:
      var $1
      $1 <- $0[0]
      case $1 of
        escher_higher.Mon -> return ICCall('Prelude.True')
        escher_higher.Tue -> return ICCall('Prelude.True')
        escher_higher.Wed -> return ICCall('Prelude.True')
        escher_higher.Thu -> return ICCall('Prelude.True')
        escher_higher.Fri -> return ICCall('Prelude.True')
        escher_higher.Sat -> return ICCall('Prelude.False')
        escher_higher.Sun -> return ICCall('Prelude.False')
    goal1:
      return IFCall('escher_higher.map_', ICCall('Prelude.(,)', IFPCall('escher_higher.next'), ICCall('Prelude.:', ICCall('escher_higher.Mon'), ICCall('Prelude.:', ICCall('escher_higher.Tue'), ICCall('Prelude.:', ICCall('escher_higher.Wed'), ICCall('Prelude.[]'))))))
    goal2:
      return IFCall('escher_higher.filter_', ICCall('Prelude.(,)', IFPCall('escher_higher.weekday'), ICCall('Prelude.:', ICCall('escher_higher.Sun'), ICCall('Prelude.:', ICCall('escher_higher.Mon'), ICCall('Prelude.:', ICCall('escher_higher.Wed'), ICCall('Prelude.[]'))))))