Prog "myand" ["Prelude"] [] [Func ("myand","and_") 2 Public (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("Prelude","Bool") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Rigid (Comb FuncCall ("Prelude","&&") [Comb FuncCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Bool") [Var 1,Comb ConsCall ("Prelude","True") []],Comb FuncCall ("Prelude","_impl#==#Prelude.Eq#Prelude.Bool") [Var 2,Comb ConsCall ("Prelude","True") []]]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Prelude","False") []) (Case Rigid (Comb FuncCall ("Prelude","otherwise") []) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") [])])]))] []