Prog "atableNoflex" ["Prelude"] [] [Func ("atableNoflex","f") 1 Public (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","Bool") [])) (Rule [1] (Case Rigid (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","_impl#===#Prelude.Data#Prelude.Int") [],Var 1],Lit (Intc 1)]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Prelude","False") []) (Case Rigid (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","_impl#===#Prelude.Data#Prelude.Int") [],Var 1],Lit (Intc 0)]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") [])])])),Func ("atableNoflex","main") 0 Public (TCons ("Prelude","Bool") []) (Rule [] (Comb FuncCall ("atableNoflex","f") [Lit (Intc 0)]))] []