(IProg "atableFlex" ["Prelude"] [(IDataType ("atableFlex","AB",0) [(("atableFlex","A",0),0),(("atableFlex","B",1),0)])] [(IFunction ("atableFlex","_inst#Prelude.Data#atableFlex.AB",0) 1 Public [0] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (ICaseCons 1 [(IConsBranch ("Prelude","()",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","_Dict#Data",0) [(IFPCall ("atableFlex","_impl#===#Prelude.Data#atableFlex.AB",1) 2 []),(IFCall ("atableFlex","_impl#aValue#Prelude.Data#atableFlex.AB",2) [])]))))])))),(IFunction ("atableFlex","_impl#===#Prelude.Data#atableFlex.AB",1) 2 Public [0] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (ICaseCons 1 [(IConsBranch ("atableFlex","A",0) 0 (IBlock [] [] (IReturn (IFCall ("atableFlex","_impl#===#Prelude.Data#atableFlex.AB_CASE0",6) [(IVar 2)])))),(IConsBranch ("atableFlex","B",1) 0 (IBlock [] [] (IReturn (IFCall ("atableFlex","_impl#===#Prelude.Data#atableFlex.AB_CASE1",5) [(IVar 2)]))))])))),(IFunction ("atableFlex","_impl#===#Prelude.Data#atableFlex.AB_CASE1",5) 1 Private [0] (IFuncBody (IBlock [(IVarDecl 2)] [(IVarAssign 2 (IVarAccess 0 [0]))] (ICaseCons 2 [(IConsBranch ("atableFlex","A",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("atableFlex","B",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",1) []))))])))),(IFunction ("atableFlex","_impl#===#Prelude.Data#atableFlex.AB_CASE0",6) 1 Private [0] (IFuncBody (IBlock [(IVarDecl 2)] [(IVarAssign 2 (IVarAccess 0 [0]))] (ICaseCons 2 [(IConsBranch ("atableFlex","A",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",1) [])))),(IConsBranch ("atableFlex","B",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) []))))])))),(IFunction ("atableFlex","_impl#aValue#Prelude.Data#atableFlex.AB",2) 0 Public [] (IFuncBody (IBlock [] [] (IReturn (IOr (ICCall ("atableFlex","A",0) []) (ICCall ("atableFlex","B",1) [])))))),(IFunction ("atableFlex","f",3) 1 Public [0] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (ICaseCons 1 [(IConsBranch ("atableFlex","A",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",1) [])))),(IConsBranch ("atableFlex","B",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) []))))])))),(IFunction ("atableFlex","main",4) 0 Public [] (IFuncBody (IBlock [] [] (IReturn (IFCall ("atableFlex","f",3) [(ICCall ("atableFlex","A",0) [])])))))])