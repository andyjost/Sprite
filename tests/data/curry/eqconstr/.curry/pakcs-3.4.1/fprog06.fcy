Prog "fprog06" ["Prelude"] [] [Func ("fprog06","f") 2 Public (ForallType [(0,KStar)] (FuncType (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Fractional") [TVar 0])) (FuncType (TCons ("Prelude","Float") []) (TVar 0)))) (Rule [1,2] (Case Flex (Var 2) [Branch (LPattern (Floatc 3.14)) (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","fromFloat") [Var 1],Lit (Floatc 3.14)]),Branch (LPattern (Floatc 2.72)) (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","fromFloat") [Var 1],Lit (Floatc 2.72)])])),Func ("fprog06","g") 2 Public (ForallType [(0,KStar)] (FuncType (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Fractional") [TVar 0])) (FuncType (TCons ("Prelude","Float") []) (TVar 0)))) (Rule [1,2] (Case Flex (Var 2) [Branch (LPattern (Floatc 3.14)) (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","fromFloat") [Var 1],Lit (Floatc 3.14)]),Branch (LPattern (Floatc 5.0)) (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","fromFloat") [Var 1],Lit (Floatc 5.0)])])),Func ("fprog06","main") 0 Public (TCons ("Prelude","(,)") [TCons ("Prelude","Float") [],TCons ("Prelude","Float") []]) (Rule [] (Free [1] (Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("fprog06","f") [Comb (FuncPartCall 1) ("Prelude","_inst#Prelude.Fractional#Prelude.Float") [],Var 1],Comb FuncCall ("fprog06","g") [Comb (FuncPartCall 1) ("Prelude","_inst#Prelude.Fractional#Prelude.Float") [],Var 1]])))] []