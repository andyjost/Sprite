
module "account"
  import
    "Prelude"
  data "account.Message"
    constructor "account.Deposit" 1 0
    constructor "account.Withdraw" 1 1
    constructor "account.Balance" 1 2
  function "account.account" 2
    code
      declare_var 1 ILhs (("account","account"),1)
      declare_var 2 ILhs (("account","account"),2)
      ATable 1 2 flex
        reference_var 2
        "Prelude.[]" =>
          return
            Node "Prelude.success"
        "Prelude.:" =>
          declare_var 3 IVar 2 (("Prelude",":"),1)
          declare_var 4 IVar 2 (("Prelude",":"),2)
          return
            Node "account.account_#A0" (
              reference_var 1 ,
              reference_var 3 ,
              reference_var 4 )
  function "account.account_#A0" 3
    code
      declare_var 1 ILhs (("account","account_#A0"),1)
      declare_var 3 ILhs (("account","account_#A0"),2)
      declare_var 4 ILhs (("account","account_#A0"),3)
      ATable 1 3 flex
        reference_var 3
        "account.Deposit" =>
          declare_var 5 IVar 3 (("account","Deposit"),1)
          return
            Node "account.account" (
              Node "Prelude._impl#+#Prelude.Num#Prelude.Int" (
                reference_var 1 ,
                reference_var 5 ) ,
              reference_var 4 )
        "account.Withdraw" =>
          declare_var 6 IVar 3 (("account","Withdraw"),1)
          return
            Node "account.account" (
              Node "Prelude._impl#-#Prelude.Num#Prelude.Int" (
                reference_var 1 ,
                reference_var 6 ) ,
              reference_var 4 )
        "account.Balance" =>
          declare_var 7 IVar 3 (("account","Balance"),1)
          return
            Node "Prelude.&" (
              Node "Prelude.=:=" (
                reference_var 7 ,
                reference_var 1 ) ,
              Node "account.account" (
                reference_var 1 ,
                reference_var 4 ) )
  function "account.make_account" 1
    code
      declare_var 1 ILhs (("account","make_account"),1)
      return
        Node "account.account" (
          int 0 ,
          Node "Prelude.ensureSpine" (
            reference_var 1 ) )
  function "account.goal1" 1
    code
      declare_var 1 ILhs (("account","goal1"),1)
      declare_var 2 IFree
      return
        Node "Prelude.&" (
          Node "account.make_account" (
            reference_var 2 ) ,
          Node "Prelude.=:=" (
            reference_var 2 ,
            Node "Prelude.:" (
              Node "account.Deposit" (
                int 200 ) ,
              Node "Prelude.:" (
                Node "account.Deposit" (
                  int 50 ) ,
                Node "Prelude.:" (
                  Node "account.Balance" (
                    reference_var 1 ) ,
                  Node "Prelude.[]" ) ) ) ) )
  function "account.goal2" 1
    code
      declare_var 1 ILhs (("account","goal2"),1)
      declare_var 2 IFree
      return
        Node "Prelude.&" (
          Node "account.make_account" (
            reference_var 2 ) ,
          Node "Prelude.=:=" (
            reference_var 2 ,
            Node "Prelude.:" (
              Node "account.Deposit" (
                int 200 ) ,
              Node "Prelude.:" (
                Node "account.Withdraw" (
                  int 100 ) ,
                Node "Prelude.:" (
                  Node "account.Deposit" (
                    int 50 ) ,
                  Node "Prelude.:" (
                    Node "account.Balance" (
                      reference_var 1 ) ,
                    Node "Prelude.[]" ) ) ) ) ) )
  function "account.sendMsg" 2
    code
      declare_var 1 ILhs (("account","sendMsg"),1)
      declare_var 2 ILhs (("account","sendMsg"),2)
      declare_var 3 IFree
      return
        Node "account.sendMsg_#B0" (
          Node "Prelude.=:=" (
            reference_var 2 ,
            Node "Prelude.:" (
              reference_var 1 ,
              reference_var 3 ) ) ,
          reference_var 3 )
  function "account.sendMsg_#B0" 2
    code
      declare_var 4 ILhs (("account","sendMsg_#B0"),1)
      declare_var 3 ILhs (("account","sendMsg_#B0"),2)
      ATable 1 2 rigid
        reference_var 4
        "Prelude.False" =>
          return
            Node "Prelude.failed"
        "Prelude.True" =>
          return
            reference_var 3
  function "account.client" 1
    code
      declare_var 1 ILhs (("account","client"),1)
      declare_var 2 IFree
      declare_var 3 IFree
      return
        Node "account.client_#B2" (
          Node "Prelude.=:=" (
            reference_var 2 ,
            Node "account.sendMsg" (
              Node "account.Balance" (
                reference_var 3 ) ,
              reference_var 1 ) ) ,
          reference_var 2 ,
          reference_var 3 )
  function "account.client_#B2" 3
    code
      declare_var 4 ILhs (("account","client_#B2"),1)
      declare_var 2 ILhs (("account","client_#B2"),2)
      declare_var 3 ILhs (("account","client_#B2"),3)
      ATable 1 2 rigid
        reference_var 4
        "Prelude.False" =>
          return
            Node "Prelude.failed"
        "Prelude.True" =>
          return
            Node "account.client_#A2" (
              reference_var 2 ,
              reference_var 3 )
  function "account.client_#A2" 2
    code
      declare_var 2 ILhs (("account","client_#A2"),1)
      declare_var 3 ILhs (("account","client_#A2"),2)
      return
        Node "account.client_#A2_#B4" (
          Node "Prelude._impl#==#Prelude.Eq#Prelude.Int" (
            reference_var 3 ,
            int 50 ) ,
          reference_var 2 ,
          reference_var 3 )
  function "account.client_#A2_#B4" 3
    code
      declare_var 4 ILhs (("account","client_#A2_#B4"),1)
      declare_var 2 ILhs (("account","client_#A2_#B4"),2)
      declare_var 3 ILhs (("account","client_#A2_#B4"),3)
      ATable 1 2 rigid
        reference_var 4
        "Prelude.False" =>
          return
            Node "account.client_#A1" (
              reference_var 2 ,
              reference_var 3 )
        "Prelude.True" =>
          return
            Node "Prelude.=:=" (
              reference_var 2 ,
              Node "Prelude.[]" )
  function "account.client_#A1" 2
    code
      declare_var 2 ILhs (("account","client_#A1"),1)
      declare_var 3 ILhs (("account","client_#A1"),2)
      return
        Node "account.client_#A1_#B6" (
          Node "Prelude.apply" (
            Node "Prelude.apply" (
              Node "Prelude._impl#>#Prelude.Ord#Prelude.Int" ,
              reference_var 3 ) ,
            int 50 ) ,
          reference_var 2 )
  function "account.client_#A1_#B6" 2
    code
      declare_var 4 ILhs (("account","client_#A1_#B6"),1)
      declare_var 2 ILhs (("account","client_#A1_#B6"),2)
      ATable 1 2 rigid
        reference_var 4
        "Prelude.False" =>
          return
            Node "account.client" (
              Node "account.sendMsg" (
                Node "account.Deposit" (
                  int 70 ) ,
                reference_var 2 ) )
        "Prelude.True" =>
          return
            Node "account.client" (
              Node "account.sendMsg" (
                Node "account.Withdraw" (
                  int 30 ) ,
                reference_var 2 ) )
  function "account.goal3" 1
    code
      declare_var 1 ILhs (("account","goal3"),1)
      return
        Node "Prelude.&" (
          Node "account.make_account" (
            reference_var 1 ) ,
          Node "account.client" (
            Node "account.sendMsg" (
              Node "account.Deposit" (
                int 100 ) ,
              reference_var 1 ) ) )
  function "account.sprite_goal1" 0
    code
      declare_var 1 IFree
      return
        Node "Prelude.&>" (
          Node "account.goal1" (
            reference_var 1 ) ,
          reference_var 1 )
  function "account.sprite_goal2" 0
    code
      declare_var 1 IFree
      return
        Node "Prelude.&>" (
          Node "account.goal2" (
            reference_var 1 ) ,
          reference_var 1 )
  function "account.sprite_goal3" 0
    code
      declare_var 1 IFree
      return
        Node "Prelude.&>" (
          Node "account.goal3" (
            reference_var 1 ) ,
          reference_var 1 )
