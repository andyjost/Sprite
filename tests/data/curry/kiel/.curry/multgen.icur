IModule "multgen" ["Prelude"] [] [IFunction ("multgen","pairs") 2 [Declare (Variable 1 (ILhs (("multgen","pairs"),1))),Declare (Variable 2 (ILhs (("multgen","pairs"),2))),Return (Applic False ("Prelude","apply") [Applic False ("Prelude","concatMap") [PartApplic 1 (Applic False ("multgen","pairs._#lambda1") [Reference 2])],Reference 1])],IFunction ("multgen","pairs._#lambda1") 2 [Declare (Variable 1 (ILhs (("multgen","pairs._#lambda1"),1))),Declare (Variable 2 (ILhs (("multgen","pairs._#lambda1"),2))),Return (Applic False ("Prelude","map") [PartApplic 1 (Applic False ("multgen","pairs._#lambda1._#lambda2") [Reference 2]),Reference 1])],IFunction ("multgen","pairs._#lambda1._#lambda2") 2 [Declare (Variable 1 (ILhs (("multgen","pairs._#lambda1._#lambda2"),1))),Declare (Variable 2 (ILhs (("multgen","pairs._#lambda1._#lambda2"),2))),Return (Applic True ("Prelude","(,)") [Reference 1,Reference 2])],IFunction ("multgen","goal1") 0 [Return (Applic False ("multgen","pairs") [Applic True ("Prelude",":") [BuiltinVariant (Bint 1),Applic True ("Prelude",":") [BuiltinVariant (Bint 2),Applic True ("Prelude",":") [BuiltinVariant (Bint 3),Applic True ("Prelude","[]") []]]],Applic True ("Prelude",":") [BuiltinVariant (Bint 4),Applic True ("Prelude",":") [BuiltinVariant (Bint 5),Applic True ("Prelude","[]") []]]])],IFunction ("multgen","triangle") 1 [Declare (Variable 1 (ILhs (("multgen","triangle"),1))),Return (Applic False ("Prelude","apply") [Applic False ("Prelude","concatMap") [PartApplic 1 (Applic False ("multgen","triangle._#lambda3") [])],Applic False ("Prelude","apply") [Applic False ("Prelude","apply") [Applic False ("Prelude","_impl#enumFromTo#Prelude.Enum#Prelude.Int") [],BuiltinVariant (Bint 1)],Reference 1]])],IFunction ("multgen","triangle._#lambda3") 1 [Declare (Variable 1 (ILhs (("multgen","triangle._#lambda3"),1))),Return (Applic False ("Prelude","map") [PartApplic 1 (Applic False ("multgen","triangle._#lambda3._#lambda4") [Reference 1]),Applic False ("Prelude","apply") [Applic False ("Prelude","apply") [Applic False ("Prelude","_impl#enumFromTo#Prelude.Enum#Prelude.Int") [],BuiltinVariant (Bint 1)],Reference 1]])],IFunction ("multgen","triangle._#lambda3._#lambda4") 2 [Declare (Variable 1 (ILhs (("multgen","triangle._#lambda3._#lambda4"),1))),Declare (Variable 2 (ILhs (("multgen","triangle._#lambda3._#lambda4"),2))),Return (Applic True ("Prelude","(,)") [Reference 1,Reference 2])],IFunction ("multgen","goal2") 0 [Return (Applic False ("multgen","triangle") [BuiltinVariant (Bint 3)])],IFunction ("multgen","pyTriple") 4 [Declare (Variable 1 (ILhs (("multgen","pyTriple"),1))),Declare (Variable 2 (ILhs (("multgen","pyTriple"),2))),Declare (Variable 3 (ILhs (("multgen","pyTriple"),3))),Declare (Variable 4 (ILhs (("multgen","pyTriple"),4))),Return (Applic False ("Prelude","apply") [Applic False ("Prelude","concatMap") [PartApplic 1 (Applic False ("multgen","pyTriple._#lambda5") [Reference 4,Reference 1,Reference 2,Reference 3])],Applic False ("Prelude","apply") [Applic False ("Prelude","apply") [Applic False ("Prelude","enumFromTo") [Reference 1],Applic False ("Prelude","apply") [Applic False ("Prelude","fromInt") [Reference 3],BuiltinVariant (Bint 2)]],Reference 4]])],IFunction ("multgen","pyTriple._#lambda5") 5 [Declare (Variable 1 (ILhs (("multgen","pyTriple._#lambda5"),1))),Declare (Variable 2 (ILhs (("multgen","pyTriple._#lambda5"),2))),Declare (Variable 3 (ILhs (("multgen","pyTriple._#lambda5"),3))),Declare (Variable 4 (ILhs (("multgen","pyTriple._#lambda5"),4))),Declare (Variable 5 (ILhs (("multgen","pyTriple._#lambda5"),5))),Return (Applic False ("Prelude","apply") [Applic False ("Prelude","concatMap") [PartApplic 1 (Applic False ("multgen","pyTriple._#lambda5._#lambda6") [Reference 1,Reference 5,Reference 2,Reference 3,Reference 4])],Applic False ("Prelude","apply") [Applic False ("Prelude","apply") [Applic False ("Prelude","enumFromTo") [Reference 2],Applic False ("Prelude","apply") [Applic False ("Prelude","apply") [Applic False ("Prelude","+") [Reference 4],Reference 5],Applic False ("Prelude","apply") [Applic False ("Prelude","fromInt") [Reference 4],BuiltinVariant (Bint 1)]]],Reference 1]])],IFunction ("multgen","pyTriple._#lambda5._#lambda6") 6 [Declare (Variable 1 (ILhs (("multgen","pyTriple._#lambda5._#lambda6"),1))),Declare (Variable 2 (ILhs (("multgen","pyTriple._#lambda5._#lambda6"),2))),Declare (Variable 3 (ILhs (("multgen","pyTriple._#lambda5._#lambda6"),3))),Declare (Variable 4 (ILhs (("multgen","pyTriple._#lambda5._#lambda6"),4))),Declare (Variable 5 (ILhs (("multgen","pyTriple._#lambda5._#lambda6"),5))),Declare (Variable 6 (ILhs (("multgen","pyTriple._#lambda5._#lambda6"),6))),Return (Applic False ("Prelude","apply") [Applic False ("Prelude","concatMap") [PartApplic 1 (Applic False ("multgen","pyTriple._#lambda5._#lambda6._#lambda7") [Reference 2,Reference 6,Reference 4,Reference 5])],Applic False ("Prelude","apply") [Applic False ("Prelude","apply") [Applic False ("Prelude","enumFromTo") [Reference 3],Applic False ("Prelude","apply") [Applic False ("Prelude","apply") [Applic False ("Prelude","+") [Reference 5],Reference 6],Applic False ("Prelude","apply") [Applic False ("Prelude","fromInt") [Reference 5],BuiltinVariant (Bint 1)]]],Reference 1]])],IFunction ("multgen","pyTriple._#lambda5._#lambda6._#lambda7") 5 [Declare (Variable 1 (ILhs (("multgen","pyTriple._#lambda5._#lambda6._#lambda7"),1))),Declare (Variable 2 (ILhs (("multgen","pyTriple._#lambda5._#lambda6._#lambda7"),2))),Declare (Variable 3 (ILhs (("multgen","pyTriple._#lambda5._#lambda6._#lambda7"),3))),Declare (Variable 4 (ILhs (("multgen","pyTriple._#lambda5._#lambda6._#lambda7"),4))),Declare (Variable 5 (ILhs (("multgen","pyTriple._#lambda5._#lambda6._#lambda7"),5))),Return (Applic False ("multgen","pyTriple._#lambda5._#lambda6._#lambda7_#B0") [Applic False ("Prelude","apply") [Applic False ("Prelude","apply") [Applic False ("Prelude","==") [Reference 3],Applic False ("Prelude","apply") [Applic False ("Prelude","apply") [Applic False ("Prelude","+") [Reference 4],Applic False ("Prelude","apply") [Applic False ("Prelude","apply") [Applic False ("Prelude","*") [Reference 4],Reference 1],Reference 1]],Applic False ("Prelude","apply") [Applic False ("Prelude","apply") [Applic False ("Prelude","*") [Reference 4],Reference 2],Reference 2]]],Applic False ("Prelude","apply") [Applic False ("Prelude","apply") [Applic False ("Prelude","*") [Reference 4],Reference 5],Reference 5]],Reference 1,Reference 2,Reference 5])],IFunction ("multgen","pyTriple._#lambda5._#lambda6._#lambda7_#B0") 4 [Declare (Variable 6 (ILhs (("multgen","pyTriple._#lambda5._#lambda6._#lambda7_#B0"),1))),Declare (Variable 1 (ILhs (("multgen","pyTriple._#lambda5._#lambda6._#lambda7_#B0"),2))),Declare (Variable 2 (ILhs (("multgen","pyTriple._#lambda5._#lambda6._#lambda7_#B0"),3))),Declare (Variable 5 (ILhs (("multgen","pyTriple._#lambda5._#lambda6._#lambda7_#B0"),4))),ATable 1 False (Reference 6) [(IConstructor ("Prelude","False") 0,[Return (Applic True ("Prelude","[]") [])]),(IConstructor ("Prelude","True") 0,[Return (Applic True ("Prelude",":") [Applic True ("Prelude","(,,)") [Reference 1,Reference 2,Reference 5],Applic True ("Prelude","[]") []])])]],IFunction ("multgen","goal3") 0 [Return (Applic False ("multgen","pyTriple") [Applic False ("Prelude","_inst#Prelude.Enum#Prelude.Int") [],Applic False ("Prelude","_inst#Prelude.Eq#Prelude.Int") [],Applic False ("Prelude","_inst#Prelude.Num#Prelude.Int") [],BuiltinVariant (Bint 20)])]]