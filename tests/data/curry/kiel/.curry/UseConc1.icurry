interface UseConc1 where {
import Prelude;
goal1 0 :: Prelude.Num a => [a];
goal2 0 :: Prelude.Num a => [a];
goal3 0 :: Prelude.Num a => [a];
main 0 :: ([Prelude.Int], [Prelude.Int], [Prelude.Int]);
hiding class Prelude.Num a;
hiding data Prelude.Int;
instance Prelude.Num Prelude.Float {
  fromInt 1;
  signum 1;
  abs 1;
  negate 1;
  (*) 2;
  (-) 2;
  (+) 2
} {-# MODULE Prelude #-};
instance Prelude.Num Prelude.Int {
  fromInt 1;
  signum 1;
  abs 1;
  negate 1;
  (*) 2;
  (-) 2;
  (+) 2
} {-# MODULE Prelude #-};
hiding data Prelude.Float
}