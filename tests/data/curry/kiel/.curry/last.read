
module "last"
  import
    "Prelude"
  function "last.append" 2
    code
      declare_var 1 ILhs (("last","append"),1)
      declare_var 2 ILhs (("last","append"),2)
      ATable 1 2 flex
        reference_var 1
        "Prelude.[]" =>
          return
            reference_var 2
        "Prelude.:" =>
          declare_var 3 IVar 1 (("Prelude",":"),1)
          declare_var 4 IVar 1 (("Prelude",":"),2)
          return
            Node "Prelude.:" (
              reference_var 3 ,
              Node "last.append" (
                reference_var 4 ,
                reference_var 2 ) )
  function "last.last" 1
    code
      declare_var 1 ILhs (("last","last"),1)
      declare_var 2 IFree
      declare_var 3 IFree
      return
        Node "last.last_#B0" (
          Node "Prelude.=:=" (
            Node "last.append" (
              reference_var 3 ,
              Node "Prelude.:" (
                reference_var 2 ,
                Node "Prelude.[]" ) ) ,
            reference_var 1 ) ,
          reference_var 2 )
  function "last.last_#B0" 2
    code
      declare_var 4 ILhs (("last","last_#B0"),1)
      declare_var 2 ILhs (("last","last_#B0"),2)
      ATable 1 2 rigid
        reference_var 4
        "Prelude.False" =>
          return
            Node "Prelude.failed"
        "Prelude.True" =>
          return
            reference_var 2
  function "last.goal" 1
    code
      declare_var 1 ILhs (("last","goal"),1)
      return
        Node "last.last" (
          Node "Prelude.:" (
            Node "Prelude.apply" (
              Node "Prelude.fromInt" (
                reference_var 1 ) ,
              int 1 ) ,
            Node "Prelude.:" (
              Node "Prelude.apply" (
                Node "Prelude.fromInt" (
                  reference_var 1 ) ,
                int 2 ) ,
              Node "Prelude.:" (
                Node "Prelude.apply" (
                  Node "Prelude.fromInt" (
                    reference_var 1 ) ,
                  int 3 ) ,
                Node "Prelude.:" (
                  Node "Prelude.apply" (
                    Node "Prelude.fromInt" (
                      reference_var 1 ) ,
                    int 4 ) ,
                  Node "Prelude.[]" ) ) ) ) )
