(IProg "multgen" ["Prelude"] [] [(IFunction ("multgen","pairs",0) 2 Public [] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (IReturn (IFCall ("Prelude","apply",737) [(IFCall ("Prelude","concatMap",691) [(IFPCall ("multgen","pairs._#lambda1",6) 1 [(IVar 2)])]),(IVar 1)]))))),(IFunction ("multgen","pairs._#lambda1",6) 2 Private [] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (IReturn (IFCall ("Prelude","map",678) [(IFPCall ("multgen","pairs._#lambda1._#lambda2",7) 1 [(IVar 2)]),(IVar 1)]))))),(IFunction ("multgen","pairs._#lambda1._#lambda2",7) 2 Private [] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (IReturn (ICCall ("Prelude","(,)",0) [(IVar 1),(IVar 2)]))))),(IFunction ("multgen","goal1",1) 0 Public [] (IFuncBody (IBlock [] [] (IReturn (IFCall ("multgen","pairs",0) [(ICCall ("Prelude",":",1) [(ILit (IInt 1)),(ICCall ("Prelude",":",1) [(ILit (IInt 2)),(ICCall ("Prelude",":",1) [(ILit (IInt 3)),(ICCall ("Prelude","[]",0) [])])])]),(ICCall ("Prelude",":",1) [(ILit (IInt 4)),(ICCall ("Prelude",":",1) [(ILit (IInt 5)),(ICCall ("Prelude","[]",0) [])])])]))))),(IFunction ("multgen","triangle",2) 1 Public [] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (IReturn (IFCall ("Prelude","apply",737) [(IFCall ("Prelude","concatMap",691) [(IFPCall ("multgen","triangle._#lambda3",8) 1 [])]),(IFCall ("Prelude","_impl#enumFromTo#Prelude.Enum#Prelude.Int",297) [(ILit (IInt 1)),(IVar 1)])]))))),(IFunction ("multgen","triangle._#lambda3",8) 1 Private [] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (IReturn (IFCall ("Prelude","map",678) [(IFPCall ("multgen","triangle._#lambda3._#lambda4",9) 1 [(IVar 1)]),(IFCall ("Prelude","_impl#enumFromTo#Prelude.Enum#Prelude.Int",297) [(ILit (IInt 1)),(IVar 1)])]))))),(IFunction ("multgen","triangle._#lambda3._#lambda4",9) 2 Private [] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (IReturn (ICCall ("Prelude","(,)",0) [(IVar 1),(IVar 2)]))))),(IFunction ("multgen","goal2",3) 0 Public [] (IFuncBody (IBlock [] [] (IReturn (IFCall ("multgen","triangle",2) [(ILit (IInt 3))]))))),(IFunction ("multgen","pyTriple",4) 4 Public [] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2),(IVarDecl 3),(IVarDecl 4)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1])),(IVarAssign 3 (IVarAccess 0 [2])),(IVarAssign 4 (IVarAccess 0 [3]))] (IReturn (IFCall ("Prelude","apply",737) [(IFCall ("Prelude","concatMap",691) [(IFPCall ("multgen","pyTriple._#lambda5",10) 1 [(IVar 4),(IVar 1),(IVar 2),(IVar 3)])]),(IFCall ("Prelude","apply",737) [(IFCall ("Prelude","apply",737) [(IFCall ("Prelude","enumFromTo",766) [(IVar 1)]),(IFCall ("Prelude","apply",737) [(IFCall ("Prelude","fromInt",774) [(IVar 3)]),(ILit (IInt 2))])]),(IVar 4)])]))))),(IFunction ("multgen","pyTriple._#lambda5",10) 5 Private [] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2),(IVarDecl 3),(IVarDecl 4),(IVarDecl 5)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1])),(IVarAssign 3 (IVarAccess 0 [2])),(IVarAssign 4 (IVarAccess 0 [3])),(IVarAssign 5 (IVarAccess 0 [4]))] (IReturn (IFCall ("Prelude","apply",737) [(IFCall ("Prelude","concatMap",691) [(IFPCall ("multgen","pyTriple._#lambda5._#lambda6",11) 1 [(IVar 1),(IVar 5),(IVar 2),(IVar 3),(IVar 4)])]),(IFCall ("Prelude","apply",737) [(IFCall ("Prelude","apply",737) [(IFCall ("Prelude","enumFromTo",766) [(IVar 2)]),(IFCall ("Prelude","apply",737) [(IFCall ("Prelude","apply",737) [(IFCall ("Prelude","+",768) [(IVar 4)]),(IVar 5)]),(IFCall ("Prelude","apply",737) [(IFCall ("Prelude","fromInt",774) [(IVar 4)]),(ILit (IInt 1))])])]),(IVar 1)])]))))),(IFunction ("multgen","pyTriple._#lambda5._#lambda6",11) 6 Private [] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2),(IVarDecl 3),(IVarDecl 4),(IVarDecl 5),(IVarDecl 6)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1])),(IVarAssign 3 (IVarAccess 0 [2])),(IVarAssign 4 (IVarAccess 0 [3])),(IVarAssign 5 (IVarAccess 0 [4])),(IVarAssign 6 (IVarAccess 0 [5]))] (IReturn (IFCall ("Prelude","apply",737) [(IFCall ("Prelude","concatMap",691) [(IFPCall ("multgen","pyTriple._#lambda5._#lambda6._#lambda7",12) 1 [(IVar 2),(IVar 6),(IVar 4),(IVar 5)])]),(IFCall ("Prelude","apply",737) [(IFCall ("Prelude","apply",737) [(IFCall ("Prelude","enumFromTo",766) [(IVar 3)]),(IFCall ("Prelude","apply",737) [(IFCall ("Prelude","apply",737) [(IFCall ("Prelude","+",768) [(IVar 5)]),(IVar 6)]),(IFCall ("Prelude","apply",737) [(IFCall ("Prelude","fromInt",774) [(IVar 5)]),(ILit (IInt 1))])])]),(IVar 1)])]))))),(IFunction ("multgen","pyTriple._#lambda5._#lambda6._#lambda7",12) 5 Private [] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2),(IVarDecl 3),(IVarDecl 4),(IVarDecl 5)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1])),(IVarAssign 3 (IVarAccess 0 [2])),(IVarAssign 4 (IVarAccess 0 [3])),(IVarAssign 5 (IVarAccess 0 [4]))] (IReturn (IFCall ("multgen","pyTriple._#lambda5._#lambda6._#lambda7_COMPLEXCASE0",13) [(IVar 1),(IVar 2),(IVar 5),(IFCall ("Prelude","apply",737) [(IFCall ("Prelude","apply",737) [(IFCall ("Prelude","==",743) [(IVar 3)]),(IFCall ("Prelude","apply",737) [(IFCall ("Prelude","apply",737) [(IFCall ("Prelude","+",768) [(IVar 4)]),(IFCall ("Prelude","apply",737) [(IFCall ("Prelude","apply",737) [(IFCall ("Prelude","*",770) [(IVar 4)]),(IVar 1)]),(IVar 1)])]),(IFCall ("Prelude","apply",737) [(IFCall ("Prelude","apply",737) [(IFCall ("Prelude","*",770) [(IVar 4)]),(IVar 2)]),(IVar 2)])])]),(IFCall ("Prelude","apply",737) [(IFCall ("Prelude","apply",737) [(IFCall ("Prelude","*",770) [(IVar 4)]),(IVar 5)]),(IVar 5)])])]))))),(IFunction ("multgen","pyTriple._#lambda5._#lambda6._#lambda7_COMPLEXCASE0",13) 4 Private [3] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2),(IVarDecl 5),(IVarDecl 6)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1])),(IVarAssign 5 (IVarAccess 0 [2])),(IVarAssign 6 (IVarAccess 0 [3]))] (ICaseCons 6 [(IConsBranch ("Prelude","False",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) [])))),(IConsBranch ("Prelude","True",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude",":",1) [(ICCall ("Prelude","(,,)",0) [(IVar 1),(IVar 2),(IVar 5)]),(ICCall ("Prelude","[]",0) [])]))))])))),(IFunction ("multgen","goal3",5) 0 Public [] (IFuncBody (IBlock [] [] (IReturn (IFCall ("multgen","pyTriple",4) [(IFCall ("Prelude","_inst#Prelude.Enum#Prelude.Int",290) []),(IFCall ("Prelude","_inst#Prelude.Eq#Prelude.Int",40) []),(IFCall ("Prelude","_inst#Prelude.Num#Prelude.Int",333) []),(ILit (IInt 20))])))))])