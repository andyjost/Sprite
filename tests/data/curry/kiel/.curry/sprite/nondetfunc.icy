(IProg "nondetfunc" ["Prelude"] [(IDataType ("nondetfunc","Nat",0) [(("nondetfunc","o",0),0),(("nondetfunc","s",1),1)])] [(IFunction ("nondetfunc","_inst#Prelude.Data#nondetfunc.Nat",0) 0 Public [] (IFuncBody (IBlock [] [] (IReturn (ICCall ("Prelude","_Dict#Data",0) [(IFPCall ("nondetfunc","_impl#===#Prelude.Data#nondetfunc.Nat",1) 2 []),(IFPCall ("nondetfunc","_impl#aValue#Prelude.Data#nondetfunc.Nat",2) 1 [])]))))),(IFunction ("nondetfunc","_impl#===#Prelude.Data#nondetfunc.Nat",1) 2 Public [0] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (ICaseCons 1 [(IConsBranch ("nondetfunc","o",0) 0 (IBlock [] [] (IReturn (IFCall ("nondetfunc","_impl#===#Prelude.Data#nondetfunc.Nat_CASE0",19) [(IVar 2)])))),(IConsBranch ("nondetfunc","s",1) 1 (IBlock [(IVarDecl 4)] [(IVarAssign 4 (IVarAccess 1 [0]))] (IReturn (IFCall ("nondetfunc","_impl#===#Prelude.Data#nondetfunc.Nat_CASE1",18) [(IVar 2),(IVar 4)]))))])))),(IFunction ("nondetfunc","_impl#===#Prelude.Data#nondetfunc.Nat_CASE1",18) 2 Private [0] (IFuncBody (IBlock [(IVarDecl 2),(IVarDecl 4)] [(IVarAssign 2 (IVarAccess 0 [0])),(IVarAssign 4 (IVarAccess 0 [1]))] (ICaseCons 2 [(IConsBranch ("nondetfunc","o",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("nondetfunc","s",1) 1 (IBlock [(IVarDecl 5)] [(IVarAssign 5 (IVarAccess 2 [0]))] (IReturn (IFCall ("nondetfunc","_impl#===#Prelude.Data#nondetfunc.Nat",1) [(IVar 4),(IVar 5)]))))])))),(IFunction ("nondetfunc","_impl#===#Prelude.Data#nondetfunc.Nat_CASE0",19) 1 Private [0] (IFuncBody (IBlock [(IVarDecl 2)] [(IVarAssign 2 (IVarAccess 0 [0]))] (ICaseCons 2 [(IConsBranch ("nondetfunc","o",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",1) [])))),(IConsBranch ("nondetfunc","s",1) 1 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) []))))])))),(IFunction ("nondetfunc","_impl#aValue#Prelude.Data#nondetfunc.Nat",2) 1 Public [0] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (ICaseCons 1 [(IConsBranch ("Prelude","()",0) 0 (IBlock [] [] (IReturn (IOr (ICCall ("nondetfunc","o",0) []) (ICCall ("nondetfunc","s",1) [(IFCall ("nondetfunc","_impl#aValue#Prelude.Data#nondetfunc.Nat",2) [(ICCall ("Prelude","()",0) [])])])))))])))),(IFunction ("nondetfunc","choose",3) 2 Public [] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (IReturn (IOr (IVar 1) (IVar 2)))))),(IFunction ("nondetfunc","insert",4) 2 Public [1] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (ICaseCons 2 [(IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude",":",1) [(IVar 1),(ICCall ("Prelude","[]",0) [])])))),(IConsBranch ("Prelude",":",1) 2 (IBlock [(IVarDecl 3),(IVarDecl 4)] [(IVarAssign 3 (IVarAccess 2 [0])),(IVarAssign 4 (IVarAccess 2 [1]))] (IReturn (IFCall ("nondetfunc","choose",3) [(ICCall ("Prelude",":",1) [(IVar 1),(ICCall ("Prelude",":",1) [(IVar 3),(IVar 4)])]),(ICCall ("Prelude",":",1) [(IVar 3),(IFCall ("nondetfunc","insert",4) [(IVar 1),(IVar 4)])])]))))])))),(IFunction ("nondetfunc","permut",5) 1 Public [0] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (ICaseCons 1 [(IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) [])))),(IConsBranch ("Prelude",":",1) 2 (IBlock [(IVarDecl 2),(IVarDecl 3)] [(IVarAssign 2 (IVarAccess 1 [0])),(IVarAssign 3 (IVarAccess 1 [1]))] (IReturn (IFCall ("nondetfunc","insert",4) [(IVar 2),(IFCall ("nondetfunc","permut",5) [(IVar 3)])]))))])))),(IFunction ("nondetfunc","sort",6) 2 Public [] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (IReturn (IFCall ("nondetfunc","rId",7) [(IFPCall ("nondetfunc","sorted",10) 1 [(IVar 1)]),(IFCall ("nondetfunc","permut",5) [(IVar 2)])]))))),(IFunction ("nondetfunc","rId",7) 2 Public [] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (IReturn (IFCall ("nondetfunc","rId_COMPLEXCASE0",20) [(IVar 2),(IFCall ("Prelude","apply",737) [(IVar 1),(IVar 2)])]))))),(IFunction ("nondetfunc","rId_COMPLEXCASE0",20) 2 Private [1] (IFuncBody (IBlock [(IVarDecl 2),(IVarDecl 3)] [(IVarAssign 2 (IVarAccess 0 [0])),(IVarAssign 3 (IVarAccess 0 [1]))] (ICaseCons 3 [(IConsBranch ("Prelude","False",0) 0 (IBlock [] [] IExempt)),(IConsBranch ("Prelude","True",1) 0 (IBlock [] [] (IReturn (IVar 2))))])))),(IFunction ("nondetfunc","wheresort",8) 2 Public [] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2),(IVarDecl 3)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1])),(IVarAssign 3 (IFCall ("nondetfunc","permut",5) [(IVar 2)]))] (IReturn (IFCall ("nondetfunc","wheresort_COMPLEXCASE0",21) [(IVar 3),(IFCall ("nondetfunc","sorted",10) [(IVar 1),(IVar 3)])]))))),(IFunction ("nondetfunc","wheresort_COMPLEXCASE0",21) 2 Private [1] (IFuncBody (IBlock [(IVarDecl 3),(IVarDecl 4)] [(IVarAssign 3 (IVarAccess 0 [0])),(IVarAssign 4 (IVarAccess 0 [1]))] (ICaseCons 4 [(IConsBranch ("Prelude","False",0) 0 (IBlock [] [] IExempt)),(IConsBranch ("Prelude","True",1) 0 (IBlock [] [] (IReturn (IVar 3))))])))),(IFunction ("nondetfunc","strictsort",9) 3 Public [] (IFuncBody (IBlock [(IVarDecl 2),(IVarDecl 3),(IFreeDecl 4)] [(IVarAssign 2 (IVarAccess 0 [1])),(IVarAssign 3 (IVarAccess 0 [2]))] (IReturn (IFCall ("nondetfunc","strictsort_COMPLEXCASE0",22) [(IVar 4),(IFCall ("Prelude","&",730) [(IFCall ("Prelude","=:=",727) [(IVar 4),(IFCall ("nondetfunc","permut",5) [(IVar 3)])]),(IFCall ("Prelude","=:=",727) [(IFCall ("nondetfunc","sorted",10) [(IVar 2),(IVar 4)]),(ICCall ("Prelude","True",1) [])])])]))))),(IFunction ("nondetfunc","strictsort_COMPLEXCASE0",22) 2 Private [1] (IFuncBody (IBlock [(IVarDecl 4),(IVarDecl 5)] [(IVarAssign 4 (IVarAccess 0 [0])),(IVarAssign 5 (IVarAccess 0 [1]))] (ICaseCons 5 [(IConsBranch ("Prelude","False",0) 0 (IBlock [] [] IExempt)),(IConsBranch ("Prelude","True",1) 0 (IBlock [] [] (IReturn (IVar 4))))])))),(IFunction ("nondetfunc","sorted",10) 2 Public [1] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (ICaseCons 2 [(IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",1) [])))),(IConsBranch ("Prelude",":",1) 2 (IBlock [(IVarDecl 3),(IVarDecl 4)] [(IVarAssign 3 (IVarAccess 2 [0])),(IVarAssign 4 (IVarAccess 2 [1]))] (IReturn (IFCall ("nondetfunc","sorted_CASE0",23) [(IVar 4),(IVar 3),(IVar 1)]))))])))),(IFunction ("nondetfunc","sorted_CASE0",23) 3 Private [0] (IFuncBody (IBlock [(IVarDecl 4),(IVarDecl 3),(IVarDecl 1)] [(IVarAssign 4 (IVarAccess 0 [0])),(IVarAssign 3 (IVarAccess 0 [1])),(IVarAssign 1 (IVarAccess 0 [2]))] (ICaseCons 4 [(IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",1) [])))),(IConsBranch ("Prelude",":",1) 2 (IBlock [(IVarDecl 5),(IVarDecl 6)] [(IVarAssign 5 (IVarAccess 4 [0])),(IVarAssign 6 (IVarAccess 4 [1]))] (IReturn (IFCall ("nondetfunc","sorted_COMPLEXCASE1",24) [(IVar 1),(IVar 5),(IVar 6),(IFCall ("Prelude","apply",737) [(IFCall ("Prelude","apply",737) [(IFCall ("Prelude","<=",749) [(IVar 1)]),(IVar 3)]),(IVar 5)])]))))])))),(IFunction ("nondetfunc","sorted_COMPLEXCASE1",24) 4 Private [3] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 5),(IVarDecl 6),(IVarDecl 7)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 5 (IVarAccess 0 [1])),(IVarAssign 6 (IVarAccess 0 [2])),(IVarAssign 7 (IVarAccess 0 [3]))] (ICaseCons 7 [(IConsBranch ("Prelude","False",0) 0 (IBlock [] [] IExempt)),(IConsBranch ("Prelude","True",1) 0 (IBlock [] [] (IReturn (IFCall ("nondetfunc","sorted",10) [(IVar 1),(ICCall ("Prelude",":",1) [(IVar 5),(IVar 6)])]))))])))),(IFunction ("nondetfunc","goal1",11) 0 Public [] (IFuncBody (IBlock [] [] (IReturn (IFCall ("nondetfunc","sort",6) [(IFCall ("Prelude","_inst#Prelude.Ord#Prelude.Int",85) []),(ICCall ("Prelude",":",1) [(ILit (IInt 4)),(ICCall ("Prelude",":",1) [(ILit (IInt 3)),(ICCall ("Prelude",":",1) [(ILit (IInt 2)),(ICCall ("Prelude",":",1) [(ILit (IInt 1)),(ICCall ("Prelude","[]",0) [])])])])])]))))),(IFunction ("nondetfunc","goal2",12) 0 Public [] (IFuncBody (IBlock [] [] (IReturn (IFCall ("nondetfunc","wheresort",8) [(IFCall ("Prelude","_inst#Prelude.Ord#Prelude.Int",85) []),(ICCall ("Prelude",":",1) [(ILit (IInt 4)),(ICCall ("Prelude",":",1) [(ILit (IInt 3)),(ICCall ("Prelude",":",1) [(ILit (IInt 2)),(ICCall ("Prelude",":",1) [(ILit (IInt 1)),(ICCall ("Prelude","[]",0) [])])])])])]))))),(IFunction ("nondetfunc","goal3",13) 0 Public [] (IFuncBody (IBlock [] [] (IReturn (IFCall ("nondetfunc","strictsort",9) [(IFCall ("Prelude","_inst#Prelude.Data#Prelude.Int",5) []),(IFCall ("Prelude","_inst#Prelude.Ord#Prelude.Int",85) []),(ICCall ("Prelude",":",1) [(ILit (IInt 4)),(ICCall ("Prelude",":",1) [(ILit (IInt 3)),(ICCall ("Prelude",":",1) [(ILit (IInt 2)),(ICCall ("Prelude",":",1) [(ILit (IInt 1)),(ICCall ("Prelude","[]",0) [])])])])])]))))),(IFunction ("nondetfunc","coin",14) 0 Public [] (IFuncBody (IBlock [] [] (IReturn (IOr (ICCall ("nondetfunc","o",0) []) (ICCall ("nondetfunc","s",1) [(ICCall ("nondetfunc","o",0) [])])))))),(IFunction ("nondetfunc","add",15) 2 Public [0] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (ICaseCons 1 [(IConsBranch ("nondetfunc","o",0) 0 (IBlock [] [] (IReturn (IVar 2)))),(IConsBranch ("nondetfunc","s",1) 1 (IBlock [(IVarDecl 3)] [(IVarAssign 3 (IVarAccess 1 [0]))] (IReturn (ICCall ("nondetfunc","s",1) [(IFCall ("nondetfunc","add",15) [(IVar 3),(IVar 2)])]))))])))),(IFunction ("nondetfunc","double",16) 1 Public [] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (IReturn (IFCall ("nondetfunc","add",15) [(IVar 1),(IVar 1)]))))),(IFunction ("nondetfunc","goal4",17) 0 Public [] (IFuncBody (IBlock [] [] (IReturn (IFCall ("nondetfunc","double",16) [(IFCall ("nondetfunc","coin",14) [])])))))])