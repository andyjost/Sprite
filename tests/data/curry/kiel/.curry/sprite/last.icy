(IProg "last" ["Prelude"] [] [(IFunction ("last","append",0) 2 Public [0] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (ICaseCons 1 [(IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (IVar 2)))),(IConsBranch ("Prelude",":",1) 2 (IBlock [(IVarDecl 3),(IVarDecl 4)] [(IVarAssign 3 (IVarAccess 1 [0])),(IVarAssign 4 (IVarAccess 1 [1]))] (IReturn (ICCall ("Prelude",":",1) [(IVar 3),(IFCall ("last","append",0) [(IVar 4),(IVar 2)])]))))])))),(IFunction ("last","last",1) 2 Public [] (IFuncBody (IBlock [(IVarDecl 2),(IFreeDecl 3),(IFreeDecl 4)] [(IVarAssign 2 (IVarAccess 0 [1]))] (IReturn (IFCall ("last","last_COMPLEXCASE0",3) [(IVar 3),(IFCall ("Prelude","=:=",727) [(IFCall ("last","append",0) [(IVar 4),(ICCall ("Prelude",":",1) [(IVar 3),(ICCall ("Prelude","[]",0) [])])]),(IVar 2)])]))))),(IFunction ("last","last_COMPLEXCASE0",3) 2 Private [1] (IFuncBody (IBlock [(IVarDecl 3),(IVarDecl 5)] [(IVarAssign 3 (IVarAccess 0 [0])),(IVarAssign 5 (IVarAccess 0 [1]))] (ICaseCons 5 [(IConsBranch ("Prelude","False",0) 0 (IBlock [] [] IExempt)),(IConsBranch ("Prelude","True",1) 0 (IBlock [] [] (IReturn (IVar 3))))])))),(IFunction ("last","goal",2) 0 Public [] (IFuncBody (IBlock [] [] (IReturn (IFCall ("last","last",1) [(IFCall ("Prelude","_inst#Prelude.Data#Prelude.Int",5) []),(ICCall ("Prelude",":",1) [(ILit (IInt 1)),(ICCall ("Prelude",":",1) [(ILit (IInt 2)),(ICCall ("Prelude",":",1) [(ILit (IInt 3)),(ICCall ("Prelude",":",1) [(ILit (IInt 4)),(ICCall ("Prelude","[]",0) [])])])])])])))))])