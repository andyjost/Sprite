(IProg "infresiduate" ["Prelude"] [] [(IFunction ("infresiduate","conc",0) 2 Public [] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (IReturn (IFCall ("infresiduate","append",1) [(IVar 1),(IVar 2)]))))),(IFunction ("infresiduate","append",1) 2 Public [0] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (ICaseCons 1 [(IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (IVar 2)))),(IConsBranch ("Prelude",":",1) 2 (IBlock [(IVarDecl 3),(IVarDecl 4)] [(IVarAssign 3 (IVarAccess 1 [0])),(IVarAssign 4 (IVarAccess 1 [1]))] (IReturn (ICCall ("Prelude",":",1) [(IVar 3),(IFCall ("infresiduate","append",1) [(IVar 4),(IVar 2)])]))))])))),(IFunction ("infresiduate","rev",2) 3 Public [2] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2),(IVarDecl 3)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1])),(IVarAssign 3 (IVarAccess 0 [2]))] (ICaseCons 3 [(IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (IFCall ("infresiduate","rev_CASE0",6) [(IVar 2)])))),(IConsBranch ("Prelude",":",1) 2 (IBlock [(IVarDecl 4),(IVarDecl 5)] [(IVarAssign 4 (IVarAccess 3 [0])),(IVarAssign 5 (IVarAccess 3 [1]))] (IReturn (IFCall ("infresiduate","rev_FREE1",5) [(IVar 4),(IVar 2),(IVar 1),(IVar 5)]))))])))),(IFunction ("infresiduate","rev_FREE1",5) 4 Private [] (IFuncBody (IBlock [(IVarDecl 4),(IVarDecl 2),(IVarDecl 1),(IVarDecl 5),(IFreeDecl 6)] [(IVarAssign 4 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1])),(IVarAssign 1 (IVarAccess 0 [2])),(IVarAssign 5 (IVarAccess 0 [3]))] (IReturn (IFCall ("Prelude","&",730) [(IFCall ("Prelude","=:=",727) [(IFCall ("infresiduate","conc",0) [(IVar 6),(ICCall ("Prelude",":",1) [(IVar 4),(ICCall ("Prelude","[]",0) [])])]),(IVar 2)]),(IFCall ("infresiduate","rev",2) [(IVar 1),(IVar 6),(IVar 5)])]))))),(IFunction ("infresiduate","rev_CASE0",6) 1 Private [0] (IFuncBody (IBlock [(IVarDecl 2)] [(IVarAssign 2 (IVarAccess 0 [0]))] (ICaseCons 2 [(IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","success",724) [])))),(IConsBranch ("Prelude",":",1) 2 (IBlock [] [] IExempt))])))),(IFunction ("infresiduate","goal",3) 3 Public [] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2),(IVarDecl 3)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1])),(IVarAssign 3 (IVarAccess 0 [2]))] (IReturn (IFCall ("infresiduate","rev",2) [(IVar 1),(ICCall ("Prelude",":",1) [(IFCall ("Prelude","apply",737) [(IFCall ("Prelude","fromInt",774) [(IVar 2)]),(ILit (IInt 0))]),(ICCall ("Prelude","[]",0) [])]),(IVar 3)]))))),(IFunction ("infresiduate","main",4) 0 Public [] (IFuncBody (IBlock [(IFreeDecl 1)] [] (IReturn (IFCall ("infresiduate","main_COMPLEXCASE0",7) [(IVar 1),(IFCall ("infresiduate","goal",3) [(IFCall ("Prelude","_inst#Prelude.Data#Prelude.Int",5) []),(IFCall ("Prelude","_inst#Prelude.Num#Prelude.Int",333) []),(IVar 1)])]))))),(IFunction ("infresiduate","main_COMPLEXCASE0",7) 2 Private [1] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (ICaseCons 2 [(IConsBranch ("Prelude","False",0) 0 (IBlock [] [] IExempt)),(IConsBranch ("Prelude","True",1) 0 (IBlock [] [] (IReturn (IVar 1))))]))))])