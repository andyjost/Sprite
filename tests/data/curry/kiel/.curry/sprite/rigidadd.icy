(IProg "rigidadd" ["Prelude"] [(IDataType ("rigidadd","Nat",0) [(("rigidadd","O",0),0),(("rigidadd","S",1),1)])] [(IFunction ("rigidadd","_inst#Prelude.Data#rigidadd.Nat",0) 0 Public [] (IFuncBody (IBlock [] [] (IReturn (ICCall ("Prelude","_Dict#Data",0) [(IFPCall ("rigidadd","_impl#===#Prelude.Data#rigidadd.Nat",1) 2 []),(IFPCall ("rigidadd","_impl#aValue#Prelude.Data#rigidadd.Nat",2) 1 [])]))))),(IFunction ("rigidadd","_impl#===#Prelude.Data#rigidadd.Nat",1) 2 Public [0] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (ICaseCons 1 [(IConsBranch ("rigidadd","O",0) 0 (IBlock [] [] (IReturn (IFCall ("rigidadd","_impl#===#Prelude.Data#rigidadd.Nat_CASE0",8) [(IVar 2)])))),(IConsBranch ("rigidadd","S",1) 1 (IBlock [(IVarDecl 4)] [(IVarAssign 4 (IVarAccess 1 [0]))] (IReturn (IFCall ("rigidadd","_impl#===#Prelude.Data#rigidadd.Nat_CASE1",7) [(IVar 2),(IVar 4)]))))])))),(IFunction ("rigidadd","_impl#===#Prelude.Data#rigidadd.Nat_CASE1",7) 2 Private [0] (IFuncBody (IBlock [(IVarDecl 2),(IVarDecl 4)] [(IVarAssign 2 (IVarAccess 0 [0])),(IVarAssign 4 (IVarAccess 0 [1]))] (ICaseCons 2 [(IConsBranch ("rigidadd","O",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("rigidadd","S",1) 1 (IBlock [(IVarDecl 5)] [(IVarAssign 5 (IVarAccess 2 [0]))] (IReturn (IFCall ("rigidadd","_impl#===#Prelude.Data#rigidadd.Nat",1) [(IVar 4),(IVar 5)]))))])))),(IFunction ("rigidadd","_impl#===#Prelude.Data#rigidadd.Nat_CASE0",8) 1 Private [0] (IFuncBody (IBlock [(IVarDecl 2)] [(IVarAssign 2 (IVarAccess 0 [0]))] (ICaseCons 2 [(IConsBranch ("rigidadd","O",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",1) [])))),(IConsBranch ("rigidadd","S",1) 1 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) []))))])))),(IFunction ("rigidadd","_impl#aValue#Prelude.Data#rigidadd.Nat",2) 1 Public [0] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (ICaseCons 1 [(IConsBranch ("Prelude","()",0) 0 (IBlock [] [] (IReturn (IOr (ICCall ("rigidadd","O",0) []) (ICCall ("rigidadd","S",1) [(IFCall ("rigidadd","_impl#aValue#Prelude.Data#rigidadd.Nat",2) [(ICCall ("Prelude","()",0) [])])])))))])))),(IFunction ("rigidadd","add",3) 2 Public [] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (IReturn (IFCall ("rigidadd","add'",4) [(IFCall ("Prelude","ensureNotFree",653) [(IVar 1)]),(IVar 2)]))))),(IFunction ("rigidadd","add'",4) 2 Public [0] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (ICaseCons 1 [(IConsBranch ("rigidadd","O",0) 0 (IBlock [] [] (IReturn (IVar 2)))),(IConsBranch ("rigidadd","S",1) 1 (IBlock [(IVarDecl 3)] [(IVarAssign 3 (IVarAccess 1 [0]))] (IReturn (ICCall ("rigidadd","S",1) [(IFCall ("rigidadd","add",3) [(IVar 3),(IVar 2)])]))))])))),(IFunction ("rigidadd","isNat",5) 1 Public [0] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (ICaseCons 1 [(IConsBranch ("rigidadd","O",0) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","success",724) [])))),(IConsBranch ("rigidadd","S",1) 1 (IBlock [(IVarDecl 2)] [(IVarAssign 2 (IVarAccess 1 [0]))] (IReturn (IFCall ("rigidadd","isNat",5) [(IVar 2)]))))])))),(IFunction ("rigidadd","goal",6) 0 Public [] (IFuncBody (IBlock [(IFreeDecl 1)] [] (IReturn (IFCall ("Prelude","&",730) [(IFCall ("Prelude","=:=",727) [(IFCall ("rigidadd","add",3) [(IVar 1),(ICCall ("rigidadd","O",0) [])]),(ICCall ("rigidadd","S",1) [(ICCall ("rigidadd","O",0) [])])]),(IFCall ("rigidadd","isNat",5) [(IVar 1)])])))))])