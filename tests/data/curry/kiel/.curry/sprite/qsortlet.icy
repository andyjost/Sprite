(IProg "qsortlet" ["Prelude"] [] [(IFunction ("qsortlet","split",0) 3 Public [2] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2),(IVarDecl 3)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1])),(IVarAssign 3 (IVarAccess 0 [2]))] (ICaseCons 3 [(IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","(,)",0) [(ICCall ("Prelude","[]",0) []),(ICCall ("Prelude","[]",0) [])])))),(IConsBranch ("Prelude",":",1) 2 (IBlock [(IVarDecl 4),(IVarDecl 5)] [(IVarAssign 4 (IVarAccess 3 [0])),(IVarAssign 5 (IVarAccess 3 [1]))] (IReturn (IFCall ("qsortlet","split_LET0",3) [(IVar 4),(IVar 1),(IVar 2),(IVar 5)]))))])))),(IFunction ("qsortlet","split_LET0",3) 4 Private [] (IFuncBody (IBlock [(IVarDecl 4),(IVarDecl 1),(IVarDecl 2),(IVarDecl 5),(IVarDecl 6),(IVarDecl 7),(IVarDecl 8)] [(IVarAssign 4 (IVarAccess 0 [0])),(IVarAssign 1 (IVarAccess 0 [1])),(IVarAssign 2 (IVarAccess 0 [2])),(IVarAssign 5 (IVarAccess 0 [3])),(IVarAssign 6 (IFCall ("qsortlet","split",0) [(IVar 1),(IVar 2),(IVar 5)])),(IVarAssign 7 (IFCall ("qsortlet","split._#selFP2#l",6) [(IVar 6)])),(IVarAssign 8 (IFCall ("qsortlet","split._#selFP3#r",7) [(IVar 6)]))] (IReturn (IFCall ("qsortlet","split_COMPLEXCASE1",4) [(IVar 1),(IVar 2),(IVar 4),(IVar 7),(IVar 8),(IFCall ("Prelude","apply",737) [(IFCall ("Prelude","apply",737) [(IFCall ("Prelude",">=",750) [(IVar 1)]),(IVar 2)]),(IVar 4)])]))))),(IFunction ("qsortlet","split_COMPLEXCASE1",4) 6 Private [5] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2),(IVarDecl 4),(IVarDecl 7),(IVarDecl 8),(IVarDecl 9)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1])),(IVarAssign 4 (IVarAccess 0 [2])),(IVarAssign 7 (IVarAccess 0 [3])),(IVarAssign 8 (IVarAccess 0 [4])),(IVarAssign 9 (IVarAccess 0 [5]))] (ICaseCons 9 [(IConsBranch ("Prelude","False",0) 0 (IBlock [] [] (IReturn (IFCall ("qsortlet","split_COMPLEXCASE2",5) [(IVar 7),(IVar 4),(IVar 8),(IFCall ("Prelude","apply",737) [(IFCall ("Prelude","apply",737) [(IFCall ("Prelude","<",747) [(IVar 1)]),(IVar 2)]),(IVar 4)])])))),(IConsBranch ("Prelude","True",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","(,)",0) [(ICCall ("Prelude",":",1) [(IVar 4),(IVar 7)]),(IVar 8)]))))])))),(IFunction ("qsortlet","split_COMPLEXCASE2",5) 4 Private [3] (IFuncBody (IBlock [(IVarDecl 7),(IVarDecl 4),(IVarDecl 8),(IVarDecl 9)] [(IVarAssign 7 (IVarAccess 0 [0])),(IVarAssign 4 (IVarAccess 0 [1])),(IVarAssign 8 (IVarAccess 0 [2])),(IVarAssign 9 (IVarAccess 0 [3]))] (ICaseCons 9 [(IConsBranch ("Prelude","False",0) 0 (IBlock [] [] IExempt)),(IConsBranch ("Prelude","True",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","(,)",0) [(IVar 7),(ICCall ("Prelude",":",1) [(IVar 4),(IVar 8)])]))))])))),(IFunction ("qsortlet","split._#selFP2#l",6) 1 Private [0] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (ICaseCons 1 [(IConsBranch ("Prelude","(,)",0) 2 (IBlock [(IVarDecl 2)] [(IVarAssign 2 (IVarAccess 1 [0]))] (IReturn (IVar 2))))])))),(IFunction ("qsortlet","split._#selFP3#r",7) 1 Private [0] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (ICaseCons 1 [(IConsBranch ("Prelude","(,)",0) 2 (IBlock [(IVarDecl 3)] [(IVarAssign 3 (IVarAccess 1 [1]))] (IReturn (IVar 3))))])))),(IFunction ("qsortlet","qsort",1) 2 Public [1] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (ICaseCons 2 [(IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) [])))),(IConsBranch ("Prelude",":",1) 2 (IBlock [(IVarDecl 3),(IVarDecl 4)] [(IVarAssign 3 (IVarAccess 2 [0])),(IVarAssign 4 (IVarAccess 2 [1]))] (IReturn (IFCall ("qsortlet","qsort_LET0",8) [(IVar 1),(IVar 3),(IVar 4)]))))])))),(IFunction ("qsortlet","qsort_LET0",8) 3 Private [] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 3),(IVarDecl 4),(IVarDecl 5),(IVarDecl 6),(IVarDecl 7)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 3 (IVarAccess 0 [1])),(IVarAssign 4 (IVarAccess 0 [2])),(IVarAssign 5 (IFCall ("qsortlet","split",0) [(IVar 1),(IVar 3),(IVar 4)])),(IVarAssign 6 (IFCall ("qsortlet","qsort._#selFP5#l",9) [(IVar 5)])),(IVarAssign 7 (IFCall ("qsortlet","qsort._#selFP6#r",10) [(IVar 5)]))] (IReturn (IFCall ("Prelude","++",675) [(IFCall ("qsortlet","qsort",1) [(IVar 1),(IVar 6)]),(ICCall ("Prelude",":",1) [(IVar 3),(IFCall ("qsortlet","qsort",1) [(IVar 1),(IVar 7)])])]))))),(IFunction ("qsortlet","qsort._#selFP5#l",9) 1 Private [0] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (ICaseCons 1 [(IConsBranch ("Prelude","(,)",0) 2 (IBlock [(IVarDecl 2)] [(IVarAssign 2 (IVarAccess 1 [0]))] (IReturn (IVar 2))))])))),(IFunction ("qsortlet","qsort._#selFP6#r",10) 1 Private [0] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (ICaseCons 1 [(IConsBranch ("Prelude","(,)",0) 2 (IBlock [(IVarDecl 3)] [(IVarAssign 3 (IVarAccess 1 [1]))] (IReturn (IVar 3))))])))),(IFunction ("qsortlet","goal",2) 0 Public [] (IFuncBody (IBlock [] [] (IReturn (IFCall ("qsortlet","qsort",1) [(IFCall ("Prelude","_inst#Prelude.Ord#Prelude.Int",85) []),(ICCall ("Prelude",":",1) [(ILit (IInt 8)),(ICCall ("Prelude",":",1) [(ILit (IInt 6)),(ICCall ("Prelude",":",1) [(ILit (IInt 7)),(ICCall ("Prelude",":",1) [(ILit (IInt 5)),(ICCall ("Prelude",":",1) [(ILit (IInt 4)),(ICCall ("Prelude",":",1) [(ILit (IInt 2)),(ICCall ("Prelude",":",1) [(ILit (IInt 3)),(ICCall ("Prelude",":",1) [(ILit (IInt 1)),(ICCall ("Prelude","[]",0) [])])])])])])])])])])))))])