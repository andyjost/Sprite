IModule "escher_perm" ["Prelude"] [(("escher_perm","Day"),[IConstructor ("escher_perm","Mon") 0,IConstructor ("escher_perm","Tue") 0,IConstructor ("escher_perm","Wed") 0,IConstructor ("escher_perm","Thu") 0,IConstructor ("escher_perm","Fri") 0,IConstructor ("escher_perm","Sat") 0,IConstructor ("escher_perm","Sun") 0]),(("escher_perm","Person"),[IConstructor ("escher_perm","Mary") 0,IConstructor ("escher_perm","Bill") 0,IConstructor ("escher_perm","Joe") 0,IConstructor ("escher_perm","Fred") 0])] [IFunction ("escher_perm","permute") 1 [Declare (Variable 1 (ILhs (("escher_perm","permute"),1))),ATable 1 True (Reference 1) [(IConstructor ("Prelude","(,)") 2,[Declare (Variable 2 (IVar 1 (("Prelude","(,)"),1))),Declare (Variable 3 (IVar 1 (("Prelude","(,)"),2))),Return (Applic False ("escher_perm","permute_#A1") [Reference 2,Reference 3])])]],IFunction ("escher_perm","permute_#A1") 2 [Declare (Variable 2 (ILhs (("escher_perm","permute_#A1"),1))),Declare (Variable 3 (ILhs (("escher_perm","permute_#A1"),2))),ATable 1 True (Reference 2) [(IConstructor ("Prelude","[]") 0,[Return (Applic False ("Prelude","=:=") [Reference 3,Applic True ("Prelude","[]") []])]),(IConstructor ("Prelude",":") 2,[Declare (Variable 4 (IVar 2 (("Prelude",":"),1))),Declare (Variable 5 (IVar 2 (("Prelude",":"),2))),Return (Applic False ("escher_perm","permute_#A0") [Reference 3,Reference 4,Reference 5])])]],IFunction ("escher_perm","permute_#A0") 3 [Declare (Variable 3 (ILhs (("escher_perm","permute_#A0"),1))),Declare (Variable 4 (ILhs (("escher_perm","permute_#A0"),2))),Declare (Variable 5 (ILhs (("escher_perm","permute_#A0"),3))),Declare (Variable 6 IFree),Declare (Variable 7 IFree),Declare (Variable 8 IFree),Return (Applic False ("Prelude","&") [Applic False ("escher_perm","permute") [Applic True ("Prelude","(,)") [Reference 5,Reference 6]],Applic False ("Prelude","&") [Applic False ("escher_perm","split") [Applic True ("Prelude","(,,)") [Reference 6,Reference 7,Reference 8]],Applic False ("Prelude","=:=") [Reference 3,Applic False ("escher_perm","concatenate") [Applic True ("Prelude","(,)") [Reference 7,Applic True ("Prelude",":") [Reference 4,Reference 8]]]]]])],IFunction ("escher_perm","concatenate") 1 [Declare (Variable 1 (ILhs (("escher_perm","concatenate"),1))),ATable 1 True (Reference 1) [(IConstructor ("Prelude","(,)") 2,[Declare (Variable 2 (IVar 1 (("Prelude","(,)"),1))),Declare (Variable 3 (IVar 1 (("Prelude","(,)"),2))),Return (Applic False ("escher_perm","concatenate_#A2") [Reference 2,Reference 3])])]],IFunction ("escher_perm","concatenate_#A2") 2 [Declare (Variable 2 (ILhs (("escher_perm","concatenate_#A2"),1))),Declare (Variable 3 (ILhs (("escher_perm","concatenate_#A2"),2))),ATable 1 True (Reference 2) [(IConstructor ("Prelude","[]") 0,[Return (Reference 3)]),(IConstructor ("Prelude",":") 2,[Declare (Variable 4 (IVar 2 (("Prelude",":"),1))),Declare (Variable 5 (IVar 2 (("Prelude",":"),2))),Return (Applic True ("Prelude",":") [Reference 4,Applic False ("escher_perm","concatenate") [Applic True ("Prelude","(,)") [Reference 5,Reference 3]]])])]],IFunction ("escher_perm","split") 1 [Declare (Variable 1 (ILhs (("escher_perm","split"),1))),ATable 1 True (Reference 1) [(IConstructor ("Prelude","(,,)") 3,[Declare (Variable 2 (IVar 1 (("Prelude","(,,)"),1))),Declare (Variable 3 (IVar 1 (("Prelude","(,,)"),2))),Declare (Variable 4 (IVar 1 (("Prelude","(,,)"),3))),Return (Applic False ("escher_perm","split_#A4") [Reference 2,Reference 3,Reference 4])])]],IFunction ("escher_perm","split_#A4") 3 [Declare (Variable 2 (ILhs (("escher_perm","split_#A4"),1))),Declare (Variable 3 (ILhs (("escher_perm","split_#A4"),2))),Declare (Variable 4 (ILhs (("escher_perm","split_#A4"),3))),ATable 1 True (Reference 2) [(IConstructor ("Prelude","[]") 0,[Return (Applic False ("Prelude","&") [Applic False ("Prelude","=:=") [Reference 3,Applic True ("Prelude","[]") []],Applic False ("Prelude","=:=") [Reference 4,Applic True ("Prelude","[]") []]])]),(IConstructor ("Prelude",":") 2,[Declare (Variable 5 (IVar 2 (("Prelude",":"),1))),Declare (Variable 6 (IVar 2 (("Prelude",":"),2))),Return (IOr (Applic False ("Prelude","&") [Applic False ("Prelude","=:=") [Reference 3,Applic True ("Prelude","[]") []],Applic False ("Prelude","=:=") [Reference 4,Applic True ("Prelude",":") [Reference 5,Reference 6]]]) (Applic False ("escher_perm","split_#A3") [Reference 3,Reference 4,Reference 5,Reference 6]))])]],IFunction ("escher_perm","split_#A3") 4 [Declare (Variable 3 (ILhs (("escher_perm","split_#A3"),1))),Declare (Variable 4 (ILhs (("escher_perm","split_#A3"),2))),Declare (Variable 5 (ILhs (("escher_perm","split_#A3"),3))),Declare (Variable 6 (ILhs (("escher_perm","split_#A3"),4))),Declare (Variable 7 IFree),Return (Applic False ("Prelude","&") [Applic False ("Prelude","=:=") [Reference 3,Applic True ("Prelude",":") [Reference 5,Reference 7]],Applic False ("escher_perm","split") [Applic True ("Prelude","(,,)") [Reference 6,Reference 7,Reference 4]]])],IFunction ("escher_perm","splitc") 1 [Declare (Variable 1 (ILhs (("escher_perm","splitc"),1))),ATable 1 True (Reference 1) [(IConstructor ("Prelude","(,,)") 3,[Declare (Variable 2 (IVar 1 (("Prelude","(,,)"),1))),Declare (Variable 3 (IVar 1 (("Prelude","(,,)"),2))),Declare (Variable 4 (IVar 1 (("Prelude","(,,)"),3))),Return (Applic False ("Prelude","=:=") [Applic False ("escher_perm","concatenate") [Applic True ("Prelude","(,)") [Reference 3,Reference 4]],Reference 2])])]],IFunction ("escher_perm","goal1") 0 [Return (Applic False ("escher_perm","concatenate") [Applic True ("Prelude","(,)") [Applic True ("Prelude",":") [Applic True ("escher_perm","Mon") [],Applic True ("Prelude",":") [Applic True ("escher_perm","Tue") [],Applic True ("Prelude","[]") []]],Applic True ("Prelude",":") [Applic True ("escher_perm","Wed") [],Applic True ("Prelude","[]") []]]])],IFunction ("escher_perm","goal2") 2 [Declare (Variable 1 (ILhs (("escher_perm","goal2"),1))),Declare (Variable 2 (ILhs (("escher_perm","goal2"),2))),Return (Applic False ("escher_perm","split") [Applic True ("Prelude","(,,)") [Applic True ("Prelude",":") [Applic True ("escher_perm","Mon") [],Applic True ("Prelude",":") [Applic True ("escher_perm","Tue") [],Applic True ("Prelude","[]") []]],Reference 1,Reference 2]])],IFunction ("escher_perm","goal3") 1 [Declare (Variable 1 (ILhs (("escher_perm","goal3"),1))),Return (Applic False ("escher_perm","permute") [Applic True ("Prelude","(,)") [Applic True ("Prelude",":") [Applic True ("escher_perm","Mon") [],Applic True ("Prelude",":") [Applic True ("escher_perm","Tue") [],Applic True ("Prelude",":") [Applic True ("escher_perm","Wed") [],Applic True ("Prelude","[]") []]]],Reference 1]])]]