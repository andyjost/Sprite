Prog "escher_higher" ["Prelude"] [Type ("escher_higher","Day") Public [] [Cons ("escher_higher","Mon") 0 Public [],Cons ("escher_higher","Tue") 0 Public [],Cons ("escher_higher","Wed") 0 Public [],Cons ("escher_higher","Thu") 0 Public [],Cons ("escher_higher","Fri") 0 Public [],Cons ("escher_higher","Sat") 0 Public [],Cons ("escher_higher","Sun") 0 Public []]] [Func ("escher_higher","map_") 1 Public (FuncType (TCons ("Prelude","(,)") [FuncType (TVar 0) (TVar 1),TCons ("Prelude","[]") [TVar 0]]) (TCons ("Prelude","[]") [TVar 1])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case Flex (Var 3) [Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","[]") []),Branch (Pattern ("Prelude",":") [4,5]) (Comb ConsCall ("Prelude",":") [Comb FuncCall ("Prelude","apply") [Var 2,Var 4],Comb FuncCall ("escher_higher","map_") [Comb ConsCall ("Prelude","(,)") [Var 2,Var 5]]])])])),Func ("escher_higher","filter_") 1 Public (FuncType (TCons ("Prelude","(,)") [FuncType (TVar 0) (TCons ("Prelude","Bool") []),TCons ("Prelude","[]") [TVar 0]]) (TCons ("Prelude","[]") [TVar 0])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case Flex (Var 3) [Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","[]") []),Branch (Pattern ("Prelude",":") [4,5]) (Case Rigid (Comb FuncCall ("Prelude","apply") [Var 2,Var 4]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude",":") [Var 4,Comb FuncCall ("escher_higher","filter_") [Comb ConsCall ("Prelude","(,)") [Var 2,Var 5]]]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("escher_higher","filter_") [Comb ConsCall ("Prelude","(,)") [Var 2,Var 5]])])])])),Func ("escher_higher","next") 1 Public (FuncType (TCons ("escher_higher","Day") []) (TCons ("escher_higher","Day") [])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("escher_higher","Mon") []) (Comb ConsCall ("escher_higher","Tue") []),Branch (Pattern ("escher_higher","Tue") []) (Comb ConsCall ("escher_higher","Wed") []),Branch (Pattern ("escher_higher","Wed") []) (Comb ConsCall ("escher_higher","Thu") []),Branch (Pattern ("escher_higher","Thu") []) (Comb ConsCall ("escher_higher","Fri") []),Branch (Pattern ("escher_higher","Fri") []) (Comb ConsCall ("escher_higher","Sat") []),Branch (Pattern ("escher_higher","Sat") []) (Comb ConsCall ("escher_higher","Sun") []),Branch (Pattern ("escher_higher","Sun") []) (Comb ConsCall ("escher_higher","Mon") [])])),Func ("escher_higher","weekday") 1 Public (FuncType (TCons ("escher_higher","Day") []) (TCons ("Prelude","Bool") [])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("escher_higher","Mon") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("escher_higher","Tue") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("escher_higher","Wed") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("escher_higher","Thu") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("escher_higher","Fri") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("escher_higher","Sat") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_higher","Sun") []) (Comb ConsCall ("Prelude","False") [])])),Func ("escher_higher","goal1") 0 Public (TCons ("Prelude","[]") [TCons ("escher_higher","Day") []]) (Rule [] (Comb FuncCall ("escher_higher","map_") [Comb ConsCall ("Prelude","(,)") [Comb (FuncPartCall 1) ("escher_higher","next") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("escher_higher","Mon") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("escher_higher","Tue") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("escher_higher","Wed") [],Comb ConsCall ("Prelude","[]") []]]]]])),Func ("escher_higher","goal2") 0 Public (TCons ("Prelude","[]") [TCons ("escher_higher","Day") []]) (Rule [] (Comb FuncCall ("escher_higher","filter_") [Comb ConsCall ("Prelude","(,)") [Comb (FuncPartCall 1) ("escher_higher","weekday") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("escher_higher","Sun") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("escher_higher","Mon") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("escher_higher","Wed") [],Comb ConsCall ("Prelude","[]") []]]]]]))] []