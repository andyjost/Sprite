(IProg "colormap_nd" ["Prelude"] [(IDataType ("colormap_nd","Color",0) [(("colormap_nd","Red",0),0),(("colormap_nd","Green",1),0),(("colormap_nd","Yellow",2),0),(("colormap_nd","Blue",3),0)])] [(IFunction ("colormap_nd","_inst#Prelude.Data#colormap_nd.Color",0) 0 Public [] (IFuncBody (IBlock [] [] (IReturn (ICCall ("Prelude","_Dict#Data",0) [(IFPCall ("colormap_nd","_impl#===#Prelude.Data#colormap_nd.Color",1) 2 []),(IFPCall ("colormap_nd","_impl#aValue#Prelude.Data#colormap_nd.Color",2) 1 [])]))))),(IFunction ("colormap_nd","_impl#===#Prelude.Data#colormap_nd.Color",1) 2 Public [0] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (ICaseCons 1 [(IConsBranch ("colormap_nd","Red",0) 0 (IBlock [] [] (IReturn (IFCall ("colormap_nd","_impl#===#Prelude.Data#colormap_nd.Color_CASE0",13) [(IVar 2)])))),(IConsBranch ("colormap_nd","Green",1) 0 (IBlock [] [] (IReturn (IFCall ("colormap_nd","_impl#===#Prelude.Data#colormap_nd.Color_CASE1",12) [(IVar 2)])))),(IConsBranch ("colormap_nd","Yellow",2) 0 (IBlock [] [] (IReturn (IFCall ("colormap_nd","_impl#===#Prelude.Data#colormap_nd.Color_CASE2",11) [(IVar 2)])))),(IConsBranch ("colormap_nd","Blue",3) 0 (IBlock [] [] (IReturn (IFCall ("colormap_nd","_impl#===#Prelude.Data#colormap_nd.Color_CASE3",10) [(IVar 2)]))))])))),(IFunction ("colormap_nd","_impl#===#Prelude.Data#colormap_nd.Color_CASE3",10) 1 Private [0] (IFuncBody (IBlock [(IVarDecl 2)] [(IVarAssign 2 (IVarAccess 0 [0]))] (ICaseCons 2 [(IConsBranch ("colormap_nd","Red",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("colormap_nd","Green",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("colormap_nd","Yellow",2) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("colormap_nd","Blue",3) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",1) []))))])))),(IFunction ("colormap_nd","_impl#===#Prelude.Data#colormap_nd.Color_CASE2",11) 1 Private [0] (IFuncBody (IBlock [(IVarDecl 2)] [(IVarAssign 2 (IVarAccess 0 [0]))] (ICaseCons 2 [(IConsBranch ("colormap_nd","Red",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("colormap_nd","Green",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("colormap_nd","Yellow",2) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",1) [])))),(IConsBranch ("colormap_nd","Blue",3) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) []))))])))),(IFunction ("colormap_nd","_impl#===#Prelude.Data#colormap_nd.Color_CASE1",12) 1 Private [0] (IFuncBody (IBlock [(IVarDecl 2)] [(IVarAssign 2 (IVarAccess 0 [0]))] (ICaseCons 2 [(IConsBranch ("colormap_nd","Red",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("colormap_nd","Green",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",1) [])))),(IConsBranch ("colormap_nd","Yellow",2) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("colormap_nd","Blue",3) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) []))))])))),(IFunction ("colormap_nd","_impl#===#Prelude.Data#colormap_nd.Color_CASE0",13) 1 Private [0] (IFuncBody (IBlock [(IVarDecl 2)] [(IVarAssign 2 (IVarAccess 0 [0]))] (ICaseCons 2 [(IConsBranch ("colormap_nd","Red",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",1) [])))),(IConsBranch ("colormap_nd","Green",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("colormap_nd","Yellow",2) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("colormap_nd","Blue",3) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) []))))])))),(IFunction ("colormap_nd","_impl#aValue#Prelude.Data#colormap_nd.Color",2) 1 Public [0] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (ICaseCons 1 [(IConsBranch ("Prelude","()",0) 0 (IBlock [] [] (IReturn (IOr (IOr (IOr (ICCall ("colormap_nd","Red",0) []) (ICCall ("colormap_nd","Green",1) [])) (ICCall ("colormap_nd","Yellow",2) [])) (ICCall ("colormap_nd","Blue",3) [])))))])))),(IFunction ("colormap_nd","_inst#Prelude.Eq#colormap_nd.Color",3) 0 Public [] (IFuncBody (IBlock [] [] (IReturn (ICCall ("Prelude","_Dict#Eq",0) [(IFPCall ("colormap_nd","_impl#==#Prelude.Eq#colormap_nd.Color",4) 2 []),(IFCall ("colormap_nd","_impl#/=#Prelude.Eq#colormap_nd.Color",5) [])]))))),(IFunction ("colormap_nd","_impl#==#Prelude.Eq#colormap_nd.Color",4) 2 Public [0] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (ICaseCons 1 [(IConsBranch ("colormap_nd","Red",0) 0 (IBlock [] [] (IReturn (IFCall ("colormap_nd","_impl#==#Prelude.Eq#colormap_nd.Color_CASE0",17) [(IVar 2)])))),(IConsBranch ("colormap_nd","Green",1) 0 (IBlock [] [] (IReturn (IFCall ("colormap_nd","_impl#==#Prelude.Eq#colormap_nd.Color_CASE1",16) [(IVar 2)])))),(IConsBranch ("colormap_nd","Yellow",2) 0 (IBlock [] [] (IReturn (IFCall ("colormap_nd","_impl#==#Prelude.Eq#colormap_nd.Color_CASE2",15) [(IVar 2)])))),(IConsBranch ("colormap_nd","Blue",3) 0 (IBlock [] [] (IReturn (IFCall ("colormap_nd","_impl#==#Prelude.Eq#colormap_nd.Color_CASE3",14) [(IVar 2)]))))])))),(IFunction ("colormap_nd","_impl#==#Prelude.Eq#colormap_nd.Color_CASE3",14) 1 Private [0] (IFuncBody (IBlock [(IVarDecl 2)] [(IVarAssign 2 (IVarAccess 0 [0]))] (ICaseCons 2 [(IConsBranch ("colormap_nd","Red",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("colormap_nd","Green",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("colormap_nd","Yellow",2) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("colormap_nd","Blue",3) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",1) []))))])))),(IFunction ("colormap_nd","_impl#==#Prelude.Eq#colormap_nd.Color_CASE2",15) 1 Private [0] (IFuncBody (IBlock [(IVarDecl 2)] [(IVarAssign 2 (IVarAccess 0 [0]))] (ICaseCons 2 [(IConsBranch ("colormap_nd","Red",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("colormap_nd","Green",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("colormap_nd","Yellow",2) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",1) [])))),(IConsBranch ("colormap_nd","Blue",3) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) []))))])))),(IFunction ("colormap_nd","_impl#==#Prelude.Eq#colormap_nd.Color_CASE1",16) 1 Private [0] (IFuncBody (IBlock [(IVarDecl 2)] [(IVarAssign 2 (IVarAccess 0 [0]))] (ICaseCons 2 [(IConsBranch ("colormap_nd","Red",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("colormap_nd","Green",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",1) [])))),(IConsBranch ("colormap_nd","Yellow",2) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("colormap_nd","Blue",3) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) []))))])))),(IFunction ("colormap_nd","_impl#==#Prelude.Eq#colormap_nd.Color_CASE0",17) 1 Private [0] (IFuncBody (IBlock [(IVarDecl 2)] [(IVarAssign 2 (IVarAccess 0 [0]))] (ICaseCons 2 [(IConsBranch ("colormap_nd","Red",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",1) [])))),(IConsBranch ("colormap_nd","Green",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("colormap_nd","Yellow",2) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("colormap_nd","Blue",3) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) []))))])))),(IFunction ("colormap_nd","_impl#/=#Prelude.Eq#colormap_nd.Color",5) 0 Public [] (IFuncBody (IBlock [] [] (IReturn (IFPCall ("Prelude","_def#/=#Prelude.Eq",36) 2 [(IFCall ("colormap_nd","_inst#Prelude.Eq#colormap_nd.Color",3) [])]))))),(IFunction ("colormap_nd","diff",6) 3 Public [] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2),(IVarDecl 3)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1])),(IVarAssign 3 (IVarAccess 0 [2]))] (IReturn (IFCall ("Prelude","=:=",740) [(IFCall ("Prelude","_inst#Prelude.Data#Prelude.Bool",572) []),(IFCall ("Prelude","apply",750) [(IFCall ("Prelude","apply",750) [(IFCall ("Prelude","==",757) [(IVar 1)]),(IVar 2)]),(IVar 3)]),(ICCall ("Prelude","False",0) [])]))))),(IFunction ("colormap_nd","aColor",7) 0 Public [] (IFuncBody (IBlock [] [] (IReturn (IOr (IOr (IOr (ICCall ("colormap_nd","Red",0) []) (ICCall ("colormap_nd","Yellow",2) [])) (ICCall ("colormap_nd","Green",1) [])) (ICCall ("colormap_nd","Blue",3) [])))))),(IFunction ("colormap_nd","correct",8) 5 Public [] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2),(IVarDecl 3),(IVarDecl 4),(IVarDecl 5)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1])),(IVarAssign 3 (IVarAccess 0 [2])),(IVarAssign 4 (IVarAccess 0 [3])),(IVarAssign 5 (IVarAccess 0 [4]))] (IReturn (IFCall ("colormap_nd","correct_COMPLEXCASE0",18) [(IVar 2),(IVar 3),(IVar 4),(IVar 5),(IFCall ("Prelude","&",743) [(IFCall ("colormap_nd","diff",6) [(IVar 1),(IVar 2),(IVar 3)]),(IFCall ("Prelude","&",743) [(IFCall ("colormap_nd","diff",6) [(IVar 1),(IVar 2),(IVar 4)]),(IFCall ("Prelude","&",743) [(IFCall ("colormap_nd","diff",6) [(IVar 1),(IVar 3),(IVar 4)]),(IFCall ("Prelude","&",743) [(IFCall ("colormap_nd","diff",6) [(IVar 1),(IVar 3),(IVar 5)]),(IFCall ("colormap_nd","diff",6) [(IVar 1),(IVar 4),(IVar 5)])])])])])]))))),(IFunction ("colormap_nd","correct_COMPLEXCASE0",18) 5 Private [4] (IFuncBody (IBlock [(IVarDecl 2),(IVarDecl 3),(IVarDecl 4),(IVarDecl 5),(IVarDecl 6)] [(IVarAssign 2 (IVarAccess 0 [0])),(IVarAssign 3 (IVarAccess 0 [1])),(IVarAssign 4 (IVarAccess 0 [2])),(IVarAssign 5 (IVarAccess 0 [3])),(IVarAssign 6 (IVarAccess 0 [4]))] (ICaseCons 6 [(IConsBranch ("Prelude","False",0) 0 (IBlock [] [] IExempt)),(IConsBranch ("Prelude","True",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude",":",1) [(IVar 2),(ICCall ("Prelude",":",1) [(IVar 3),(ICCall ("Prelude",":",1) [(IVar 4),(ICCall ("Prelude",":",1) [(IVar 5),(ICCall ("Prelude","[]",0) [])])])])]))))])))),(IFunction ("colormap_nd","goal",9) 0 Public [] (IFuncBody (IBlock [] [] (IReturn (IFCall ("colormap_nd","correct",8) [(IFCall ("colormap_nd","_inst#Prelude.Eq#colormap_nd.Color",3) []),(IFCall ("colormap_nd","aColor",7) []),(IFCall ("colormap_nd","aColor",7) []),(IFCall ("colormap_nd","aColor",7) []),(IFCall ("colormap_nd","aColor",7) [])])))))])