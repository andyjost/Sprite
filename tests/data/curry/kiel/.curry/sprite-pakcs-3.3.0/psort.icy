(IProg "psort" ["Prelude"] [] [(IFunction ("psort","splits",0) 1 Public [0] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (ICaseCons 1 [(IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude",":",1) [(ICCall ("Prelude","(,)",0) [(ICCall ("Prelude","[]",0) []),(ICCall ("Prelude","[]",0) [])]),(ICCall ("Prelude","[]",0) [])])))),(IConsBranch ("Prelude",":",1) 2 (IBlock [(IVarDecl 2),(IVarDecl 3)] [(IVarAssign 2 (IVarAccess 1 [0])),(IVarAssign 3 (IVarAccess 1 [1]))] (IReturn (ICCall ("Prelude",":",1) [(ICCall ("Prelude","(,)",0) [(ICCall ("Prelude","[]",0) []),(ICCall ("Prelude",":",1) [(IVar 2),(IVar 3)])]),(IFCall ("Prelude","foldr",694) [(IFPCall ("psort","splits._#lambda3",6) 2 [(IVar 2)]),(ICCall ("Prelude","[]",0) []),(IFCall ("psort","splits",0) [(IVar 3)])])]))))])))),(IFunction ("psort","splits._#lambda3",6) 3 Private [1] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2),(IVarDecl 3)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1])),(IVarAssign 3 (IVarAccess 0 [2]))] (ICaseCons 2 [(IConsBranch ("Prelude","(,)",0) 2 (IBlock [(IVarDecl 4),(IVarDecl 5)] [(IVarAssign 4 (IVarAccess 2 [0])),(IVarAssign 5 (IVarAccess 2 [1]))] (IReturn (ICCall ("Prelude",":",1) [(ICCall ("Prelude","(,)",0) [(ICCall ("Prelude",":",1) [(IVar 1),(IVar 4)]),(IVar 5)]),(IVar 3)]))))])))),(IFunction ("psort","perms",1) 1 Public [0] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (ICaseCons 1 [(IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude",":",1) [(ICCall ("Prelude","[]",0) []),(ICCall ("Prelude","[]",0) [])])))),(IConsBranch ("Prelude",":",1) 2 (IBlock [(IVarDecl 2),(IVarDecl 3)] [(IVarAssign 2 (IVarAccess 1 [0])),(IVarAssign 3 (IVarAccess 1 [1]))] (IReturn (IFCall ("Prelude","apply",750) [(IFCall ("Prelude","concatMap",704) [(IFPCall ("psort","perms._#lambda5",7) 1 [(IVar 2)])]),(IFCall ("psort","perms",1) [(IVar 3)])]))))])))),(IFunction ("psort","perms._#lambda5",7) 2 Private [] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (IReturn (IFCall ("Prelude","foldr",694) [(IFPCall ("psort","perms._#lambda5._#lambda8",8) 2 [(IVar 1)]),(ICCall ("Prelude","[]",0) []),(IFCall ("psort","splits",0) [(IVar 2)])]))))),(IFunction ("psort","perms._#lambda5._#lambda8",8) 3 Private [1] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2),(IVarDecl 3)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1])),(IVarAssign 3 (IVarAccess 0 [2]))] (ICaseCons 2 [(IConsBranch ("Prelude","(,)",0) 2 (IBlock [(IVarDecl 4),(IVarDecl 5)] [(IVarAssign 4 (IVarAccess 2 [0])),(IVarAssign 5 (IVarAccess 2 [1]))] (IReturn (ICCall ("Prelude",":",1) [(IFCall ("Prelude","++",688) [(IVar 4),(IFCall ("Prelude","++",688) [(ICCall ("Prelude",":",1) [(IVar 1),(ICCall ("Prelude","[]",0) [])]),(IVar 5)])]),(IVar 3)]))))])))),(IFunction ("psort","sorted",2) 2 Public [1] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (ICaseCons 2 [(IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",1) [])))),(IConsBranch ("Prelude",":",1) 2 (IBlock [(IVarDecl 3),(IVarDecl 4)] [(IVarAssign 3 (IVarAccess 2 [0])),(IVarAssign 4 (IVarAccess 2 [1]))] (IReturn (IFCall ("psort","sorted_CASE0",9) [(IVar 4),(IVar 3),(IVar 1)]))))])))),(IFunction ("psort","sorted_CASE0",9) 3 Private [0] (IFuncBody (IBlock [(IVarDecl 4),(IVarDecl 3),(IVarDecl 1)] [(IVarAssign 4 (IVarAccess 0 [0])),(IVarAssign 3 (IVarAccess 0 [1])),(IVarAssign 1 (IVarAccess 0 [2]))] (ICaseCons 4 [(IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",1) [])))),(IConsBranch ("Prelude",":",1) 2 (IBlock [(IVarDecl 5),(IVarDecl 6)] [(IVarAssign 5 (IVarAccess 4 [0])),(IVarAssign 6 (IVarAccess 4 [1]))] (IReturn (IFCall ("Prelude","&&",678) [(IFCall ("Prelude","apply",750) [(IFCall ("Prelude","apply",750) [(IFCall ("Prelude","<=",763) [(IVar 1)]),(IVar 3)]),(IVar 5)]),(IFCall ("psort","sorted",2) [(IVar 1),(ICCall ("Prelude",":",1) [(IVar 5),(IVar 6)])])]))))])))),(IFunction ("psort","sort",3) 1 Public [] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (IReturn (IFCall ("Prelude","head",685) [(IFCall ("Prelude","apply",750) [(IFCall ("Prelude","concatMap",704) [(IFPCall ("psort","sort._#lambda10",10) 1 [])]),(IFCall ("psort","perms",1) [(IVar 1)])])]))))),(IFunction ("psort","sort._#lambda10",10) 1 Private [] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (IReturn (IFCall ("psort","sort._#lambda10_COMPLEXCASE0",11) [(IVar 1),(IFCall ("psort","sorted",2) [(IFCall ("Prelude","_inst#Prelude.Ord#Prelude.Int",85) []),(IVar 1)])]))))),(IFunction ("psort","sort._#lambda10_COMPLEXCASE0",11) 2 Private [1] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (ICaseCons 2 [(IConsBranch ("Prelude","False",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) [])))),(IConsBranch ("Prelude","True",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude",":",1) [(IVar 1),(ICCall ("Prelude","[]",0) [])]))))])))),(IFunction ("psort","goal",4) 1 Public [] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (IReturn (IFCall ("psort","sort",3) [(IFCall ("Prelude","_impl#enumFromThenTo#Prelude.Enum#Prelude.Int",298) [(IVar 1),(IFCall ("Prelude","_impl#-#Prelude.Num#Prelude.Int",335) [(IVar 1),(ILit (IInt 1))]),(ILit (IInt 1))])]))))),(IFunction ("psort","main",5) 0 Public [] (IFuncBody (IBlock [] [] (IReturn (IFCall ("psort","goal",4) [(ILit (IInt 5))])))))])