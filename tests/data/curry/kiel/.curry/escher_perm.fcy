Prog "escher_perm" ["Prelude"] [Type ("escher_perm","Day") Public [] [Cons ("escher_perm","Mon") 0 Public [],Cons ("escher_perm","Tue") 0 Public [],Cons ("escher_perm","Wed") 0 Public [],Cons ("escher_perm","Thu") 0 Public [],Cons ("escher_perm","Fri") 0 Public [],Cons ("escher_perm","Sat") 0 Public [],Cons ("escher_perm","Sun") 0 Public []],Type ("escher_perm","Person") Public [] [Cons ("escher_perm","Mary") 0 Public [],Cons ("escher_perm","Bill") 0 Public [],Cons ("escher_perm","Joe") 0 Public [],Cons ("escher_perm","Fred") 0 Public []]] [Func ("escher_perm","permute") 1 Public (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TVar 0],TCons ("Prelude","[]") [TVar 0]]) (TCons ("Prelude","Bool") [])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case Flex (Var 2) [Branch (Pattern ("Prelude","[]") []) (Comb FuncCall ("Prelude","=:=") [Var 3,Comb ConsCall ("Prelude","[]") []]),Branch (Pattern ("Prelude",":") [4,5]) (Free [6,7,8] (Comb FuncCall ("Prelude","&") [Comb FuncCall ("escher_perm","permute") [Comb ConsCall ("Prelude","(,)") [Var 5,Var 6]],Comb FuncCall ("Prelude","&") [Comb FuncCall ("escher_perm","split") [Comb ConsCall ("Prelude","(,,)") [Var 6,Var 7,Var 8]],Comb FuncCall ("Prelude","=:=") [Var 3,Comb FuncCall ("escher_perm","concatenate") [Comb ConsCall ("Prelude","(,)") [Var 7,Comb ConsCall ("Prelude",":") [Var 4,Var 8]]]]]]))])])),Func ("escher_perm","concatenate") 1 Public (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TVar 0],TCons ("Prelude","[]") [TVar 0]]) (TCons ("Prelude","[]") [TVar 0])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case Flex (Var 2) [Branch (Pattern ("Prelude","[]") []) (Var 3),Branch (Pattern ("Prelude",":") [4,5]) (Comb ConsCall ("Prelude",":") [Var 4,Comb FuncCall ("escher_perm","concatenate") [Comb ConsCall ("Prelude","(,)") [Var 5,Var 3]]])])])),Func ("escher_perm","split") 1 Public (FuncType (TCons ("Prelude","(,,)") [TCons ("Prelude","[]") [TVar 0],TCons ("Prelude","[]") [TVar 0],TCons ("Prelude","[]") [TVar 0]]) (TCons ("Prelude","Bool") [])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","(,,)") [2,3,4]) (Case Flex (Var 2) [Branch (Pattern ("Prelude","[]") []) (Comb FuncCall ("Prelude","&") [Comb FuncCall ("Prelude","=:=") [Var 3,Comb ConsCall ("Prelude","[]") []],Comb FuncCall ("Prelude","=:=") [Var 4,Comb ConsCall ("Prelude","[]") []]]),Branch (Pattern ("Prelude",":") [5,6]) (Or (Comb FuncCall ("Prelude","&") [Comb FuncCall ("Prelude","=:=") [Var 3,Comb ConsCall ("Prelude","[]") []],Comb FuncCall ("Prelude","=:=") [Var 4,Comb ConsCall ("Prelude",":") [Var 5,Var 6]]]) (Free [7] (Comb FuncCall ("Prelude","&") [Comb FuncCall ("Prelude","=:=") [Var 3,Comb ConsCall ("Prelude",":") [Var 5,Var 7]],Comb FuncCall ("escher_perm","split") [Comb ConsCall ("Prelude","(,,)") [Var 6,Var 7,Var 4]]])))])])),Func ("escher_perm","splitc") 1 Public (FuncType (TCons ("Prelude","(,,)") [TCons ("Prelude","[]") [TVar 0],TCons ("Prelude","[]") [TVar 0],TCons ("Prelude","[]") [TVar 0]]) (TCons ("Prelude","Bool") [])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","(,,)") [2,3,4]) (Comb FuncCall ("Prelude","=:=") [Comb FuncCall ("escher_perm","concatenate") [Comb ConsCall ("Prelude","(,)") [Var 3,Var 4]],Var 2])])),Func ("escher_perm","goal1") 0 Public (TCons ("Prelude","[]") [TCons ("escher_perm","Day") []]) (Rule [] (Comb FuncCall ("escher_perm","concatenate") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude",":") [Comb ConsCall ("escher_perm","Mon") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("escher_perm","Tue") [],Comb ConsCall ("Prelude","[]") []]],Comb ConsCall ("Prelude",":") [Comb ConsCall ("escher_perm","Wed") [],Comb ConsCall ("Prelude","[]") []]]])),Func ("escher_perm","goal2") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("escher_perm","Day") []]) (FuncType (TCons ("Prelude","[]") [TCons ("escher_perm","Day") []]) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Comb FuncCall ("escher_perm","split") [Comb ConsCall ("Prelude","(,,)") [Comb ConsCall ("Prelude",":") [Comb ConsCall ("escher_perm","Mon") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("escher_perm","Tue") [],Comb ConsCall ("Prelude","[]") []]],Var 1,Var 2]])),Func ("escher_perm","goal3") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("escher_perm","Day") []]) (TCons ("Prelude","Bool") [])) (Rule [1] (Comb FuncCall ("escher_perm","permute") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude",":") [Comb ConsCall ("escher_perm","Mon") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("escher_perm","Tue") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("escher_perm","Wed") [],Comb ConsCall ("Prelude","[]") []]]],Var 1]]))] []