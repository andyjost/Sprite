Prog "relational" ["Prelude"] [Type ("relational","Person") Public [] [Cons ("relational","Bob") 0 Public [],Cons ("relational","John") 0 Public [],Cons ("relational","Mary") 0 Public [],Cons ("relational","Sue") 0 Public [],Cons ("relational","Dick") 0 Public [],Cons ("relational","Kate") 0 Public [],Cons ("relational","Ned") 0 Public []]] [Func ("relational","parent") 2 Public (FuncType (TCons ("relational","Person") []) (FuncType (TCons ("relational","Person") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("relational","Bob") []) (Case Flex (Var 2) [Branch (Pattern ("relational","John") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("relational","Dick") []) (Comb ConsCall ("Prelude","True") [])]),Branch (Pattern ("relational","John") []) (Case Flex (Var 2) [Branch (Pattern ("relational","Mary") []) (Comb ConsCall ("Prelude","True") [])]),Branch (Pattern ("relational","Sue") []) (Case Flex (Var 2) [Branch (Pattern ("relational","Dick") []) (Comb ConsCall ("Prelude","True") [])]),Branch (Pattern ("relational","Dick") []) (Case Flex (Var 2) [Branch (Pattern ("relational","Kate") []) (Comb ConsCall ("Prelude","True") [])])])),Func ("relational","age") 2 Public (FuncType (TCons ("Prelude","_Dict#Num") [TVar 0]) (FuncType (TCons ("relational","Person") []) (TVar 0))) (Rule [1,2] (Case Flex (Var 2) [Branch (Pattern ("relational","Bob") []) (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","fromInt") [Var 1],Lit (Intc 24)]),Branch (Pattern ("relational","John") []) (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","fromInt") [Var 1],Lit (Intc 7)]),Branch (Pattern ("relational","Mary") []) (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","fromInt") [Var 1],Lit (Intc 13)]),Branch (Pattern ("relational","Sue") []) (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","fromInt") [Var 1],Lit (Intc 23)]),Branch (Pattern ("relational","Dick") []) (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","fromInt") [Var 1],Lit (Intc 53)]),Branch (Pattern ("relational","Kate") []) (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","fromInt") [Var 1],Lit (Intc 11)]),Branch (Pattern ("relational","Ned") []) (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","fromInt") [Var 1],Lit (Intc 23)])])),Func ("relational","mappred") 3 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (TCons ("Prelude","Bool") []))) (FuncType (TCons ("Prelude","[]") [TVar 0]) (FuncType (TCons ("Prelude","[]") [TVar 1]) (TCons ("Prelude","Bool") [])))) (Rule [1,2,3] (Case Flex (Var 2) [Branch (Pattern ("Prelude","[]") []) (Case Flex (Var 3) [Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","True") [])]),Branch (Pattern ("Prelude",":") [4,5]) (Case Flex (Var 3) [Branch (Pattern ("Prelude",":") [6,7]) (Case Rigid (Comb FuncCall ("Prelude","&&") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 1,Var 4],Var 6],Comb FuncCall ("relational","mappred") [Var 1,Var 5,Var 7]]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") [])])])])),Func ("relational","con2bool") 1 Public (FuncType (TCons ("Prelude","Bool") []) (TCons ("Prelude","Bool") [])) (Rule [1] (Case Rigid (Var 1) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") [])])),Func ("relational","forevery") 2 Public (FuncType (FuncType (TVar 0) (TCons ("Prelude","Bool") [])) (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Flex (Var 2) [Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Prelude",":") [3,4]) (Case Rigid (Comb FuncCall ("Prelude","apply") [Var 1,Var 3]) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("relational","forevery") [Var 1,Var 4]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") [])])])),Func ("relational","q1") 1 Public (FuncType (TCons ("Prelude","_Dict#Num") [TVar 0]) (TCons ("Prelude","[]") [TVar 0])) (Rule [1] (Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("relational","age") [Var 1],Comb ConsCall ("Prelude",":") [Comb ConsCall ("relational","Bob") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("relational","Sue") [],Comb ConsCall ("Prelude","[]") []]]])),Func ("relational","q2") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("relational","Person") []]) (TCons ("Prelude","Bool") [])) (Rule [1] (Comb FuncCall ("relational","mappred") [Comb (FuncPartCall 2) ("relational","parent") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("relational","Bob") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("relational","Dick") [],Comb ConsCall ("Prelude","[]") []]],Var 1])),Func ("relational","q3") 2 Public (FuncType (TCons ("Prelude","_Dict#Num") [TVar 0]) (FuncType (FuncType (TCons ("relational","Person") []) (FuncType (TVar 0) (TCons ("Prelude","Bool") []))) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Comb FuncCall ("relational","mappred") [Var 2,Comb ConsCall ("Prelude",":") [Comb ConsCall ("relational","Bob") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("relational","Sue") [],Comb ConsCall ("Prelude","[]") []]],Comb ConsCall ("Prelude",":") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","fromInt") [Var 1],Lit (Intc 24)],Comb ConsCall ("Prelude",":") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","fromInt") [Var 1],Lit (Intc 23)],Comb ConsCall ("Prelude","[]") []]]])),Func ("relational","q4") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("relational","Person") []]) (TCons ("Prelude","Bool") [])) (Rule [1] (Comb FuncCall ("relational","mappred") [Comb (FuncPartCall 2) ("relational","q4._#lambda1") [],Var 1,Comb ConsCall ("Prelude",":") [Lit (Intc 24),Comb ConsCall ("Prelude",":") [Lit (Intc 23),Comb ConsCall ("Prelude","[]") []]]])),Func ("relational","q4._#lambda1") 2 Private (FuncType (TCons ("relational","Person") []) (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Comb FuncCall ("relational","con2bool") [Comb FuncCall ("Prelude","=:=") [Comb FuncCall ("relational","age") [Comb FuncCall ("Prelude","_inst#Prelude.Num#Prelude.Int") [],Var 1],Var 2]])),Func ("relational","q5") 2 Public (FuncType (TCons ("Prelude","_Dict#Num") [TVar 0]) (FuncType (TVar 0) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Comb FuncCall ("relational","forevery") [Comb (FuncPartCall 1) ("relational","q5._#lambda2") [Var 2,Var 1],Comb ConsCall ("Prelude",":") [Comb ConsCall ("relational","Ned") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("relational","Bob") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("relational","Sue") [],Comb ConsCall ("Prelude","[]") []]]]])),Func ("relational","q5._#lambda2") 3 Private (FuncType (TVar 0) (FuncType (TCons ("Prelude","_Dict#Num") [TVar 0]) (FuncType (TCons ("relational","Person") []) (TCons ("Prelude","Bool") [])))) (Rule [1,2,3] (Comb FuncCall ("Prelude","=:=") [Comb FuncCall ("relational","age") [Var 2,Var 3],Var 1])),Func ("relational","q6") 2 Public (FuncType (TCons ("Prelude","_Dict#Num") [TVar 0]) (FuncType (TVar 0) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Comb FuncCall ("relational","forevery") [Comb (FuncPartCall 1) ("relational","q6._#lambda3") [Var 2,Var 1],Comb ConsCall ("Prelude",":") [Comb ConsCall ("relational","Ned") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("relational","Sue") [],Comb ConsCall ("Prelude","[]") []]]])),Func ("relational","q6._#lambda3") 3 Private (FuncType (TVar 0) (FuncType (TCons ("Prelude","_Dict#Num") [TVar 0]) (FuncType (TCons ("relational","Person") []) (TCons ("Prelude","Bool") [])))) (Rule [1,2,3] (Comb FuncCall ("Prelude","=:=") [Comb FuncCall ("relational","age") [Var 2,Var 3],Var 1])),Func ("relational","q7") 0 Public (TCons ("Prelude","Bool") []) (Rule [] (Comb FuncCall ("relational","forevery") [Comb (FuncPartCall 1) ("relational","q7._#lambda4") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("relational","Ned") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("relational","Bob") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("relational","Sue") [],Comb ConsCall ("Prelude","[]") []]]]])),Func ("relational","q7._#lambda4") 1 Private (FuncType (TCons ("relational","Person") []) (TCons ("Prelude","Bool") [])) (Rule [1] (Free [2] (Comb FuncCall ("Prelude","=:=") [Comb FuncCall ("relational","age") [Comb FuncCall ("Prelude","_inst#Prelude.Num#Prelude.Int") [],Var 1],Var 2])))] []