(IProg "horseman" ["Prelude"] [(IDataType ("horseman","Nat",0) [(("horseman","O",0),0),(("horseman","S",1),1)])] [(IFunction ("horseman","_inst#Prelude.Data#horseman.Nat",0) 1 Public [0] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (ICaseCons 1 [(IConsBranch ("Prelude","()",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","_Dict#Data",0) [(IFPCall ("horseman","_impl#===#Prelude.Data#horseman.Nat",1) 2 []),(IFCall ("horseman","_impl#aValue#Prelude.Data#horseman.Nat",2) [])]))))])))),(IFunction ("horseman","_impl#===#Prelude.Data#horseman.Nat",1) 2 Public [0] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (ICaseCons 1 [(IConsBranch ("horseman","O",0) 0 (IBlock [] [] (IReturn (IFCall ("horseman","_impl#===#Prelude.Data#horseman.Nat_CASE0",13) [(IVar 2)])))),(IConsBranch ("horseman","S",1) 1 (IBlock [(IVarDecl 4)] [(IVarAssign 4 (IVarAccess 1 [0]))] (IReturn (IFCall ("horseman","_impl#===#Prelude.Data#horseman.Nat_CASE1",12) [(IVar 2),(IVar 4)]))))])))),(IFunction ("horseman","_impl#===#Prelude.Data#horseman.Nat_CASE1",12) 2 Private [0] (IFuncBody (IBlock [(IVarDecl 2),(IVarDecl 4)] [(IVarAssign 2 (IVarAccess 0 [0])),(IVarAssign 4 (IVarAccess 0 [1]))] (ICaseCons 2 [(IConsBranch ("horseman","O",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("horseman","S",1) 1 (IBlock [(IVarDecl 5)] [(IVarAssign 5 (IVarAccess 2 [0]))] (IReturn (IFCall ("horseman","_impl#===#Prelude.Data#horseman.Nat",1) [(IVar 4),(IVar 5)]))))])))),(IFunction ("horseman","_impl#===#Prelude.Data#horseman.Nat_CASE0",13) 1 Private [0] (IFuncBody (IBlock [(IVarDecl 2)] [(IVarAssign 2 (IVarAccess 0 [0]))] (ICaseCons 2 [(IConsBranch ("horseman","O",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",1) [])))),(IConsBranch ("horseman","S",1) 1 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) []))))])))),(IFunction ("horseman","_impl#aValue#Prelude.Data#horseman.Nat",2) 0 Public [] (IFuncBody (IBlock [] [] (IReturn (IOr (ICCall ("horseman","O",0) []) (ICCall ("horseman","S",1) [(IFCall ("horseman","_impl#aValue#Prelude.Data#horseman.Nat",2) [])])))))),(IFunction ("horseman","int2nat",3) 1 Public [] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (IReturn (IFCall ("horseman","int2nat_COMPLEXCASE0",14) [(IVar 1),(IFCall ("Prelude","_impl#<=#Prelude.Ord#Prelude.Int",89) [(IVar 1),(ILit (IInt 0))])]))))),(IFunction ("horseman","int2nat_COMPLEXCASE0",14) 2 Private [1] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (ICaseCons 2 [(IConsBranch ("Prelude","False",0) 0 (IBlock [] [] (IReturn (ICCall ("horseman","S",1) [(IFCall ("horseman","int2nat",3) [(IFCall ("Prelude","_impl#-#Prelude.Num#Prelude.Int",342) [(IVar 1),(ILit (IInt 1))])])])))),(IConsBranch ("Prelude","True",1) 0 (IBlock [] [] (IReturn (ICCall ("horseman","O",0) []))))])))),(IFunction ("horseman","add",4) 2 Public [0] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (ICaseCons 1 [(IConsBranch ("horseman","O",0) 0 (IBlock [] [] (IReturn (IVar 2)))),(IConsBranch ("horseman","S",1) 1 (IBlock [(IVarDecl 3)] [(IVarAssign 3 (IVarAccess 1 [0]))] (IReturn (ICCall ("horseman","S",1) [(IFCall ("horseman","add",4) [(IVar 3),(IVar 2)])]))))])))),(IFunction ("horseman","horseman",5) 4 Public [] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2),(IVarDecl 3),(IVarDecl 4)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1])),(IVarAssign 3 (IVarAccess 0 [2])),(IVarAssign 4 (IVarAccess 0 [3]))] (IReturn (IFCall ("Prelude","&",753) [(IFCall ("Prelude","=:=",749) [(IFPCall ("horseman","_inst#Prelude.Data#horseman.Nat",0) 1 []),(IVar 3),(IFCall ("horseman","add",4) [(IVar 1),(IVar 2)])]),(IFCall ("Prelude","=:=",749) [(IFPCall ("horseman","_inst#Prelude.Data#horseman.Nat",0) 1 []),(IVar 4),(IFCall ("horseman","add",4) [(IFCall ("horseman","add",4) [(IVar 1),(IVar 1)]),(IFCall ("horseman","add",4) [(IFCall ("horseman","add",4) [(IVar 2),(IVar 2)]),(IFCall ("horseman","add",4) [(IVar 2),(IVar 2)])])])])]))))),(IFunction ("horseman","goal1",6) 2 Public [] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (IReturn (IFCall ("horseman","horseman",5) [(IVar 1),(IVar 2),(ICCall ("horseman","S",1) [(ICCall ("horseman","S",1) [(ICCall ("horseman","S",1) [(ICCall ("horseman","O",0) [])])])]),(ICCall ("horseman","S",1) [(ICCall ("horseman","S",1) [(ICCall ("horseman","S",1) [(ICCall ("horseman","S",1) [(ICCall ("horseman","S",1) [(ICCall ("horseman","S",1) [(ICCall ("horseman","S",1) [(ICCall ("horseman","S",1) [(ICCall ("horseman","O",0) [])])])])])])])])])]))))),(IFunction ("horseman","main1",7) 0 Public [] (IFuncBody (IBlock [(IFreeDecl 1),(IFreeDecl 2)] [] (IReturn (IFCall ("Prelude","&>",754) [(IFCall ("horseman","goal1",6) [(IVar 1),(IVar 2)]),(ICCall ("Prelude","(,)",0) [(IVar 1),(IVar 2)])]))))),(IFunction ("horseman","goal2",8) 2 Public [] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (IReturn (IFCall ("horseman","horseman",5) [(IVar 1),(IVar 2),(IFCall ("horseman","int2nat",3) [(ILit (IInt 8))]),(IFCall ("horseman","int2nat",3) [(ILit (IInt 20))])]))))),(IFunction ("horseman","main2",9) 0 Public [] (IFuncBody (IBlock [(IFreeDecl 1),(IFreeDecl 2)] [] (IReturn (IFCall ("Prelude","&>",754) [(IFCall ("horseman","goal1",6) [(IVar 1),(IVar 2)]),(ICCall ("Prelude","(,)",0) [(IVar 1),(IVar 2)])]))))),(IFunction ("horseman","goal3",10) 3 Public [] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2),(IVarDecl 3)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1])),(IVarAssign 3 (IVarAccess 0 [2]))] (IReturn (IFCall ("horseman","horseman",5) [(IVar 1),(IVar 2),(ICCall ("horseman","S",1) [(ICCall ("horseman","S",1) [(ICCall ("horseman","O",0) [])])]),(IVar 3)]))))),(IFunction ("horseman","main3",11) 0 Public [] (IFuncBody (IBlock [(IFreeDecl 1),(IFreeDecl 2)] [] (IReturn (IFCall ("Prelude","&>",754) [(IFCall ("horseman","goal1",6) [(IVar 1),(IVar 2)]),(ICCall ("Prelude","(,)",0) [(IVar 1),(IVar 2)])])))))])