(IProg "mergesort" ["Prelude"] [] [(IFunction ("mergesort","sort",0) 4 Public [] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2),(IVarDecl 3),(IVarDecl 4),(IFreeDecl 5),(IFreeDecl 6)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1])),(IVarAssign 3 (IVarAccess 0 [2])),(IVarAssign 4 (IVarAccess 0 [3]))] (IReturn (IFCall ("mergesort","sort_COMPLEXCASE0",10) [(IVar 2),(IVar 5),(IVar 6),(IVar 1),(IVar 4),(IVar 3),(IFCall ("Prelude","apply",760) [(IFCall ("Prelude","apply",760) [(IFCall ("Prelude","_impl#<#Prelude.Ord#Prelude.Int",87) []),(IFCall ("Prelude","length",698) [(IVar 3)])]),(ILit (IInt 2))])]))))),(IFunction ("mergesort","sort_COMPLEXCASE0",10) 7 Private [6] (IFuncBody (IBlock [(IVarDecl 2),(IVarDecl 5),(IVarDecl 6),(IVarDecl 1),(IVarDecl 4),(IVarDecl 3),(IVarDecl 7)] [(IVarAssign 2 (IVarAccess 0 [0])),(IVarAssign 5 (IVarAccess 0 [1])),(IVarAssign 6 (IVarAccess 0 [2])),(IVarAssign 1 (IVarAccess 0 [3])),(IVarAssign 4 (IVarAccess 0 [4])),(IVarAssign 3 (IVarAccess 0 [5])),(IVarAssign 7 (IVarAccess 0 [6]))] (ICaseCons 7 [(IConsBranch ("Prelude","False",0) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","&",753) [(IFCall ("mergesort","sort",0) [(IVar 1),(IVar 2),(IFCall ("mergesort","firsthalf",2) [(IVar 3)]),(IVar 5)]),(IFCall ("Prelude","&",753) [(IFCall ("mergesort","sort",0) [(IVar 1),(IVar 2),(IFCall ("mergesort","secondhalf",3) [(IVar 3)]),(IVar 6)]),(IFCall ("Prelude","apply",760) [(IFCall ("Prelude","apply",760) [(IFCall ("Prelude","apply",760) [(IVar 2),(IVar 5)]),(IVar 6)]),(IVar 4)])])])))),(IConsBranch ("Prelude","True",1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","=:=",749) [(IFPCall ("Prelude","_inst#Prelude.Data#[]",11) 1 [(IVar 1)]),(IVar 4),(IVar 3)]))))])))),(IFunction ("mergesort","intMerge",1) 3 Public [0] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2),(IVarDecl 3)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1])),(IVarAssign 3 (IVarAccess 0 [2]))] (ICaseCons 1 [(IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","=:=",749) [(IFPCall ("Prelude","_inst#Prelude.Data#[]",11) 1 [(IFPCall ("Prelude","_inst#Prelude.Data#Prelude.Int",5) 1 [])]),(IVar 3),(IVar 2)])))),(IConsBranch ("Prelude",":",1) 2 (IBlock [(IVarDecl 4),(IVarDecl 5)] [(IVarAssign 4 (IVarAccess 1 [0])),(IVarAssign 5 (IVarAccess 1 [1]))] (IReturn (IFCall ("mergesort","intMerge_CASE0",11) [(IVar 2),(IVar 4),(IVar 5),(IVar 3)]))))])))),(IFunction ("mergesort","intMerge_CASE0",11) 4 Private [0] (IFuncBody (IBlock [(IVarDecl 2),(IVarDecl 4),(IVarDecl 5),(IVarDecl 3)] [(IVarAssign 2 (IVarAccess 0 [0])),(IVarAssign 4 (IVarAccess 0 [1])),(IVarAssign 5 (IVarAccess 0 [2])),(IVarAssign 3 (IVarAccess 0 [3]))] (ICaseCons 2 [(IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","=:=",749) [(IFPCall ("Prelude","_inst#Prelude.Data#[]",11) 1 [(IFPCall ("Prelude","_inst#Prelude.Data#Prelude.Int",5) 1 [])]),(IVar 3),(ICCall ("Prelude",":",1) [(IVar 4),(IVar 5)])])))),(IConsBranch ("Prelude",":",1) 2 (IBlock [(IVarDecl 6),(IVarDecl 7)] [(IVarAssign 6 (IVarAccess 2 [0])),(IVarAssign 7 (IVarAccess 2 [1]))] (IReturn (IFCall ("mergesort","intMerge_FREE1",12) [(IVar 4),(IVar 5),(IVar 7),(IVar 3),(IVar 6)]))))])))),(IFunction ("mergesort","intMerge_FREE1",12) 5 Private [] (IFuncBody (IBlock [(IVarDecl 4),(IVarDecl 5),(IVarDecl 7),(IVarDecl 3),(IVarDecl 6),(IFreeDecl 8),(IFreeDecl 9)] [(IVarAssign 4 (IVarAccess 0 [0])),(IVarAssign 5 (IVarAccess 0 [1])),(IVarAssign 7 (IVarAccess 0 [2])),(IVarAssign 3 (IVarAccess 0 [3])),(IVarAssign 6 (IVarAccess 0 [4]))] (IReturn (IFCall ("mergesort","intMerge_COMPLEXCASE2",13) [(IVar 9),(IVar 4),(IVar 5),(IVar 7),(IVar 3),(IVar 6),(IVar 8),(IFCall ("Prelude","apply",760) [(IFCall ("Prelude","apply",760) [(IFCall ("Prelude","_impl#>#Prelude.Ord#Prelude.Int",88) []),(IVar 4)]),(IVar 6)])]))))),(IFunction ("mergesort","intMerge_COMPLEXCASE2",13) 8 Private [7] (IFuncBody (IBlock [(IVarDecl 9),(IVarDecl 4),(IVarDecl 5),(IVarDecl 7),(IVarDecl 3),(IVarDecl 6),(IVarDecl 8),(IVarDecl 10)] [(IVarAssign 9 (IVarAccess 0 [0])),(IVarAssign 4 (IVarAccess 0 [1])),(IVarAssign 5 (IVarAccess 0 [2])),(IVarAssign 7 (IVarAccess 0 [3])),(IVarAssign 3 (IVarAccess 0 [4])),(IVarAssign 6 (IVarAccess 0 [5])),(IVarAssign 8 (IVarAccess 0 [6])),(IVarAssign 10 (IVarAccess 0 [7]))] (ICaseCons 10 [(IConsBranch ("Prelude","False",0) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","&",753) [(IFCall ("mergesort","intMerge",1) [(IVar 5),(ICCall ("Prelude",":",1) [(IVar 6),(IVar 7)]),(IVar 9)]),(IFCall ("Prelude","=:=",749) [(IFPCall ("Prelude","_inst#Prelude.Data#[]",11) 1 [(IFPCall ("Prelude","_inst#Prelude.Data#Prelude.Int",5) 1 [])]),(IVar 3),(ICCall ("Prelude",":",1) [(IVar 4),(IVar 9)])])])))),(IConsBranch ("Prelude","True",1) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","&",753) [(IFCall ("mergesort","intMerge",1) [(ICCall ("Prelude",":",1) [(IVar 4),(IVar 5)]),(IVar 7),(IVar 8)]),(IFCall ("Prelude","=:=",749) [(IFPCall ("Prelude","_inst#Prelude.Data#[]",11) 1 [(IFPCall ("Prelude","_inst#Prelude.Data#Prelude.Int",5) 1 [])]),(IVar 3),(ICCall ("Prelude",":",1) [(IVar 6),(IVar 8)])])]))))])))),(IFunction ("mergesort","firsthalf",2) 1 Public [] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (IReturn (IFCall ("Prelude","take",717) [(IFCall ("Prelude","apply",760) [(IFCall ("Prelude","apply",760) [(IFCall ("Prelude","_impl#div#Prelude.Integral#Prelude.Int",376) []),(IFCall ("Prelude","length",698) [(IVar 1)])]),(ILit (IInt 2))]),(IVar 1)]))))),(IFunction ("mergesort","secondhalf",3) 1 Public [] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (IReturn (IFCall ("Prelude","drop",718) [(IFCall ("Prelude","apply",760) [(IFCall ("Prelude","apply",760) [(IFCall ("Prelude","_impl#div#Prelude.Integral#Prelude.Int",376) []),(IFCall ("Prelude","length",698) [(IVar 1)])]),(ILit (IInt 2))]),(IVar 1)]))))),(IFunction ("mergesort","goal1",4) 1 Public [] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (IReturn (IFCall ("mergesort","sort",0) [(IFPCall ("Prelude","_inst#Prelude.Data#Prelude.Int",5) 1 []),(IFPCall ("mergesort","intMerge",1) 3 []),(ICCall ("Prelude",":",1) [(ILit (IInt 3)),(ICCall ("Prelude",":",1) [(ILit (IInt 1)),(ICCall ("Prelude",":",1) [(ILit (IInt 2)),(ICCall ("Prelude","[]",0) [])])])]),(IVar 1)]))))),(IFunction ("mergesort","main1",5) 0 Public [] (IFuncBody (IBlock [(IFreeDecl 1)] [] (IReturn (IFCall ("mergesort","main1_COMPLEXCASE0",14) [(IVar 1),(IFCall ("mergesort","goal1",4) [(IVar 1)])]))))),(IFunction ("mergesort","main1_COMPLEXCASE0",14) 2 Private [1] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (ICaseCons 2 [(IConsBranch ("Prelude","False",0) 0 (IBlock [] [] IExempt)),(IConsBranch ("Prelude","True",1) 0 (IBlock [] [] (IReturn (IVar 1))))])))),(IFunction ("mergesort","goal2",6) 1 Public [] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (IReturn (IFCall ("mergesort","sort",0) [(IFPCall ("Prelude","_inst#Prelude.Data#Prelude.Int",5) 1 []),(IFPCall ("mergesort","intMerge",1) 3 []),(ICCall ("Prelude",":",1) [(ILit (IInt 3)),(ICCall ("Prelude",":",1) [(ILit (IInt 1)),(ICCall ("Prelude",":",1) [(ILit (IInt 2)),(ICCall ("Prelude",":",1) [(ILit (IInt 5)),(ICCall ("Prelude",":",1) [(ILit (IInt 4)),(ICCall ("Prelude",":",1) [(ILit (IInt 8)),(ICCall ("Prelude","[]",0) [])])])])])])]),(IVar 1)]))))),(IFunction ("mergesort","main2",7) 0 Public [] (IFuncBody (IBlock [(IFreeDecl 1)] [] (IReturn (IFCall ("mergesort","main2_COMPLEXCASE0",15) [(IVar 1),(IFCall ("mergesort","goal2",6) [(IVar 1)])]))))),(IFunction ("mergesort","main2_COMPLEXCASE0",15) 2 Private [1] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (ICaseCons 2 [(IConsBranch ("Prelude","False",0) 0 (IBlock [] [] IExempt)),(IConsBranch ("Prelude","True",1) 0 (IBlock [] [] (IReturn (IVar 1))))])))),(IFunction ("mergesort","goal3",8) 1 Public [] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (IReturn (IFCall ("mergesort","sort",0) [(IFPCall ("Prelude","_inst#Prelude.Data#Prelude.Int",5) 1 []),(IFPCall ("mergesort","intMerge",1) 3 []),(ICCall ("Prelude",":",1) [(ILit (IInt 3)),(ICCall ("Prelude",":",1) [(ILit (IInt 1)),(ICCall ("Prelude",":",1) [(ILit (IInt 2)),(ICCall ("Prelude",":",1) [(ILit (IInt 5)),(ICCall ("Prelude",":",1) [(ILit (IInt 4)),(ICCall ("Prelude",":",1) [(ILit (IInt 8)),(ICCall ("Prelude",":",1) [(ILit (IInt 6)),(ICCall ("Prelude",":",1) [(ILit (IInt 7)),(ICCall ("Prelude",":",1) [(ILit (IInt 2)),(ICCall ("Prelude",":",1) [(ILit (IInt 9)),(ICCall ("Prelude",":",1) [(ILit (IInt 1)),(ICCall ("Prelude",":",1) [(ILit (IInt 4)),(ICCall ("Prelude",":",1) [(ILit (IInt 3)),(ICCall ("Prelude","[]",0) [])])])])])])])])])])])])])]),(IVar 1)]))))),(IFunction ("mergesort","main3",9) 0 Public [] (IFuncBody (IBlock [(IFreeDecl 1)] [] (IReturn (IFCall ("mergesort","main3_COMPLEXCASE0",16) [(IVar 1),(IFCall ("mergesort","goal3",8) [(IVar 1)])]))))),(IFunction ("mergesort","main3_COMPLEXCASE0",16) 2 Private [1] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (ICaseCons 2 [(IConsBranch ("Prelude","False",0) 0 (IBlock [] [] IExempt)),(IConsBranch ("Prelude","True",1) 0 (IBlock [] [] (IReturn (IVar 1))))]))))])