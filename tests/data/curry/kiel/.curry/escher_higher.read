
module "escher_higher"
  import
    "Prelude"
  data "escher_higher.Day"
    constructor "escher_higher.Mon" 0 0
    constructor "escher_higher.Tue" 0 1
    constructor "escher_higher.Wed" 0 2
    constructor "escher_higher.Thu" 0 3
    constructor "escher_higher.Fri" 0 4
    constructor "escher_higher.Sat" 0 5
    constructor "escher_higher.Sun" 0 6
  function "escher_higher.map_" 1
    code
      declare_var 1 ILhs (("escher_higher","map_"),1)
      ATable 1 1 flex
        reference_var 1
        "Prelude.(,)" =>
          declare_var 2 IVar 1 (("Prelude","(,)"),1)
          declare_var 3 IVar 1 (("Prelude","(,)"),2)
          return
            Node "escher_higher.map__#A0" (
              reference_var 2 ,
              reference_var 3 )
  function "escher_higher.map__#A0" 2
    code
      declare_var 2 ILhs (("escher_higher","map__#A0"),1)
      declare_var 3 ILhs (("escher_higher","map__#A0"),2)
      ATable 1 2 flex
        reference_var 3
        "Prelude.[]" =>
          return
            Node "Prelude.[]"
        "Prelude.:" =>
          declare_var 4 IVar 3 (("Prelude",":"),1)
          declare_var 5 IVar 3 (("Prelude",":"),2)
          return
            Node "Prelude.:" (
              Node "Prelude.apply" (
                reference_var 2 ,
                reference_var 4 ) ,
              Node "escher_higher.map_" (
                Node "Prelude.(,)" (
                  reference_var 2 ,
                  reference_var 5 ) ) )
  function "escher_higher.filter_" 1
    code
      declare_var 1 ILhs (("escher_higher","filter_"),1)
      ATable 1 1 flex
        reference_var 1
        "Prelude.(,)" =>
          declare_var 2 IVar 1 (("Prelude","(,)"),1)
          declare_var 3 IVar 1 (("Prelude","(,)"),2)
          return
            Node "escher_higher.filter__#A2" (
              reference_var 2 ,
              reference_var 3 )
  function "escher_higher.filter__#A2" 2
    code
      declare_var 2 ILhs (("escher_higher","filter__#A2"),1)
      declare_var 3 ILhs (("escher_higher","filter__#A2"),2)
      ATable 1 2 flex
        reference_var 3
        "Prelude.[]" =>
          return
            Node "Prelude.[]"
        "Prelude.:" =>
          declare_var 4 IVar 3 (("Prelude",":"),1)
          declare_var 5 IVar 3 (("Prelude",":"),2)
          return
            Node "escher_higher.filter__#A1" (
              reference_var 2 ,
              reference_var 4 ,
              reference_var 5 )
  function "escher_higher.filter__#A1" 3
    code
      declare_var 2 ILhs (("escher_higher","filter__#A1"),1)
      declare_var 4 ILhs (("escher_higher","filter__#A1"),2)
      declare_var 5 ILhs (("escher_higher","filter__#A1"),3)
      return
        Node "escher_higher.filter__#A1_#B0" (
          Node "Prelude.apply" (
            reference_var 2 ,
            reference_var 4 ) ,
          reference_var 2 ,
          reference_var 4 ,
          reference_var 5 )
  function "escher_higher.filter__#A1_#B0" 4
    code
      declare_var 6 ILhs (("escher_higher","filter__#A1_#B0"),1)
      declare_var 2 ILhs (("escher_higher","filter__#A1_#B0"),2)
      declare_var 4 ILhs (("escher_higher","filter__#A1_#B0"),3)
      declare_var 5 ILhs (("escher_higher","filter__#A1_#B0"),4)
      ATable 1 2 rigid
        reference_var 6
        "Prelude.False" =>
          return
            Node "escher_higher.filter_" (
              Node "Prelude.(,)" (
                reference_var 2 ,
                reference_var 5 ) )
        "Prelude.True" =>
          return
            Node "Prelude.:" (
              reference_var 4 ,
              Node "escher_higher.filter_" (
                Node "Prelude.(,)" (
                  reference_var 2 ,
                  reference_var 5 ) ) )
  function "escher_higher.next" 1
    code
      declare_var 1 ILhs (("escher_higher","next"),1)
      ATable 1 7 flex
        reference_var 1
        "escher_higher.Mon" =>
          return
            Node "escher_higher.Tue"
        "escher_higher.Tue" =>
          return
            Node "escher_higher.Wed"
        "escher_higher.Wed" =>
          return
            Node "escher_higher.Thu"
        "escher_higher.Thu" =>
          return
            Node "escher_higher.Fri"
        "escher_higher.Fri" =>
          return
            Node "escher_higher.Sat"
        "escher_higher.Sat" =>
          return
            Node "escher_higher.Sun"
        "escher_higher.Sun" =>
          return
            Node "escher_higher.Mon"
  function "escher_higher.weekday" 1
    code
      declare_var 1 ILhs (("escher_higher","weekday"),1)
      ATable 1 7 flex
        reference_var 1
        "escher_higher.Mon" =>
          return
            Node "Prelude.True"
        "escher_higher.Tue" =>
          return
            Node "Prelude.True"
        "escher_higher.Wed" =>
          return
            Node "Prelude.True"
        "escher_higher.Thu" =>
          return
            Node "Prelude.True"
        "escher_higher.Fri" =>
          return
            Node "Prelude.True"
        "escher_higher.Sat" =>
          return
            Node "Prelude.False"
        "escher_higher.Sun" =>
          return
            Node "Prelude.False"
  function "escher_higher.goal1" 0
    code
      return
        Node "escher_higher.map_" (
          Node "Prelude.(,)" (
            partial 1 (
              Node "escher_higher.next" ) ,
            Node "Prelude.:" (
              Node "escher_higher.Mon" ,
              Node "Prelude.:" (
                Node "escher_higher.Tue" ,
                Node "Prelude.:" (
                  Node "escher_higher.Wed" ,
                  Node "Prelude.[]" ) ) ) ) )
  function "escher_higher.goal2" 0
    code
      return
        Node "escher_higher.filter_" (
          Node "Prelude.(,)" (
            partial 1 (
              Node "escher_higher.weekday" ) ,
            Node "Prelude.:" (
              Node "escher_higher.Sun" ,
              Node "Prelude.:" (
                Node "escher_higher.Mon" ,
                Node "Prelude.:" (
                  Node "escher_higher.Wed" ,
                  Node "Prelude.[]" ) ) ) ) )
