IModule "psort" ["Prelude"] [] [IFunction ("psort","splits") 1 [Declare (Variable 1 (ILhs (("psort","splits"),1))),ATable 1 True (Reference 1) [(IConstructor ("Prelude","[]") 0,[Return (Applic True ("Prelude",":") [Applic True ("Prelude","(,)") [Applic True ("Prelude","[]") [],Applic True ("Prelude","[]") []],Applic True ("Prelude","[]") []])]),(IConstructor ("Prelude",":") 2,[Declare (Variable 2 (IVar 1 (("Prelude",":"),1))),Declare (Variable 3 (IVar 1 (("Prelude",":"),2))),Return (Applic True ("Prelude",":") [Applic True ("Prelude","(,)") [Applic True ("Prelude","[]") [],Applic True ("Prelude",":") [Reference 2,Reference 3]],Applic False ("Prelude","foldr") [PartApplic 2 (Applic False ("psort","splits._#lambda3") [Reference 2]),Applic True ("Prelude","[]") [],Applic False ("psort","splits") [Reference 3]]])])]],IFunction ("psort","splits._#lambda3") 3 [Declare (Variable 1 (ILhs (("psort","splits._#lambda3"),1))),Declare (Variable 2 (ILhs (("psort","splits._#lambda3"),2))),Declare (Variable 3 (ILhs (("psort","splits._#lambda3"),3))),ATable 1 False (Reference 2) [(IConstructor ("Prelude","(,)") 2,[Declare (Variable 4 (IVar 2 (("Prelude","(,)"),1))),Declare (Variable 5 (IVar 2 (("Prelude","(,)"),2))),Return (Applic True ("Prelude",":") [Applic True ("Prelude","(,)") [Applic True ("Prelude",":") [Reference 1,Reference 4],Reference 5],Reference 3])])]],IFunction ("psort","perms") 1 [Declare (Variable 1 (ILhs (("psort","perms"),1))),ATable 1 True (Reference 1) [(IConstructor ("Prelude","[]") 0,[Return (Applic True ("Prelude",":") [Applic True ("Prelude","[]") [],Applic True ("Prelude","[]") []])]),(IConstructor ("Prelude",":") 2,[Declare (Variable 2 (IVar 1 (("Prelude",":"),1))),Declare (Variable 3 (IVar 1 (("Prelude",":"),2))),Return (Applic False ("Prelude","apply") [Applic False ("Prelude","concatMap") [PartApplic 1 (Applic False ("psort","perms._#lambda5") [Reference 2])],Applic False ("psort","perms") [Reference 3]])])]],IFunction ("psort","perms._#lambda5") 2 [Declare (Variable 1 (ILhs (("psort","perms._#lambda5"),1))),Declare (Variable 2 (ILhs (("psort","perms._#lambda5"),2))),Return (Applic False ("Prelude","foldr") [PartApplic 2 (Applic False ("psort","perms._#lambda5._#lambda8") [Reference 1]),Applic True ("Prelude","[]") [],Applic False ("psort","splits") [Reference 2]])],IFunction ("psort","perms._#lambda5._#lambda8") 3 [Declare (Variable 1 (ILhs (("psort","perms._#lambda5._#lambda8"),1))),Declare (Variable 2 (ILhs (("psort","perms._#lambda5._#lambda8"),2))),Declare (Variable 3 (ILhs (("psort","perms._#lambda5._#lambda8"),3))),ATable 1 False (Reference 2) [(IConstructor ("Prelude","(,)") 2,[Declare (Variable 4 (IVar 2 (("Prelude","(,)"),1))),Declare (Variable 5 (IVar 2 (("Prelude","(,)"),2))),Return (Applic True ("Prelude",":") [Applic False ("Prelude","++") [Reference 4,Applic False ("Prelude","++") [Applic True ("Prelude",":") [Reference 1,Applic True ("Prelude","[]") []],Reference 5]],Reference 3])])]],IFunction ("psort","sorted") 2 [Declare (Variable 1 (ILhs (("psort","sorted"),1))),Declare (Variable 2 (ILhs (("psort","sorted"),2))),ATable 1 True (Reference 2) [(IConstructor ("Prelude","[]") 0,[Return (Applic True ("Prelude","True") [])]),(IConstructor ("Prelude",":") 2,[Declare (Variable 3 (IVar 2 (("Prelude",":"),1))),Declare (Variable 4 (IVar 2 (("Prelude",":"),2))),Return (Applic False ("psort","sorted_#A0") [Reference 1,Reference 3,Reference 4])])]],IFunction ("psort","sorted_#A0") 3 [Declare (Variable 1 (ILhs (("psort","sorted_#A0"),1))),Declare (Variable 3 (ILhs (("psort","sorted_#A0"),2))),Declare (Variable 4 (ILhs (("psort","sorted_#A0"),3))),ATable 1 True (Reference 4) [(IConstructor ("Prelude","[]") 0,[Return (Applic True ("Prelude","True") [])]),(IConstructor ("Prelude",":") 2,[Declare (Variable 5 (IVar 4 (("Prelude",":"),1))),Declare (Variable 6 (IVar 4 (("Prelude",":"),2))),Return (Applic False ("Prelude","&&") [Applic False ("Prelude","apply") [Applic False ("Prelude","apply") [Applic False ("Prelude","<=") [Reference 1],Reference 3],Reference 5],Applic False ("psort","sorted") [Reference 1,Applic True ("Prelude",":") [Reference 5,Reference 6]]])])]],IFunction ("psort","sort") 1 [Declare (Variable 1 (ILhs (("psort","sort"),1))),Return (Applic False ("Prelude","head") [Applic False ("Prelude","apply") [Applic False ("Prelude","concatMap") [PartApplic 1 (Applic False ("psort","sort._#lambda10") [])],Applic False ("psort","perms") [Reference 1]]])],IFunction ("psort","sort._#lambda10") 1 [Declare (Variable 1 (ILhs (("psort","sort._#lambda10"),1))),Return (Applic False ("psort","sort._#lambda10_#B0") [Applic False ("psort","sorted") [Applic False ("Prelude","_inst#Prelude.Ord#Prelude.Int") [],Reference 1],Reference 1])],IFunction ("psort","sort._#lambda10_#B0") 2 [Declare (Variable 2 (ILhs (("psort","sort._#lambda10_#B0"),1))),Declare (Variable 1 (ILhs (("psort","sort._#lambda10_#B0"),2))),ATable 1 False (Reference 2) [(IConstructor ("Prelude","False") 0,[Return (Applic True ("Prelude","[]") [])]),(IConstructor ("Prelude","True") 0,[Return (Applic True ("Prelude",":") [Reference 1,Applic True ("Prelude","[]") []])])]],IFunction ("psort","goal") 1 [Declare (Variable 1 (ILhs (("psort","goal"),1))),Return (Applic False ("psort","sort") [Applic False ("Prelude","apply") [Applic False ("Prelude","apply") [Applic False ("Prelude","apply") [Applic False ("Prelude","_impl#enumFromThenTo#Prelude.Enum#Prelude.Int") [],Reference 1],Applic False ("Prelude","_impl#-#Prelude.Num#Prelude.Int") [Reference 1,BuiltinVariant (Bint 1)]],BuiltinVariant (Bint 1)]])],IFunction ("psort","main") 0 [Return (Applic False ("psort","goal") [BuiltinVariant (Bint 5)])]]