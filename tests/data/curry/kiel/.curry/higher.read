
module "higher"
  import
    "Prelude"
  function "higher.map_" 2
    code
      declare_var 1 ILhs (("higher","map_"),1)
      declare_var 2 ILhs (("higher","map_"),2)
      ATable 1 2 flex
        reference_var 2
        "Prelude.[]" =>
          return
            Node "Prelude.[]"
        "Prelude.:" =>
          declare_var 3 IVar 2 (("Prelude",":"),1)
          declare_var 4 IVar 2 (("Prelude",":"),2)
          return
            Node "Prelude.:" (
              Node "Prelude.apply" (
                reference_var 1 ,
                reference_var 3 ) ,
              Node "higher.map_" (
                reference_var 1 ,
                reference_var 4 ) )
  function "higher.foldr_" 3
    code
      declare_var 1 ILhs (("higher","foldr_"),1)
      declare_var 2 ILhs (("higher","foldr_"),2)
      declare_var 3 ILhs (("higher","foldr_"),3)
      ATable 1 2 flex
        reference_var 3
        "Prelude.[]" =>
          return
            reference_var 2
        "Prelude.:" =>
          declare_var 4 IVar 3 (("Prelude",":"),1)
          declare_var 5 IVar 3 (("Prelude",":"),2)
          return
            Node "Prelude.apply" (
              Node "Prelude.apply" (
                reference_var 1 ,
                reference_var 4 ) ,
              Node "higher.foldr_" (
                reference_var 1 ,
                reference_var 2 ,
                reference_var 5 ) )
  function "higher.inc" 2
    code
      declare_var 1 ILhs (("higher","inc"),1)
      declare_var 2 ILhs (("higher","inc"),2)
      return
        Node "Prelude.apply" (
          Node "Prelude.apply" (
            Node "Prelude.+" (
              reference_var 1 ) ,
            reference_var 2 ) ,
          Node "Prelude.apply" (
            Node "Prelude.fromInt" (
              reference_var 1 ) ,
            int 1 ) )
  function "higher.goal1" 0
    code
      return
        Node "Prelude.map" (
          partial 1 (
            Node "higher.inc" (
              Node "Prelude._inst#Prelude.Num#Prelude.Int" ) ) ,
          Node "Prelude.:" (
            int 0 ,
            Node "Prelude.:" (
              int 2 ,
              Node "Prelude.:" (
                int 1 ,
                Node "Prelude.[]" ) ) ) )
  function "higher.goal2" 0
    code
      return
        Node "Prelude.map" (
          partial 1 (
            Node "Prelude.flip" (
              partial 2 (
                Node "Prelude._impl#+#Prelude.Num#Prelude.Int" ) ,
              int 1 ) ) ,
          Node "Prelude.:" (
            int 0 ,
            Node "Prelude.:" (
              int 2 ,
              Node "Prelude.:" (
                int 1 ,
                Node "Prelude.[]" ) ) ) )
  function "higher.goal3" 0
    code
      return
        Node "Prelude.foldr" (
          partial 2 (
            Node "Prelude._impl#+#Prelude.Num#Prelude.Int" ) ,
          int 0 ,
          Node "Prelude.:" (
            int 1 ,
            Node "Prelude.:" (
              int 0 ,
              Node "Prelude.:" (
                int 2 ,
                Node "Prelude.[]" ) ) ) )
  function "higher.goal4" 0
    code
      return
        Node "Prelude.foldr" (
          partial 2 (
            Node "Prelude._impl#*#Prelude.Num#Prelude.Int" ) ,
          int 1 ,
          Node "Prelude.:" (
            int 1 ,
            Node "Prelude.:" (
              int 2 ,
              Node "Prelude.:" (
                int 3 ,
                Node "Prelude.:" (
                  int 4 ,
                  Node "Prelude.:" (
                    int 5 ,
                    Node "Prelude.[]" ) ) ) ) ) )
  function "higher.goal5" 0
    code
      return
        Node "Prelude.foldr" (
          partial 2 (
            Node "higher.goal5._#lambda1" ) ,
          int 1 ,
          Node "Prelude.:" (
            int 1 ,
            Node "Prelude.:" (
              int 2 ,
              Node "Prelude.:" (
                int 3 ,
                Node "Prelude.:" (
                  int 4 ,
                  Node "Prelude.:" (
                    int 5 ,
                    Node "Prelude.[]" ) ) ) ) ) )
  function "higher.goal5._#lambda1" 2
    code
      declare_var 1 ILhs (("higher","goal5._#lambda1"),1)
      declare_var 2 ILhs (("higher","goal5._#lambda1"),2)
      return
        Node "Prelude._impl#*#Prelude.Num#Prelude.Int" (
          reference_var 1 ,
          reference_var 2 )
