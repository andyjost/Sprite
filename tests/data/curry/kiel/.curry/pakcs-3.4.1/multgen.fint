Prog "multgen" ["Prelude"] [] [Func ("multgen","pairs") 2 Public (ForallType [(0,KStar),(1,KStar)] (FuncType (TCons ("Prelude","[]") [TVar 1]) (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TVar 1,TVar 0]])))) (Rule [] (Var 0)),Func ("multgen","pairs._#lambda1") 2 Private (ForallType [(0,KStar),(1,KStar)] (FuncType (TCons ("Prelude","[]") [TVar 0]) (FuncType (TVar 1) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TVar 1,TVar 0]])))) (Rule [] (Var 0)),Func ("multgen","pairs._#lambda1._#lambda2") 2 Private (ForallType [(0,KStar),(1,KStar)] (FuncType (TVar 1) (FuncType (TVar 0) (TCons ("Prelude","(,)") [TVar 1,TVar 0])))) (Rule [] (Var 0)),Func ("multgen","goal1") 0 Public (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("Prelude","Int") []]]) (Rule [] (Var 0)),Func ("multgen","triangle") 1 Public (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("Prelude","Int") []]])) (Rule [] (Var 0)),Func ("multgen","triangle._#lambda3") 1 Private (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("Prelude","Int") []]])) (Rule [] (Var 0)),Func ("multgen","triangle._#lambda3._#lambda4") 2 Private (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("Prelude","Int") []]))) (Rule [] (Var 0)),Func ("multgen","goal2") 0 Public (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("Prelude","Int") []]]) (Rule [] (Var 0)),Func ("multgen","pyTriple") 4 Public (ForallType [(0,KStar)] (FuncType (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Enum") [TVar 0])) (FuncType (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Eq") [TVar 0])) (FuncType (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Num") [TVar 0])) (FuncType (TVar 0) (TCons ("Prelude","[]") [TCons ("Prelude","(,,)") [TVar 0,TVar 0,TVar 0]])))))) (Rule [] (Var 0)),Func ("multgen","pyTriple._#lambda5") 5 Private (ForallType [(0,KStar)] (FuncType (TVar 0) (FuncType (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Enum") [TVar 0])) (FuncType (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Eq") [TVar 0])) (FuncType (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Num") [TVar 0])) (FuncType (TVar 0) (TCons ("Prelude","[]") [TCons ("Prelude","(,,)") [TVar 0,TVar 0,TVar 0]]))))))) (Rule [] (Var 0)),Func ("multgen","pyTriple._#lambda5._#lambda6") 6 Private (ForallType [(0,KStar)] (FuncType (TVar 0) (FuncType (TVar 0) (FuncType (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Enum") [TVar 0])) (FuncType (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Eq") [TVar 0])) (FuncType (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Num") [TVar 0])) (FuncType (TVar 0) (TCons ("Prelude","[]") [TCons ("Prelude","(,,)") [TVar 0,TVar 0,TVar 0]])))))))) (Rule [] (Var 0)),Func ("multgen","pyTriple._#lambda5._#lambda6._#lambda7") 5 Private (ForallType [(0,KStar)] (FuncType (TVar 0) (FuncType (TVar 0) (FuncType (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Eq") [TVar 0])) (FuncType (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Num") [TVar 0])) (FuncType (TVar 0) (TCons ("Prelude","[]") [TCons ("Prelude","(,,)") [TVar 0,TVar 0,TVar 0]]))))))) (Rule [] (Var 0)),Func ("multgen","goal3") 0 Public (TCons ("Prelude","[]") [TCons ("Prelude","(,,)") [TCons ("Prelude","Int") [],TCons ("Prelude","Int") [],TCons ("Prelude","Int") []]]) (Rule [] (Var 0))] []