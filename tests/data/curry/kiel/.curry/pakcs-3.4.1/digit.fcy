Prog "digit" ["Prelude"] [] [Func ("digit","digit") 1 Public (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","Bool") [])) (Rule [1] (Case Flex (Var 1) [Branch (LPattern (Intc 0)) (Comb FuncCall ("Prelude","success") []),Branch (LPattern (Intc 1)) (Comb FuncCall ("Prelude","success") []),Branch (LPattern (Intc 2)) (Comb FuncCall ("Prelude","success") []),Branch (LPattern (Intc 3)) (Comb FuncCall ("Prelude","success") []),Branch (LPattern (Intc 4)) (Comb FuncCall ("Prelude","success") []),Branch (LPattern (Intc 5)) (Comb FuncCall ("Prelude","success") []),Branch (LPattern (Intc 6)) (Comb FuncCall ("Prelude","success") []),Branch (LPattern (Intc 7)) (Comb FuncCall ("Prelude","success") []),Branch (LPattern (Intc 8)) (Comb FuncCall ("Prelude","success") []),Branch (LPattern (Intc 9)) (Comb FuncCall ("Prelude","success") [])])),Func ("digit","goal") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Comb FuncCall ("Prelude","&") [Comb FuncCall ("Prelude","=:=") [Comb (FuncPartCall 1) ("Prelude","_inst#Prelude.Data#Prelude.Int") [],Comb FuncCall ("Prelude","_impl#+#Prelude.Num#Prelude.Int") [Var 1,Var 1],Var 2],Comb FuncCall ("Prelude","&") [Comb FuncCall ("Prelude","=:=") [Comb (FuncPartCall 1) ("Prelude","_inst#Prelude.Data#Prelude.Int") [],Comb FuncCall ("Prelude","_impl#*#Prelude.Num#Prelude.Int") [Var 1,Var 1],Var 2],Comb FuncCall ("digit","digit") [Var 1]]])),Func ("digit","main") 0 Public (TCons ("Prelude","Bool") []) (Rule [] (Free [1,2] (Comb FuncCall ("digit","goal") [Var 1,Var 2])))] []