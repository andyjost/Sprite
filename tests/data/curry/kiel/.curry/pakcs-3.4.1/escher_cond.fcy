Prog "escher_cond" ["Prelude"] [Type ("escher_cond","Alpha") Public [] [Cons ("escher_cond","A") 0 Public [],Cons ("escher_cond","B") 0 Public [],Cons ("escher_cond","C") 0 Public [],Cons ("escher_cond","D") 0 Public []]] [Func ("escher_cond","_inst#Prelude.Data#escher_cond.Alpha") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Data") [TCons ("escher_cond","Alpha") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Data") [Comb (FuncPartCall 2) ("escher_cond","_impl#===#Prelude.Data#escher_cond.Alpha") [],Comb FuncCall ("escher_cond","_impl#aValue#Prelude.Data#escher_cond.Alpha") []])])),Func ("escher_cond","_impl#===#Prelude.Data#escher_cond.Alpha") 2 Public (FuncType (TCons ("escher_cond","Alpha") []) (FuncType (TCons ("escher_cond","Alpha") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("escher_cond","A") []) (Case Flex (Var 2) [Branch (Pattern ("escher_cond","A") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("escher_cond","B") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_cond","C") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_cond","D") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("escher_cond","B") []) (Case Flex (Var 2) [Branch (Pattern ("escher_cond","A") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_cond","B") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("escher_cond","C") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_cond","D") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("escher_cond","C") []) (Case Flex (Var 2) [Branch (Pattern ("escher_cond","A") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_cond","B") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_cond","C") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("escher_cond","D") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("escher_cond","D") []) (Case Flex (Var 2) [Branch (Pattern ("escher_cond","A") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_cond","B") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_cond","C") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_cond","D") []) (Comb ConsCall ("Prelude","True") [])])])),Func ("escher_cond","_impl#aValue#Prelude.Data#escher_cond.Alpha") 0 Public (TCons ("escher_cond","Alpha") []) (Rule [] (Or (Or (Or (Comb ConsCall ("escher_cond","A") []) (Comb ConsCall ("escher_cond","B") [])) (Comb ConsCall ("escher_cond","C") [])) (Comb ConsCall ("escher_cond","D") []))),Func ("escher_cond","_inst#Prelude.Eq#escher_cond.Alpha") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Eq") [TCons ("escher_cond","Alpha") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Eq") [Comb (FuncPartCall 2) ("escher_cond","_impl#==#Prelude.Eq#escher_cond.Alpha") [],Comb FuncCall ("escher_cond","_impl#/=#Prelude.Eq#escher_cond.Alpha") []])])),Func ("escher_cond","_impl#==#Prelude.Eq#escher_cond.Alpha") 2 Public (FuncType (TCons ("escher_cond","Alpha") []) (FuncType (TCons ("escher_cond","Alpha") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("escher_cond","A") []) (Case Flex (Var 2) [Branch (Pattern ("escher_cond","A") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("escher_cond","B") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_cond","C") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_cond","D") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("escher_cond","B") []) (Case Flex (Var 2) [Branch (Pattern ("escher_cond","A") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_cond","B") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("escher_cond","C") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_cond","D") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("escher_cond","C") []) (Case Flex (Var 2) [Branch (Pattern ("escher_cond","A") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_cond","B") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_cond","C") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("escher_cond","D") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("escher_cond","D") []) (Case Flex (Var 2) [Branch (Pattern ("escher_cond","A") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_cond","B") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_cond","C") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_cond","D") []) (Comb ConsCall ("Prelude","True") [])])])),Func ("escher_cond","_impl#/=#Prelude.Eq#escher_cond.Alpha") 0 Public (FuncType (TCons ("escher_cond","Alpha") []) (FuncType (TCons ("escher_cond","Alpha") []) (TCons ("Prelude","Bool") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#/=#Prelude.Eq") [Comb (FuncPartCall 1) ("escher_cond","_inst#Prelude.Eq#escher_cond.Alpha") []])),Func ("escher_cond","membercheck") 1 Public (FuncType (TCons ("Prelude","(,)") [TCons ("escher_cond","Alpha") [],TCons ("Prelude","[]") [TCons ("escher_cond","Alpha") []]]) (TCons ("Prelude","Bool") [])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case Flex (Var 3) [Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Prelude",":") [4,5]) (Case Rigid (Comb FuncCall ("escher_cond","_impl#==#Prelude.Eq#escher_cond.Alpha") [Var 2,Var 4]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("escher_cond","membercheck") [Comb ConsCall ("Prelude","(,)") [Var 2,Var 5]])])])])),Func ("escher_cond","goal1") 0 Public (TCons ("Prelude","Bool") []) (Rule [] (Comb FuncCall ("escher_cond","membercheck") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("escher_cond","B") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("escher_cond","A") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("escher_cond","B") [],Comb ConsCall ("Prelude","[]") []]]]])),Func ("escher_cond","goal2") 0 Public (TCons ("Prelude","Bool") []) (Rule [] (Comb FuncCall ("escher_cond","membercheck") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("escher_cond","C") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("escher_cond","A") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("escher_cond","B") [],Comb ConsCall ("Prelude","[]") []]]]])),Func ("escher_cond","goal3") 0 Public (TCons ("Prelude","Bool") []) (Rule [] (Free [1] (Comb FuncCall ("escher_cond","membercheck") [Comb ConsCall ("Prelude","(,)") [Var 1,Comb ConsCall ("Prelude",":") [Comb ConsCall ("escher_cond","A") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("escher_cond","B") [],Comb ConsCall ("Prelude","[]") []]]]])))] []