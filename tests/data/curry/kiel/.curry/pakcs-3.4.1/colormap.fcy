Prog "colormap" ["Prelude"] [Type ("colormap","Color") Public [] [Cons ("colormap","Red") 0 Public [],Cons ("colormap","Green") 0 Public [],Cons ("colormap","Yellow") 0 Public [],Cons ("colormap","Blue") 0 Public []]] [Func ("colormap","_inst#Prelude.Data#colormap.Color") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Data") [TCons ("colormap","Color") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Data") [Comb (FuncPartCall 2) ("colormap","_impl#===#Prelude.Data#colormap.Color") [],Comb FuncCall ("colormap","_impl#aValue#Prelude.Data#colormap.Color") []])])),Func ("colormap","_impl#===#Prelude.Data#colormap.Color") 2 Public (FuncType (TCons ("colormap","Color") []) (FuncType (TCons ("colormap","Color") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("colormap","Red") []) (Case Flex (Var 2) [Branch (Pattern ("colormap","Red") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("colormap","Green") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("colormap","Yellow") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("colormap","Blue") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("colormap","Green") []) (Case Flex (Var 2) [Branch (Pattern ("colormap","Red") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("colormap","Green") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("colormap","Yellow") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("colormap","Blue") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("colormap","Yellow") []) (Case Flex (Var 2) [Branch (Pattern ("colormap","Red") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("colormap","Green") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("colormap","Yellow") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("colormap","Blue") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("colormap","Blue") []) (Case Flex (Var 2) [Branch (Pattern ("colormap","Red") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("colormap","Green") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("colormap","Yellow") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("colormap","Blue") []) (Comb ConsCall ("Prelude","True") [])])])),Func ("colormap","_impl#aValue#Prelude.Data#colormap.Color") 0 Public (TCons ("colormap","Color") []) (Rule [] (Or (Or (Or (Comb ConsCall ("colormap","Red") []) (Comb ConsCall ("colormap","Green") [])) (Comb ConsCall ("colormap","Yellow") [])) (Comb ConsCall ("colormap","Blue") []))),Func ("colormap","_inst#Prelude.Eq#colormap.Color") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Eq") [TCons ("colormap","Color") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Eq") [Comb (FuncPartCall 2) ("colormap","_impl#==#Prelude.Eq#colormap.Color") [],Comb FuncCall ("colormap","_impl#/=#Prelude.Eq#colormap.Color") []])])),Func ("colormap","_impl#==#Prelude.Eq#colormap.Color") 2 Public (FuncType (TCons ("colormap","Color") []) (FuncType (TCons ("colormap","Color") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("colormap","Red") []) (Case Flex (Var 2) [Branch (Pattern ("colormap","Red") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("colormap","Green") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("colormap","Yellow") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("colormap","Blue") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("colormap","Green") []) (Case Flex (Var 2) [Branch (Pattern ("colormap","Red") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("colormap","Green") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("colormap","Yellow") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("colormap","Blue") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("colormap","Yellow") []) (Case Flex (Var 2) [Branch (Pattern ("colormap","Red") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("colormap","Green") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("colormap","Yellow") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("colormap","Blue") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("colormap","Blue") []) (Case Flex (Var 2) [Branch (Pattern ("colormap","Red") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("colormap","Green") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("colormap","Yellow") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("colormap","Blue") []) (Comb ConsCall ("Prelude","True") [])])])),Func ("colormap","_impl#/=#Prelude.Eq#colormap.Color") 0 Public (FuncType (TCons ("colormap","Color") []) (FuncType (TCons ("colormap","Color") []) (TCons ("Prelude","Bool") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#/=#Prelude.Eq") [Comb (FuncPartCall 1) ("colormap","_inst#Prelude.Eq#colormap.Color") []])),Func ("colormap","diff") 3 Public (ForallType [(0,KStar)] (FuncType (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Eq") [TVar 0])) (FuncType (TVar 0) (FuncType (TVar 0) (TCons ("Prelude","Bool") []))))) (Rule [1,2,3] (Comb FuncCall ("Prelude","=:=") [Comb (FuncPartCall 1) ("Prelude","_inst#Prelude.Data#Prelude.Bool") [],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","==") [Var 1],Var 2],Var 3],Comb ConsCall ("Prelude","False") []])),Func ("colormap","isColor") 1 Public (FuncType (TCons ("colormap","Color") []) (TCons ("Prelude","Bool") [])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("colormap","Red") []) (Comb FuncCall ("Prelude","success") []),Branch (Pattern ("colormap","Yellow") []) (Comb FuncCall ("Prelude","success") []),Branch (Pattern ("colormap","Green") []) (Comb FuncCall ("Prelude","success") []),Branch (Pattern ("colormap","Blue") []) (Comb FuncCall ("Prelude","success") [])])),Func ("colormap","coloring") 4 Public (FuncType (TCons ("colormap","Color") []) (FuncType (TCons ("colormap","Color") []) (FuncType (TCons ("colormap","Color") []) (FuncType (TCons ("colormap","Color") []) (TCons ("Prelude","Bool") []))))) (Rule [1,2,3,4] (Comb FuncCall ("Prelude","&") [Comb FuncCall ("colormap","isColor") [Var 1],Comb FuncCall ("Prelude","&") [Comb FuncCall ("colormap","isColor") [Var 2],Comb FuncCall ("Prelude","&") [Comb FuncCall ("colormap","isColor") [Var 3],Comb FuncCall ("colormap","isColor") [Var 4]]]])),Func ("colormap","correct") 4 Public (FuncType (TCons ("colormap","Color") []) (FuncType (TCons ("colormap","Color") []) (FuncType (TCons ("colormap","Color") []) (FuncType (TCons ("colormap","Color") []) (TCons ("Prelude","Bool") []))))) (Rule [1,2,3,4] (Comb FuncCall ("Prelude","&") [Comb FuncCall ("colormap","diff") [Comb (FuncPartCall 1) ("colormap","_inst#Prelude.Eq#colormap.Color") [],Var 1,Var 2],Comb FuncCall ("Prelude","&") [Comb FuncCall ("colormap","diff") [Comb (FuncPartCall 1) ("colormap","_inst#Prelude.Eq#colormap.Color") [],Var 1,Var 3],Comb FuncCall ("Prelude","&") [Comb FuncCall ("colormap","diff") [Comb (FuncPartCall 1) ("colormap","_inst#Prelude.Eq#colormap.Color") [],Var 2,Var 3],Comb FuncCall ("Prelude","&") [Comb FuncCall ("colormap","diff") [Comb (FuncPartCall 1) ("colormap","_inst#Prelude.Eq#colormap.Color") [],Var 2,Var 4],Comb FuncCall ("colormap","diff") [Comb (FuncPartCall 1) ("colormap","_inst#Prelude.Eq#colormap.Color") [],Var 3,Var 4]]]]])),Func ("colormap","goal1") 4 Public (FuncType (TCons ("colormap","Color") []) (FuncType (TCons ("colormap","Color") []) (FuncType (TCons ("colormap","Color") []) (FuncType (TCons ("colormap","Color") []) (TCons ("Prelude","Bool") []))))) (Rule [1,2,3,4] (Comb FuncCall ("Prelude","&") [Comb FuncCall ("colormap","coloring") [Var 1,Var 2,Var 3,Var 4],Comb FuncCall ("colormap","correct") [Var 1,Var 2,Var 3,Var 4]])),Func ("colormap","main1") 0 Public (TCons ("Prelude","(,,,)") [TCons ("colormap","Color") [],TCons ("colormap","Color") [],TCons ("colormap","Color") [],TCons ("colormap","Color") []]) (Rule [] (Free [1,2,3,4] (Comb FuncCall ("Prelude","&>") [Comb FuncCall ("colormap","goal1") [Var 1,Var 2,Var 3,Var 4],Comb ConsCall ("Prelude","(,,,)") [Var 1,Var 2,Var 3,Var 4]]))),Func ("colormap","goal2") 4 Public (FuncType (TCons ("colormap","Color") []) (FuncType (TCons ("colormap","Color") []) (FuncType (TCons ("colormap","Color") []) (FuncType (TCons ("colormap","Color") []) (TCons ("Prelude","Bool") []))))) (Rule [1,2,3,4] (Comb FuncCall ("Prelude","&") [Comb FuncCall ("colormap","correct") [Var 1,Var 2,Var 3,Var 4],Comb FuncCall ("colormap","coloring") [Var 1,Var 2,Var 3,Var 4]])),Func ("colormap","main2") 0 Public (TCons ("Prelude","(,,,)") [TCons ("colormap","Color") [],TCons ("colormap","Color") [],TCons ("colormap","Color") [],TCons ("colormap","Color") []]) (Rule [] (Free [1,2,3,4] (Comb FuncCall ("Prelude","&>") [Comb FuncCall ("colormap","goal2") [Var 1,Var 2,Var 3,Var 4],Comb ConsCall ("Prelude","(,,,)") [Var 1,Var 2,Var 3,Var 4]])))] []