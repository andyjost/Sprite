Prog "assembler" ["Prelude"] [Type ("assembler","Instruction") Public [] [Cons ("assembler","Jump") 1 Public [TCons ("assembler","LabelId") []],Cons ("assembler","Label") 1 Public [TCons ("assembler","LabelId") []]],Type ("assembler","LabelId") Public [] [Cons ("assembler","L0") 0 Public [],Cons ("assembler","L1") 0 Public [],Cons ("assembler","L2") 0 Public [],Cons ("assembler","L3") 0 Public [],Cons ("assembler","L4") 0 Public [],Cons ("assembler","L5") 0 Public [],Cons ("assembler","L6") 0 Public [],Cons ("assembler","L7") 0 Public [],Cons ("assembler","L8") 0 Public [],Cons ("assembler","L9") 0 Public []]] [Func ("assembler","_inst#Prelude.Data#assembler.Instruction") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Data") [TCons ("assembler","Instruction") []])) (Rule [] (Var 0)),Func ("assembler","_impl#===#Prelude.Data#assembler.Instruction") 2 Public (FuncType (TCons ("assembler","Instruction") []) (FuncType (TCons ("assembler","Instruction") []) (TCons ("Prelude","Bool") []))) (Rule [] (Var 0)),Func ("assembler","_impl#aValue#Prelude.Data#assembler.Instruction") 0 Public (TCons ("assembler","Instruction") []) (Rule [] (Var 0)),Func ("assembler","_inst#Prelude.Data#assembler.LabelId") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Data") [TCons ("assembler","LabelId") []])) (Rule [] (Var 0)),Func ("assembler","_impl#===#Prelude.Data#assembler.LabelId") 2 Public (FuncType (TCons ("assembler","LabelId") []) (FuncType (TCons ("assembler","LabelId") []) (TCons ("Prelude","Bool") []))) (Rule [] (Var 0)),Func ("assembler","_impl#aValue#Prelude.Data#assembler.LabelId") 0 Public (TCons ("assembler","LabelId") []) (Rule [] (Var 0)),Func ("assembler","_inst#Prelude.Eq#assembler.LabelId") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Eq") [TCons ("assembler","LabelId") []])) (Rule [] (Var 0)),Func ("assembler","_impl#==#Prelude.Eq#assembler.LabelId") 2 Public (FuncType (TCons ("assembler","LabelId") []) (FuncType (TCons ("assembler","LabelId") []) (TCons ("Prelude","Bool") []))) (Rule [] (Var 0)),Func ("assembler","_impl#/=#Prelude.Eq#assembler.LabelId") 0 Public (FuncType (TCons ("assembler","LabelId") []) (FuncType (TCons ("assembler","LabelId") []) (TCons ("Prelude","Bool") []))) (Rule [] (Var 0)),Func ("assembler","assembler") 3 Public (FuncType (TCons ("Prelude","[]") [TCons ("assembler","Instruction") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("assembler","LabelId") [],TCons ("Prelude","Int") []]]) (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","[]") [TCons ("Prelude","Int") []])))) (Rule [] (Var 0)),Func ("assembler","insertST") 5 Public (ForallType [(0,KStar),(1,KStar)] (FuncType (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Eq") [TVar 1])) (FuncType (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Data") [TVar 0])) (FuncType (TVar 1) (FuncType (TVar 0) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TVar 1,TVar 0]]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TVar 1,TVar 0]]))))))) (Rule [] (Var 0)),Func ("assembler","lookupST") 7 Public (ForallType [(0,KStar),(1,KStar)] (FuncType (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Data") [TVar 1])) (FuncType (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Eq") [TVar 1])) (FuncType (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Data") [TVar 0])) (FuncType (TVar 1) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TVar 1,TVar 0]]) (FuncType (TVar 0) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TVar 1,TVar 0]]) (TCons ("Prelude","Bool") []))))))))) (Rule [] (Var 0)),Func ("assembler","main") 0 Public (TCons ("Prelude","[]") [TCons ("Prelude","Int") []]) (Rule [] (Var 0))] []