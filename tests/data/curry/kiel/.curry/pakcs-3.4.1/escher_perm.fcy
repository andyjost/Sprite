Prog "escher_perm" ["Prelude"] [Type ("escher_perm","Day") Public [] [Cons ("escher_perm","Mon") 0 Public [],Cons ("escher_perm","Tue") 0 Public [],Cons ("escher_perm","Wed") 0 Public [],Cons ("escher_perm","Thu") 0 Public [],Cons ("escher_perm","Fri") 0 Public [],Cons ("escher_perm","Sat") 0 Public [],Cons ("escher_perm","Sun") 0 Public []],Type ("escher_perm","Person") Public [] [Cons ("escher_perm","Mary") 0 Public [],Cons ("escher_perm","Bill") 0 Public [],Cons ("escher_perm","Joe") 0 Public [],Cons ("escher_perm","Fred") 0 Public []]] [Func ("escher_perm","_inst#Prelude.Data#escher_perm.Day") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Data") [TCons ("escher_perm","Day") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Data") [Comb (FuncPartCall 2) ("escher_perm","_impl#===#Prelude.Data#escher_perm.Day") [],Comb FuncCall ("escher_perm","_impl#aValue#Prelude.Data#escher_perm.Day") []])])),Func ("escher_perm","_impl#===#Prelude.Data#escher_perm.Day") 2 Public (FuncType (TCons ("escher_perm","Day") []) (FuncType (TCons ("escher_perm","Day") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("escher_perm","Mon") []) (Case Flex (Var 2) [Branch (Pattern ("escher_perm","Mon") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("escher_perm","Tue") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Wed") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Thu") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Fri") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Sat") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Sun") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("escher_perm","Tue") []) (Case Flex (Var 2) [Branch (Pattern ("escher_perm","Mon") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Tue") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("escher_perm","Wed") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Thu") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Fri") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Sat") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Sun") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("escher_perm","Wed") []) (Case Flex (Var 2) [Branch (Pattern ("escher_perm","Mon") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Tue") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Wed") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("escher_perm","Thu") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Fri") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Sat") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Sun") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("escher_perm","Thu") []) (Case Flex (Var 2) [Branch (Pattern ("escher_perm","Mon") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Tue") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Wed") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Thu") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("escher_perm","Fri") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Sat") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Sun") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("escher_perm","Fri") []) (Case Flex (Var 2) [Branch (Pattern ("escher_perm","Mon") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Tue") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Wed") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Thu") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Fri") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("escher_perm","Sat") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Sun") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("escher_perm","Sat") []) (Case Flex (Var 2) [Branch (Pattern ("escher_perm","Mon") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Tue") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Wed") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Thu") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Fri") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Sat") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("escher_perm","Sun") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("escher_perm","Sun") []) (Case Flex (Var 2) [Branch (Pattern ("escher_perm","Mon") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Tue") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Wed") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Thu") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Fri") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Sat") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Sun") []) (Comb ConsCall ("Prelude","True") [])])])),Func ("escher_perm","_impl#aValue#Prelude.Data#escher_perm.Day") 0 Public (TCons ("escher_perm","Day") []) (Rule [] (Or (Or (Or (Or (Or (Or (Comb ConsCall ("escher_perm","Mon") []) (Comb ConsCall ("escher_perm","Tue") [])) (Comb ConsCall ("escher_perm","Wed") [])) (Comb ConsCall ("escher_perm","Thu") [])) (Comb ConsCall ("escher_perm","Fri") [])) (Comb ConsCall ("escher_perm","Sat") [])) (Comb ConsCall ("escher_perm","Sun") []))),Func ("escher_perm","_inst#Prelude.Data#escher_perm.Person") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Data") [TCons ("escher_perm","Person") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Data") [Comb (FuncPartCall 2) ("escher_perm","_impl#===#Prelude.Data#escher_perm.Person") [],Comb FuncCall ("escher_perm","_impl#aValue#Prelude.Data#escher_perm.Person") []])])),Func ("escher_perm","_impl#===#Prelude.Data#escher_perm.Person") 2 Public (FuncType (TCons ("escher_perm","Person") []) (FuncType (TCons ("escher_perm","Person") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("escher_perm","Mary") []) (Case Flex (Var 2) [Branch (Pattern ("escher_perm","Mary") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("escher_perm","Bill") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Joe") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Fred") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("escher_perm","Bill") []) (Case Flex (Var 2) [Branch (Pattern ("escher_perm","Mary") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Bill") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("escher_perm","Joe") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Fred") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("escher_perm","Joe") []) (Case Flex (Var 2) [Branch (Pattern ("escher_perm","Mary") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Bill") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Joe") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("escher_perm","Fred") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("escher_perm","Fred") []) (Case Flex (Var 2) [Branch (Pattern ("escher_perm","Mary") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Bill") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Joe") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("escher_perm","Fred") []) (Comb ConsCall ("Prelude","True") [])])])),Func ("escher_perm","_impl#aValue#Prelude.Data#escher_perm.Person") 0 Public (TCons ("escher_perm","Person") []) (Rule [] (Or (Or (Or (Comb ConsCall ("escher_perm","Mary") []) (Comb ConsCall ("escher_perm","Bill") [])) (Comb ConsCall ("escher_perm","Joe") [])) (Comb ConsCall ("escher_perm","Fred") []))),Func ("escher_perm","permute") 2 Public (ForallType [(0,KStar)] (FuncType (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Data") [TVar 0])) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TVar 0],TCons ("Prelude","[]") [TVar 0]]) (TCons ("Prelude","Bool") [])))) (Rule [1,2] (Case Flex (Var 2) [Branch (Pattern ("Prelude","(,)") [3,4]) (Case Flex (Var 3) [Branch (Pattern ("Prelude","[]") []) (Comb FuncCall ("Prelude","=:=") [Comb (FuncPartCall 1) ("Prelude","_inst#Prelude.Data#[]") [Var 1],Var 4,Comb ConsCall ("Prelude","[]") []]),Branch (Pattern ("Prelude",":") [5,6]) (Free [7,8,9] (Comb FuncCall ("Prelude","&") [Comb FuncCall ("escher_perm","permute") [Var 1,Comb ConsCall ("Prelude","(,)") [Var 6,Var 7]],Comb FuncCall ("Prelude","&") [Comb FuncCall ("escher_perm","split") [Var 1,Comb ConsCall ("Prelude","(,,)") [Var 7,Var 8,Var 9]],Comb FuncCall ("Prelude","=:=") [Comb (FuncPartCall 1) ("Prelude","_inst#Prelude.Data#[]") [Var 1],Var 4,Comb FuncCall ("escher_perm","concatenate") [Comb ConsCall ("Prelude","(,)") [Var 8,Comb ConsCall ("Prelude",":") [Var 5,Var 9]]]]]]))])])),Func ("escher_perm","concatenate") 1 Public (ForallType [(0,KStar)] (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TVar 0],TCons ("Prelude","[]") [TVar 0]]) (TCons ("Prelude","[]") [TVar 0]))) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case Flex (Var 2) [Branch (Pattern ("Prelude","[]") []) (Var 3),Branch (Pattern ("Prelude",":") [4,5]) (Comb ConsCall ("Prelude",":") [Var 4,Comb FuncCall ("escher_perm","concatenate") [Comb ConsCall ("Prelude","(,)") [Var 5,Var 3]]])])])),Func ("escher_perm","split") 2 Public (ForallType [(0,KStar)] (FuncType (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Data") [TVar 0])) (FuncType (TCons ("Prelude","(,,)") [TCons ("Prelude","[]") [TVar 0],TCons ("Prelude","[]") [TVar 0],TCons ("Prelude","[]") [TVar 0]]) (TCons ("Prelude","Bool") [])))) (Rule [1,2] (Case Flex (Var 2) [Branch (Pattern ("Prelude","(,,)") [3,4,5]) (Case Flex (Var 3) [Branch (Pattern ("Prelude","[]") []) (Comb FuncCall ("Prelude","&") [Comb FuncCall ("Prelude","=:=") [Comb (FuncPartCall 1) ("Prelude","_inst#Prelude.Data#[]") [Var 1],Var 4,Comb ConsCall ("Prelude","[]") []],Comb FuncCall ("Prelude","=:=") [Comb (FuncPartCall 1) ("Prelude","_inst#Prelude.Data#[]") [Var 1],Var 5,Comb ConsCall ("Prelude","[]") []]]),Branch (Pattern ("Prelude",":") [6,7]) (Or (Comb FuncCall ("Prelude","&") [Comb FuncCall ("Prelude","=:=") [Comb (FuncPartCall 1) ("Prelude","_inst#Prelude.Data#[]") [Var 1],Var 4,Comb ConsCall ("Prelude","[]") []],Comb FuncCall ("Prelude","=:=") [Comb (FuncPartCall 1) ("Prelude","_inst#Prelude.Data#[]") [Var 1],Var 5,Comb ConsCall ("Prelude",":") [Var 6,Var 7]]]) (Free [8] (Comb FuncCall ("Prelude","&") [Comb FuncCall ("Prelude","=:=") [Comb (FuncPartCall 1) ("Prelude","_inst#Prelude.Data#[]") [Var 1],Var 4,Comb ConsCall ("Prelude",":") [Var 6,Var 8]],Comb FuncCall ("escher_perm","split") [Var 1,Comb ConsCall ("Prelude","(,,)") [Var 7,Var 8,Var 5]]])))])])),Func ("escher_perm","splitc") 2 Public (ForallType [(0,KStar)] (FuncType (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Data") [TVar 0])) (FuncType (TCons ("Prelude","(,,)") [TCons ("Prelude","[]") [TVar 0],TCons ("Prelude","[]") [TVar 0],TCons ("Prelude","[]") [TVar 0]]) (TCons ("Prelude","Bool") [])))) (Rule [1,2] (Case Flex (Var 2) [Branch (Pattern ("Prelude","(,,)") [3,4,5]) (Comb FuncCall ("Prelude","=:=") [Comb (FuncPartCall 1) ("Prelude","_inst#Prelude.Data#[]") [Var 1],Comb FuncCall ("escher_perm","concatenate") [Comb ConsCall ("Prelude","(,)") [Var 4,Var 5]],Var 3])])),Func ("escher_perm","goal1") 0 Public (TCons ("Prelude","[]") [TCons ("escher_perm","Day") []]) (Rule [] (Comb FuncCall ("escher_perm","concatenate") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude",":") [Comb ConsCall ("escher_perm","Mon") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("escher_perm","Tue") [],Comb ConsCall ("Prelude","[]") []]],Comb ConsCall ("Prelude",":") [Comb ConsCall ("escher_perm","Wed") [],Comb ConsCall ("Prelude","[]") []]]])),Func ("escher_perm","goal2") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("escher_perm","Day") []]) (FuncType (TCons ("Prelude","[]") [TCons ("escher_perm","Day") []]) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Comb FuncCall ("escher_perm","split") [Comb (FuncPartCall 1) ("escher_perm","_inst#Prelude.Data#escher_perm.Day") [],Comb ConsCall ("Prelude","(,,)") [Comb ConsCall ("Prelude",":") [Comb ConsCall ("escher_perm","Mon") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("escher_perm","Tue") [],Comb ConsCall ("Prelude","[]") []]],Var 1,Var 2]])),Func ("escher_perm","goal3") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("escher_perm","Day") []]) (TCons ("Prelude","Bool") [])) (Rule [1] (Comb FuncCall ("escher_perm","permute") [Comb (FuncPartCall 1) ("escher_perm","_inst#Prelude.Data#escher_perm.Day") [],Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude",":") [Comb ConsCall ("escher_perm","Mon") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("escher_perm","Tue") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("escher_perm","Wed") [],Comb ConsCall ("Prelude","[]") []]]],Var 1]]))] []