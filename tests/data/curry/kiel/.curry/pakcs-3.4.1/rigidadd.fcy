Prog "rigidadd" ["Prelude"] [Type ("rigidadd","Nat") Public [] [Cons ("rigidadd","O") 0 Public [],Cons ("rigidadd","S") 1 Public [TCons ("rigidadd","Nat") []]]] [Func ("rigidadd","_inst#Prelude.Data#rigidadd.Nat") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Data") [TCons ("rigidadd","Nat") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Data") [Comb (FuncPartCall 2) ("rigidadd","_impl#===#Prelude.Data#rigidadd.Nat") [],Comb FuncCall ("rigidadd","_impl#aValue#Prelude.Data#rigidadd.Nat") []])])),Func ("rigidadd","_impl#===#Prelude.Data#rigidadd.Nat") 2 Public (FuncType (TCons ("rigidadd","Nat") []) (FuncType (TCons ("rigidadd","Nat") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("rigidadd","O") []) (Case Flex (Var 2) [Branch (Pattern ("rigidadd","O") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("rigidadd","S") [3]) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("rigidadd","S") [4]) (Case Flex (Var 2) [Branch (Pattern ("rigidadd","O") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("rigidadd","S") [5]) (Comb FuncCall ("rigidadd","_impl#===#Prelude.Data#rigidadd.Nat") [Var 4,Var 5])])])),Func ("rigidadd","_impl#aValue#Prelude.Data#rigidadd.Nat") 0 Public (TCons ("rigidadd","Nat") []) (Rule [] (Or (Comb ConsCall ("rigidadd","O") []) (Comb ConsCall ("rigidadd","S") [Comb FuncCall ("rigidadd","_impl#aValue#Prelude.Data#rigidadd.Nat") []]))),Func ("rigidadd","add") 2 Public (FuncType (TCons ("rigidadd","Nat") []) (FuncType (TCons ("rigidadd","Nat") []) (TCons ("rigidadd","Nat") []))) (Rule [1,2] (Comb FuncCall ("rigidadd","add'") [Comb FuncCall ("Prelude","ensureNotFree") [Var 1],Var 2])),Func ("rigidadd","add'") 2 Public (FuncType (TCons ("rigidadd","Nat") []) (FuncType (TCons ("rigidadd","Nat") []) (TCons ("rigidadd","Nat") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("rigidadd","O") []) (Var 2),Branch (Pattern ("rigidadd","S") [3]) (Comb ConsCall ("rigidadd","S") [Comb FuncCall ("rigidadd","add") [Var 3,Var 2]])])),Func ("rigidadd","isNat") 1 Public (FuncType (TCons ("rigidadd","Nat") []) (TCons ("Prelude","Bool") [])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("rigidadd","O") []) (Comb FuncCall ("Prelude","success") []),Branch (Pattern ("rigidadd","S") [2]) (Comb FuncCall ("rigidadd","isNat") [Var 2])])),Func ("rigidadd","goal") 0 Public (TCons ("Prelude","Bool") []) (Rule [] (Free [1] (Comb FuncCall ("Prelude","&") [Comb FuncCall ("Prelude","=:=") [Comb (FuncPartCall 1) ("rigidadd","_inst#Prelude.Data#rigidadd.Nat") [],Comb FuncCall ("rigidadd","add") [Var 1,Comb ConsCall ("rigidadd","O") []],Comb ConsCall ("rigidadd","S") [Comb ConsCall ("rigidadd","O") []]],Comb FuncCall ("rigidadd","isNat") [Var 1]])))] []