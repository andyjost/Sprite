Prog "family_con" ["Prelude"] [Type ("family_con","Person") Public [] [Cons ("family_con","Christine") 0 Public [],Cons ("family_con","Maria") 0 Public [],Cons ("family_con","Monica") 0 Public [],Cons ("family_con","Alice") 0 Public [],Cons ("family_con","Susan") 0 Public [],Cons ("family_con","Antony") 0 Public [],Cons ("family_con","Bill") 0 Public [],Cons ("family_con","John") 0 Public [],Cons ("family_con","Frank") 0 Public [],Cons ("family_con","Peter") 0 Public [],Cons ("family_con","Andrew") 0 Public []]] [Func ("family_con","_inst#Prelude.Data#family_con.Person") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Data") [TCons ("family_con","Person") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Data") [Comb (FuncPartCall 2) ("family_con","_impl#===#Prelude.Data#family_con.Person") [],Comb FuncCall ("family_con","_impl#aValue#Prelude.Data#family_con.Person") []])])),Func ("family_con","_impl#===#Prelude.Data#family_con.Person") 2 Public (FuncType (TCons ("family_con","Person") []) (FuncType (TCons ("family_con","Person") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("family_con","Christine") []) (Case Flex (Var 2) [Branch (Pattern ("family_con","Christine") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("family_con","Maria") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Monica") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Alice") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Susan") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Antony") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Bill") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","John") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Frank") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Peter") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Andrew") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("family_con","Maria") []) (Case Flex (Var 2) [Branch (Pattern ("family_con","Christine") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Maria") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("family_con","Monica") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Alice") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Susan") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Antony") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Bill") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","John") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Frank") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Peter") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Andrew") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("family_con","Monica") []) (Case Flex (Var 2) [Branch (Pattern ("family_con","Christine") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Maria") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Monica") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("family_con","Alice") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Susan") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Antony") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Bill") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","John") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Frank") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Peter") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Andrew") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("family_con","Alice") []) (Case Flex (Var 2) [Branch (Pattern ("family_con","Christine") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Maria") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Monica") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Alice") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("family_con","Susan") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Antony") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Bill") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","John") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Frank") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Peter") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Andrew") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("family_con","Susan") []) (Case Flex (Var 2) [Branch (Pattern ("family_con","Christine") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Maria") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Monica") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Alice") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Susan") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("family_con","Antony") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Bill") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","John") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Frank") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Peter") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Andrew") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("family_con","Antony") []) (Case Flex (Var 2) [Branch (Pattern ("family_con","Christine") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Maria") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Monica") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Alice") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Susan") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Antony") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("family_con","Bill") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","John") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Frank") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Peter") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Andrew") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("family_con","Bill") []) (Case Flex (Var 2) [Branch (Pattern ("family_con","Christine") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Maria") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Monica") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Alice") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Susan") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Antony") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Bill") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("family_con","John") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Frank") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Peter") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Andrew") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("family_con","John") []) (Case Flex (Var 2) [Branch (Pattern ("family_con","Christine") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Maria") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Monica") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Alice") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Susan") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Antony") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Bill") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","John") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("family_con","Frank") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Peter") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Andrew") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("family_con","Frank") []) (Case Flex (Var 2) [Branch (Pattern ("family_con","Christine") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Maria") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Monica") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Alice") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Susan") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Antony") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Bill") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","John") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Frank") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("family_con","Peter") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Andrew") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("family_con","Peter") []) (Case Flex (Var 2) [Branch (Pattern ("family_con","Christine") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Maria") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Monica") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Alice") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Susan") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Antony") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Bill") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","John") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Frank") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Peter") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("family_con","Andrew") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("family_con","Andrew") []) (Case Flex (Var 2) [Branch (Pattern ("family_con","Christine") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Maria") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Monica") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Alice") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Susan") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Antony") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Bill") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","John") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Frank") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Peter") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("family_con","Andrew") []) (Comb ConsCall ("Prelude","True") [])])])),Func ("family_con","_impl#aValue#Prelude.Data#family_con.Person") 0 Public (TCons ("family_con","Person") []) (Rule [] (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Comb ConsCall ("family_con","Christine") []) (Comb ConsCall ("family_con","Maria") [])) (Comb ConsCall ("family_con","Monica") [])) (Comb ConsCall ("family_con","Alice") [])) (Comb ConsCall ("family_con","Susan") [])) (Comb ConsCall ("family_con","Antony") [])) (Comb ConsCall ("family_con","Bill") [])) (Comb ConsCall ("family_con","John") [])) (Comb ConsCall ("family_con","Frank") [])) (Comb ConsCall ("family_con","Peter") [])) (Comb ConsCall ("family_con","Andrew") []))),Func ("family_con","female") 1 Public (FuncType (TCons ("family_con","Person") []) (TCons ("Prelude","Bool") [])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("family_con","Christine") []) (Comb FuncCall ("Prelude","success") []),Branch (Pattern ("family_con","Maria") []) (Comb FuncCall ("Prelude","success") []),Branch (Pattern ("family_con","Monica") []) (Comb FuncCall ("Prelude","success") []),Branch (Pattern ("family_con","Alice") []) (Comb FuncCall ("Prelude","success") []),Branch (Pattern ("family_con","Susan") []) (Comb FuncCall ("Prelude","success") [])])),Func ("family_con","male") 1 Public (FuncType (TCons ("family_con","Person") []) (TCons ("Prelude","Bool") [])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("family_con","Antony") []) (Comb FuncCall ("Prelude","success") []),Branch (Pattern ("family_con","Bill") []) (Comb FuncCall ("Prelude","success") []),Branch (Pattern ("family_con","John") []) (Comb FuncCall ("Prelude","success") []),Branch (Pattern ("family_con","Frank") []) (Comb FuncCall ("Prelude","success") []),Branch (Pattern ("family_con","Peter") []) (Comb FuncCall ("Prelude","success") []),Branch (Pattern ("family_con","Andrew") []) (Comb FuncCall ("Prelude","success") [])])),Func ("family_con","married") 2 Public (FuncType (TCons ("family_con","Person") []) (FuncType (TCons ("family_con","Person") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("family_con","Christine") []) (Case Flex (Var 2) [Branch (Pattern ("family_con","Antony") []) (Comb FuncCall ("Prelude","success") [])]),Branch (Pattern ("family_con","Maria") []) (Case Flex (Var 2) [Branch (Pattern ("family_con","Bill") []) (Comb FuncCall ("Prelude","success") [])]),Branch (Pattern ("family_con","Monica") []) (Case Flex (Var 2) [Branch (Pattern ("family_con","John") []) (Comb FuncCall ("Prelude","success") [])]),Branch (Pattern ("family_con","Alice") []) (Case Flex (Var 2) [Branch (Pattern ("family_con","Frank") []) (Comb FuncCall ("Prelude","success") [])])])),Func ("family_con","mother") 2 Public (FuncType (TCons ("family_con","Person") []) (FuncType (TCons ("family_con","Person") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("family_con","Christine") []) (Case Flex (Var 2) [Branch (Pattern ("family_con","John") []) (Comb FuncCall ("Prelude","success") []),Branch (Pattern ("family_con","Alice") []) (Comb FuncCall ("Prelude","success") [])]),Branch (Pattern ("family_con","Maria") []) (Case Flex (Var 2) [Branch (Pattern ("family_con","Frank") []) (Comb FuncCall ("Prelude","success") [])]),Branch (Pattern ("family_con","Monica") []) (Case Flex (Var 2) [Branch (Pattern ("family_con","Susan") []) (Comb FuncCall ("Prelude","success") []),Branch (Pattern ("family_con","Peter") []) (Comb FuncCall ("Prelude","success") [])]),Branch (Pattern ("family_con","Alice") []) (Case Flex (Var 2) [Branch (Pattern ("family_con","Andrew") []) (Comb FuncCall ("Prelude","success") [])])])),Func ("family_con","father") 2 Public (FuncType (TCons ("family_con","Person") []) (FuncType (TCons ("family_con","Person") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Free [3] (Comb FuncCall ("Prelude","&") [Comb FuncCall ("family_con","married") [Var 3,Var 1],Comb FuncCall ("family_con","mother") [Var 3,Var 2]]))),Func ("family_con","grandfather") 2 Public (FuncType (TCons ("family_con","Person") []) (FuncType (TCons ("family_con","Person") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Or (Free [3] (Comb FuncCall ("Prelude","&") [Comb FuncCall ("family_con","father") [Var 1,Var 3],Comb FuncCall ("family_con","father") [Var 3,Var 2]])) (Free [4] (Comb FuncCall ("Prelude","&") [Comb FuncCall ("family_con","father") [Var 1,Var 4],Comb FuncCall ("family_con","mother") [Var 4,Var 2]])))),Func ("family_con","goal1") 1 Public (FuncType (TCons ("family_con","Person") []) (TCons ("Prelude","Bool") [])) (Rule [1] (Comb FuncCall ("family_con","father") [Comb ConsCall ("family_con","John") [],Var 1])),Func ("family_con","main1") 0 Public (TCons ("family_con","Person") []) (Rule [] (Free [1] (Comb FuncCall ("Prelude","&>") [Comb FuncCall ("family_con","goal1") [Var 1],Var 1]))),Func ("family_con","goal2") 2 Public (FuncType (TCons ("family_con","Person") []) (FuncType (TCons ("family_con","Person") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Comb FuncCall ("family_con","grandfather") [Var 1,Var 2])),Func ("family_con","main2") 0 Public (TCons ("Prelude","(,)") [TCons ("family_con","Person") [],TCons ("family_con","Person") []]) (Rule [] (Free [1,2] (Comb FuncCall ("Prelude","&>") [Comb FuncCall ("family_con","grandfather") [Var 1,Var 2],Comb ConsCall ("Prelude","(,)") [Var 1,Var 2]])))] []