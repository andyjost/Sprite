Prog "applyS" ["Prelude","Control.SetFunctions"] [Type ("applyS","R") Public [] [Cons ("applyS","F_T") 0 Public [],Cons ("applyS","F_F") 0 Public [],Cons ("applyS","G_T") 0 Public [],Cons ("applyS","G_F") 0 Public []],Type ("applyS","R3") Public [] [Cons ("applyS","F_TTT") 0 Public [],Cons ("applyS","F_TTF") 0 Public [],Cons ("applyS","F_TFT") 0 Public [],Cons ("applyS","F_TFF") 0 Public [],Cons ("applyS","F_FTT") 0 Public [],Cons ("applyS","F_FTF") 0 Public [],Cons ("applyS","F_FFT") 0 Public [],Cons ("applyS","F_FFF") 0 Public [],Cons ("applyS","G_TTT") 0 Public [],Cons ("applyS","G_TTF") 0 Public [],Cons ("applyS","G_TFT") 0 Public [],Cons ("applyS","G_TFF") 0 Public [],Cons ("applyS","G_FTT") 0 Public [],Cons ("applyS","G_FTF") 0 Public [],Cons ("applyS","G_FFT") 0 Public [],Cons ("applyS","G_FFF") 0 Public []]] [Func ("applyS","_inst#Prelude.Data#applyS.R") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Data") [TCons ("applyS","R") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Data") [Comb (FuncPartCall 2) ("applyS","_impl#===#Prelude.Data#applyS.R") [],Comb FuncCall ("applyS","_impl#aValue#Prelude.Data#applyS.R") []])])),Func ("applyS","_impl#===#Prelude.Data#applyS.R") 2 Public (FuncType (TCons ("applyS","R") []) (FuncType (TCons ("applyS","R") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("applyS","F_T") []) (Case Flex (Var 2) [Branch (Pattern ("applyS","F_T") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("applyS","F_F") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_T") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_F") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("applyS","F_F") []) (Case Flex (Var 2) [Branch (Pattern ("applyS","F_T") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_F") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("applyS","G_T") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_F") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("applyS","G_T") []) (Case Flex (Var 2) [Branch (Pattern ("applyS","F_T") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_F") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_T") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("applyS","G_F") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("applyS","G_F") []) (Case Flex (Var 2) [Branch (Pattern ("applyS","F_T") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_F") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_T") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_F") []) (Comb ConsCall ("Prelude","True") [])])])),Func ("applyS","_impl#aValue#Prelude.Data#applyS.R") 0 Public (TCons ("applyS","R") []) (Rule [] (Or (Or (Or (Comb ConsCall ("applyS","F_T") []) (Comb ConsCall ("applyS","F_F") [])) (Comb ConsCall ("applyS","G_T") [])) (Comb ConsCall ("applyS","G_F") []))),Func ("applyS","_inst#Prelude.Data#applyS.R3") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Data") [TCons ("applyS","R3") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Data") [Comb (FuncPartCall 2) ("applyS","_impl#===#Prelude.Data#applyS.R3") [],Comb FuncCall ("applyS","_impl#aValue#Prelude.Data#applyS.R3") []])])),Func ("applyS","_impl#===#Prelude.Data#applyS.R3") 2 Public (FuncType (TCons ("applyS","R3") []) (FuncType (TCons ("applyS","R3") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("applyS","F_TTT") []) (Case Flex (Var 2) [Branch (Pattern ("applyS","F_TTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("applyS","F_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("applyS","F_TTF") []) (Case Flex (Var 2) [Branch (Pattern ("applyS","F_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("applyS","F_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("applyS","F_TFT") []) (Case Flex (Var 2) [Branch (Pattern ("applyS","F_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("applyS","F_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("applyS","F_TFF") []) (Case Flex (Var 2) [Branch (Pattern ("applyS","F_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TFF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("applyS","F_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("applyS","F_FTT") []) (Case Flex (Var 2) [Branch (Pattern ("applyS","F_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("applyS","F_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("applyS","F_FTF") []) (Case Flex (Var 2) [Branch (Pattern ("applyS","F_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("applyS","F_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("applyS","F_FFT") []) (Case Flex (Var 2) [Branch (Pattern ("applyS","F_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("applyS","F_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("applyS","F_FFF") []) (Case Flex (Var 2) [Branch (Pattern ("applyS","F_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FFF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("applyS","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("applyS","G_TTT") []) (Case Flex (Var 2) [Branch (Pattern ("applyS","F_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("applyS","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("applyS","G_TTF") []) (Case Flex (Var 2) [Branch (Pattern ("applyS","F_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("applyS","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("applyS","G_TFT") []) (Case Flex (Var 2) [Branch (Pattern ("applyS","F_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("applyS","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("applyS","G_TFF") []) (Case Flex (Var 2) [Branch (Pattern ("applyS","F_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TFF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("applyS","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("applyS","G_FTT") []) (Case Flex (Var 2) [Branch (Pattern ("applyS","F_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("applyS","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("applyS","G_FTF") []) (Case Flex (Var 2) [Branch (Pattern ("applyS","F_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("applyS","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("applyS","G_FFT") []) (Case Flex (Var 2) [Branch (Pattern ("applyS","F_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("applyS","G_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("applyS","G_FFF") []) (Case Flex (Var 2) [Branch (Pattern ("applyS","F_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","F_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("applyS","G_FFF") []) (Comb ConsCall ("Prelude","True") [])])])),Func ("applyS","_impl#aValue#Prelude.Data#applyS.R3") 0 Public (TCons ("applyS","R3") []) (Rule [] (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Comb ConsCall ("applyS","F_TTT") []) (Comb ConsCall ("applyS","F_TTF") [])) (Comb ConsCall ("applyS","F_TFT") [])) (Comb ConsCall ("applyS","F_TFF") [])) (Comb ConsCall ("applyS","F_FTT") [])) (Comb ConsCall ("applyS","F_FTF") [])) (Comb ConsCall ("applyS","F_FFT") [])) (Comb ConsCall ("applyS","F_FFF") [])) (Comb ConsCall ("applyS","G_TTT") [])) (Comb ConsCall ("applyS","G_TTF") [])) (Comb ConsCall ("applyS","G_TFT") [])) (Comb ConsCall ("applyS","G_TFF") [])) (Comb ConsCall ("applyS","G_FTT") [])) (Comb ConsCall ("applyS","G_FTF") [])) (Comb ConsCall ("applyS","G_FFT") [])) (Comb ConsCall ("applyS","G_FFF") []))),Func ("applyS","_inst#Prelude.Show#applyS.R") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Show") [TCons ("applyS","R") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Show") [Comb FuncCall ("applyS","_impl#show#Prelude.Show#applyS.R") [],Comb (FuncPartCall 2) ("applyS","_impl#showsPrec#Prelude.Show#applyS.R") [],Comb FuncCall ("applyS","_impl#showList#Prelude.Show#applyS.R") []])])),Func ("applyS","_impl#show#Prelude.Show#applyS.R") 0 Public (FuncType (TCons ("applyS","R") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb (FuncPartCall 1) ("Prelude","_def#show#Prelude.Show") [Comb (FuncPartCall 1) ("applyS","_inst#Prelude.Show#applyS.R") []])),Func ("applyS","_impl#showsPrec#Prelude.Show#applyS.R") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("applyS","R") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])))) (Rule [1,2] (Case Flex (Var 2) [Branch (Pattern ("applyS","F_T") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude","[]") []]]]]),Branch (Pattern ("applyS","F_F") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude","[]") []]]]]),Branch (Pattern ("applyS","G_T") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'G'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude","[]") []]]]]),Branch (Pattern ("applyS","G_F") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'G'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude","[]") []]]]])])),Func ("applyS","_impl#showList#Prelude.Show#applyS.R") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("applyS","R") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]))) (Rule [] (Comb FuncCall ("Prelude","_def#showList#Prelude.Show") [Comb (FuncPartCall 1) ("applyS","_inst#Prelude.Show#applyS.R") []])),Func ("applyS","_inst#Prelude.Show#applyS.R3") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Show") [TCons ("applyS","R3") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Show") [Comb FuncCall ("applyS","_impl#show#Prelude.Show#applyS.R3") [],Comb (FuncPartCall 2) ("applyS","_impl#showsPrec#Prelude.Show#applyS.R3") [],Comb FuncCall ("applyS","_impl#showList#Prelude.Show#applyS.R3") []])])),Func ("applyS","_impl#show#Prelude.Show#applyS.R3") 0 Public (FuncType (TCons ("applyS","R3") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb (FuncPartCall 1) ("Prelude","_def#show#Prelude.Show") [Comb (FuncPartCall 1) ("applyS","_inst#Prelude.Show#applyS.R3") []])),Func ("applyS","_impl#showsPrec#Prelude.Show#applyS.R3") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("applyS","R3") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])))) (Rule [1,2] (Case Flex (Var 2) [Branch (Pattern ("applyS","F_TTT") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude","[]") []]]]]]]),Branch (Pattern ("applyS","F_TTF") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude","[]") []]]]]]]),Branch (Pattern ("applyS","F_TFT") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude","[]") []]]]]]]),Branch (Pattern ("applyS","F_TFF") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude","[]") []]]]]]]),Branch (Pattern ("applyS","F_FTT") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude","[]") []]]]]]]),Branch (Pattern ("applyS","F_FTF") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude","[]") []]]]]]]),Branch (Pattern ("applyS","F_FFT") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude","[]") []]]]]]]),Branch (Pattern ("applyS","F_FFF") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude","[]") []]]]]]]),Branch (Pattern ("applyS","G_TTT") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'G'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude","[]") []]]]]]]),Branch (Pattern ("applyS","G_TTF") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'G'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude","[]") []]]]]]]),Branch (Pattern ("applyS","G_TFT") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'G'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude","[]") []]]]]]]),Branch (Pattern ("applyS","G_TFF") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'G'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude","[]") []]]]]]]),Branch (Pattern ("applyS","G_FTT") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'G'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude","[]") []]]]]]]),Branch (Pattern ("applyS","G_FTF") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'G'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude","[]") []]]]]]]),Branch (Pattern ("applyS","G_FFT") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'G'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude","[]") []]]]]]]),Branch (Pattern ("applyS","G_FFF") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'G'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude","[]") []]]]]]])])),Func ("applyS","_impl#showList#Prelude.Show#applyS.R3") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("applyS","R3") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]))) (Rule [] (Comb FuncCall ("Prelude","_def#showList#Prelude.Show") [Comb (FuncPartCall 1) ("applyS","_inst#Prelude.Show#applyS.R3") []])),Func ("applyS","f") 1 Public (FuncType (TCons ("Prelude","Bool") []) (TCons ("applyS","R") [])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("applyS","F_T") []),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("applyS","F_F") [])])),Func ("applyS","g") 1 Public (FuncType (TCons ("Prelude","Bool") []) (TCons ("applyS","R") [])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("applyS","G_T") []),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("applyS","G_F") [])])),Func ("applyS","h") 0 Public (FuncType (TCons ("Prelude","Bool") []) (TCons ("applyS","R") [])) (Rule [] (Comb FuncCall ("Prelude","?") [Comb (FuncPartCall 1) ("applyS","f") [],Comb (FuncPartCall 1) ("applyS","g") []])),Func ("applyS","h'") 1 Public (FuncType (TCons ("Prelude","Bool") []) (TCons ("applyS","R") [])) (Rule [1] (Comb FuncCall ("Prelude","?") [Comb FuncCall ("applyS","f") [Var 1],Comb FuncCall ("applyS","g") [Var 1]])),Func ("applyS","goal0") 0 Public (TCons ("Control.SetFunctions","Values") [TCons ("applyS","R") []]) (Rule [] (Free [1] (Comb FuncCall ("Control.SetFunctions","evalS") [Comb FuncCall ("Control.SetFunctions","$>") [Comb FuncCall ("Control.SetFunctions","set") [Comb (FuncPartCall 1) ("applyS","f") []],Var 1]]))),Func ("applyS","goal1") 0 Public (TCons ("Control.SetFunctions","Values") [TCons ("applyS","R") []]) (Rule [] (Free [1] (Comb FuncCall ("Control.SetFunctions","evalS") [Comb FuncCall ("Control.SetFunctions","$<") [Comb FuncCall ("Control.SetFunctions","set") [Comb (FuncPartCall 1) ("applyS","f") []],Var 1]]))),Func ("applyS","goal2") 0 Public (TCons ("Control.SetFunctions","Values") [TCons ("applyS","R") []]) (Rule [] (Free [1] (Comb FuncCall ("Control.SetFunctions","evalS") [Comb FuncCall ("Control.SetFunctions","$<") [Comb FuncCall ("Control.SetFunctions","set") [Comb FuncCall ("applyS","h") []],Var 1]]))),Func ("applyS","goal3") 0 Public (TCons ("Control.SetFunctions","Values") [TCons ("applyS","R") []]) (Rule [] (Free [1] (Comb FuncCall ("Control.SetFunctions","evalS") [Comb FuncCall ("Control.SetFunctions","$>") [Comb FuncCall ("Control.SetFunctions","set") [Comb FuncCall ("applyS","h") []],Var 1]]))),Func ("applyS","goal4") 0 Public (TCons ("Control.SetFunctions","Values") [TCons ("applyS","R") []]) (Rule [] (Free [1] (Comb FuncCall ("Control.SetFunctions","evalS") [Comb FuncCall ("Control.SetFunctions","$<") [Comb FuncCall ("Control.SetFunctions","set") [Comb (FuncPartCall 1) ("applyS","h'") []],Var 1]]))),Func ("applyS","goal5") 0 Public (TCons ("Control.SetFunctions","Values") [TCons ("applyS","R") []]) (Rule [] (Free [1] (Comb FuncCall ("Control.SetFunctions","evalS") [Comb FuncCall ("Control.SetFunctions","$>") [Comb FuncCall ("Control.SetFunctions","set") [Comb (FuncPartCall 1) ("applyS","h'") []],Var 1]]))),Func ("applyS","goal10") 0 Public (TCons ("Control.SetFunctions","Values") [TCons ("Prelude","(,)") [TCons ("Prelude","Bool") [],TCons ("Prelude","Bool") []]]) (Rule [] (Let [(1,Comb FuncCall ("Prelude","?") [Comb ConsCall ("Prelude","True") [],Comb ConsCall ("Prelude","False") []])] (Comb FuncCall ("Control.SetFunctions","evalS") [Comb FuncCall ("Control.SetFunctions","$>") [Comb FuncCall ("Control.SetFunctions","$<") [Comb FuncCall ("Control.SetFunctions","set") [Comb (FuncPartCall 2) ("applyS","goal10.f.26") []],Var 1],Var 1]]))),Func ("applyS","goal10.f.26") 2 Private (ForallType [(0,KStar),(1,KStar)] (FuncType (TVar 1) (FuncType (TVar 0) (TCons ("Prelude","(,)") [TVar 1,TVar 0])))) (Rule [1,2] (Comb ConsCall ("Prelude","(,)") [Var 1,Var 2])),Func ("applyS","goal11") 0 Public (TCons ("Control.SetFunctions","Values") [TCons ("Prelude","(,)") [TCons ("Prelude","Bool") [],TCons ("Prelude","Bool") []]]) (Rule [] (Let [(1,Comb FuncCall ("Prelude","?") [Comb ConsCall ("Prelude","True") [],Comb ConsCall ("Prelude","False") []])] (Comb FuncCall ("Control.SetFunctions","evalS") [Comb FuncCall ("Control.SetFunctions","$<") [Comb FuncCall ("Control.SetFunctions","$>") [Comb FuncCall ("Control.SetFunctions","set") [Comb (FuncPartCall 2) ("applyS","goal11.f.31") []],Var 1],Var 1]]))),Func ("applyS","goal11.f.31") 2 Private (ForallType [(0,KStar),(1,KStar)] (FuncType (TVar 1) (FuncType (TVar 0) (TCons ("Prelude","(,)") [TVar 1,TVar 0])))) (Rule [1,2] (Comb ConsCall ("Prelude","(,)") [Var 1,Var 2])),Func ("applyS","f3") 3 Public (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("Prelude","Bool") []) (TCons ("applyS","R3") [])))) (Rule [1,2,3] (Case Flex (Var 1) [Branch (Pattern ("Prelude","True") []) (Case Flex (Var 2) [Branch (Pattern ("Prelude","True") []) (Case Flex (Var 3) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("applyS","F_TTT") []),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("applyS","F_TTF") [])]),Branch (Pattern ("Prelude","False") []) (Case Flex (Var 3) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("applyS","F_TFT") []),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("applyS","F_TFF") [])])]),Branch (Pattern ("Prelude","False") []) (Case Flex (Var 2) [Branch (Pattern ("Prelude","True") []) (Case Flex (Var 3) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("applyS","F_FTT") []),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("applyS","F_FTF") [])]),Branch (Pattern ("Prelude","False") []) (Case Flex (Var 3) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("applyS","F_FFT") []),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("applyS","F_FFF") [])])])])),Func ("applyS","g3") 3 Public (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("Prelude","Bool") []) (TCons ("applyS","R3") [])))) (Rule [1,2,3] (Case Flex (Var 1) [Branch (Pattern ("Prelude","True") []) (Case Flex (Var 2) [Branch (Pattern ("Prelude","True") []) (Case Flex (Var 3) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("applyS","G_TTT") []),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("applyS","G_TTF") [])]),Branch (Pattern ("Prelude","False") []) (Case Flex (Var 3) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("applyS","G_TFT") []),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("applyS","G_TFF") [])])]),Branch (Pattern ("Prelude","False") []) (Case Flex (Var 2) [Branch (Pattern ("Prelude","True") []) (Case Flex (Var 3) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("applyS","G_FTT") []),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("applyS","G_FTF") [])]),Branch (Pattern ("Prelude","False") []) (Case Flex (Var 3) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("applyS","G_FFT") []),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("applyS","G_FFF") [])])])])),Func ("applyS","h3") 0 Public (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("Prelude","Bool") []) (TCons ("applyS","R3") [])))) (Rule [] (Comb FuncCall ("Prelude","?") [Comb (FuncPartCall 3) ("applyS","f3") [],Comb (FuncPartCall 3) ("applyS","g3") []])),Func ("applyS","h3'") 3 Public (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("Prelude","Bool") []) (TCons ("applyS","R3") [])))) (Rule [1,2,3] (Comb FuncCall ("Prelude","?") [Comb FuncCall ("applyS","f3") [Var 1,Var 2,Var 3],Comb FuncCall ("applyS","g3") [Var 1,Var 2,Var 3]])),Func ("applyS","goal30") 0 Public (TCons ("Control.SetFunctions","Values") [TCons ("applyS","R3") []]) (Rule [] (Free [1,2,3] (Comb FuncCall ("Control.SetFunctions","evalS") [Comb FuncCall ("Control.SetFunctions","$<") [Comb FuncCall ("Control.SetFunctions","$<") [Comb FuncCall ("Control.SetFunctions","$<") [Comb FuncCall ("Control.SetFunctions","set") [Comb FuncCall ("applyS","h3") []],Var 1],Var 2],Var 3]]))),Func ("applyS","goal31") 0 Public (TCons ("Control.SetFunctions","Values") [TCons ("applyS","R3") []]) (Rule [] (Free [1,2,3] (Comb FuncCall ("Control.SetFunctions","evalS") [Comb FuncCall ("Control.SetFunctions","$<") [Comb FuncCall ("Control.SetFunctions","$>") [Comb FuncCall ("Control.SetFunctions","$<") [Comb FuncCall ("Control.SetFunctions","set") [Comb FuncCall ("applyS","h3") []],Var 1],Var 2],Var 3]]))),Func ("applyS","goal32") 0 Public (TCons ("Control.SetFunctions","Values") [TCons ("applyS","R3") []]) (Rule [] (Free [1,2,3] (Comb FuncCall ("Control.SetFunctions","evalS") [Comb FuncCall ("Control.SetFunctions","$<") [Comb FuncCall ("Control.SetFunctions","$<") [Comb FuncCall ("Control.SetFunctions","$<") [Comb FuncCall ("Control.SetFunctions","set") [Comb (FuncPartCall 3) ("applyS","h3'") []],Var 1],Var 2],Var 3]]))),Func ("applyS","goal33") 0 Public (TCons ("Control.SetFunctions","Values") [TCons ("applyS","R3") []]) (Rule [] (Free [1,2,3] (Comb FuncCall ("Control.SetFunctions","evalS") [Comb FuncCall ("Control.SetFunctions","$<") [Comb FuncCall ("Control.SetFunctions","$>") [Comb FuncCall ("Control.SetFunctions","$<") [Comb FuncCall ("Control.SetFunctions","set") [Comb (FuncPartCall 3) ("applyS","h3'") []],Var 1],Var 2],Var 3]])))] []