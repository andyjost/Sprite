Prog "Common" ["Prelude"] [Type ("Common","Result1") Public [] [Cons ("Common","G_T") 0 Public [],Cons ("Common","G_F") 0 Public [],Cons ("Common","H_T") 0 Public [],Cons ("Common","H_F") 0 Public []],Type ("Common","Result2") Public [] [Cons ("Common","G_TT") 0 Public [],Cons ("Common","G_TF") 0 Public [],Cons ("Common","G_FT") 0 Public [],Cons ("Common","G_FF") 0 Public [],Cons ("Common","H_TT") 0 Public [],Cons ("Common","H_TF") 0 Public [],Cons ("Common","H_FT") 0 Public [],Cons ("Common","H_FF") 0 Public []],Type ("Common","Result3") Public [] [Cons ("Common","G_TTT") 0 Public [],Cons ("Common","G_TTF") 0 Public [],Cons ("Common","G_TFT") 0 Public [],Cons ("Common","G_TFF") 0 Public [],Cons ("Common","G_FTT") 0 Public [],Cons ("Common","G_FTF") 0 Public [],Cons ("Common","G_FFT") 0 Public [],Cons ("Common","G_FFF") 0 Public [],Cons ("Common","H_TTT") 0 Public [],Cons ("Common","H_TTF") 0 Public [],Cons ("Common","H_TFT") 0 Public [],Cons ("Common","H_TFF") 0 Public [],Cons ("Common","H_FTT") 0 Public [],Cons ("Common","H_FTF") 0 Public [],Cons ("Common","H_FFT") 0 Public [],Cons ("Common","H_FFF") 0 Public []],Type ("Common","ABC") Public [] [Cons ("Common","A") 0 Public [],Cons ("Common","B") 0 Public [],Cons ("Common","C") 0 Public []],Type ("Common","ResultABC") Public [] [Cons ("Common","G_A") 0 Public [],Cons ("Common","G_B") 0 Public [],Cons ("Common","G_C") 0 Public [],Cons ("Common","H_A") 0 Public [],Cons ("Common","H_B") 0 Public [],Cons ("Common","H_C") 0 Public []]] [Func ("Common","_inst#Prelude.Data#Common.Result1") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Data") [TCons ("Common","Result1") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Data") [Comb (FuncPartCall 2) ("Common","_impl#===#Prelude.Data#Common.Result1") [],Comb FuncCall ("Common","_impl#aValue#Prelude.Data#Common.Result1") []])])),Func ("Common","_impl#===#Prelude.Data#Common.Result1") 2 Public (FuncType (TCons ("Common","Result1") []) (FuncType (TCons ("Common","Result1") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("Common","G_T") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_T") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_F") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_T") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_F") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","G_F") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_T") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_F") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_T") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_F") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","H_T") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_T") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_F") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_T") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_F") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","H_F") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_T") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_F") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_T") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_F") []) (Comb ConsCall ("Prelude","True") [])])])),Func ("Common","_impl#aValue#Prelude.Data#Common.Result1") 0 Public (TCons ("Common","Result1") []) (Rule [] (Or (Or (Or (Comb ConsCall ("Common","G_T") []) (Comb ConsCall ("Common","G_F") [])) (Comb ConsCall ("Common","H_T") [])) (Comb ConsCall ("Common","H_F") []))),Func ("Common","_inst#Prelude.Data#Common.Result2") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Data") [TCons ("Common","Result2") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Data") [Comb (FuncPartCall 2) ("Common","_impl#===#Prelude.Data#Common.Result2") [],Comb FuncCall ("Common","_impl#aValue#Prelude.Data#Common.Result2") []])])),Func ("Common","_impl#===#Prelude.Data#Common.Result2") 2 Public (FuncType (TCons ("Common","Result2") []) (FuncType (TCons ("Common","Result2") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("Common","G_TT") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_TF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","G_TF") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_FT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","G_FT") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_FF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","G_FF") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","H_TT") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","H_TF") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","H_FT") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","H_FF") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FF") []) (Comb ConsCall ("Prelude","True") [])])])),Func ("Common","_impl#aValue#Prelude.Data#Common.Result2") 0 Public (TCons ("Common","Result2") []) (Rule [] (Or (Or (Or (Or (Or (Or (Or (Comb ConsCall ("Common","G_TT") []) (Comb ConsCall ("Common","G_TF") [])) (Comb ConsCall ("Common","G_FT") [])) (Comb ConsCall ("Common","G_FF") [])) (Comb ConsCall ("Common","H_TT") [])) (Comb ConsCall ("Common","H_TF") [])) (Comb ConsCall ("Common","H_FT") [])) (Comb ConsCall ("Common","H_FF") []))),Func ("Common","_inst#Prelude.Data#Common.Result3") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Data") [TCons ("Common","Result3") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Data") [Comb (FuncPartCall 2) ("Common","_impl#===#Prelude.Data#Common.Result3") [],Comb FuncCall ("Common","_impl#aValue#Prelude.Data#Common.Result3") []])])),Func ("Common","_impl#===#Prelude.Data#Common.Result3") 2 Public (FuncType (TCons ("Common","Result3") []) (FuncType (TCons ("Common","Result3") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("Common","G_TTT") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","G_TTF") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","G_TFT") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","G_TFF") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","G_FTT") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","G_FTF") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","G_FFT") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","G_FFF") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","H_TTT") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","H_TTF") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","H_TFT") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","H_TFF") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","H_FTT") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","H_FTF") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","H_FFT") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","H_FFF") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","True") [])])])),Func ("Common","_impl#aValue#Prelude.Data#Common.Result3") 0 Public (TCons ("Common","Result3") []) (Rule [] (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Or (Comb ConsCall ("Common","G_TTT") []) (Comb ConsCall ("Common","G_TTF") [])) (Comb ConsCall ("Common","G_TFT") [])) (Comb ConsCall ("Common","G_TFF") [])) (Comb ConsCall ("Common","G_FTT") [])) (Comb ConsCall ("Common","G_FTF") [])) (Comb ConsCall ("Common","G_FFT") [])) (Comb ConsCall ("Common","G_FFF") [])) (Comb ConsCall ("Common","H_TTT") [])) (Comb ConsCall ("Common","H_TTF") [])) (Comb ConsCall ("Common","H_TFT") [])) (Comb ConsCall ("Common","H_TFF") [])) (Comb ConsCall ("Common","H_FTT") [])) (Comb ConsCall ("Common","H_FTF") [])) (Comb ConsCall ("Common","H_FFT") [])) (Comb ConsCall ("Common","H_FFF") []))),Func ("Common","_inst#Prelude.Data#Common.ABC") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Data") [TCons ("Common","ABC") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Data") [Comb (FuncPartCall 2) ("Common","_impl#===#Prelude.Data#Common.ABC") [],Comb FuncCall ("Common","_impl#aValue#Prelude.Data#Common.ABC") []])])),Func ("Common","_impl#===#Prelude.Data#Common.ABC") 2 Public (FuncType (TCons ("Common","ABC") []) (FuncType (TCons ("Common","ABC") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("Common","A") []) (Case Flex (Var 2) [Branch (Pattern ("Common","A") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","B") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","C") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","B") []) (Case Flex (Var 2) [Branch (Pattern ("Common","A") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","B") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","C") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","C") []) (Case Flex (Var 2) [Branch (Pattern ("Common","A") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","B") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","C") []) (Comb ConsCall ("Prelude","True") [])])])),Func ("Common","_impl#aValue#Prelude.Data#Common.ABC") 0 Public (TCons ("Common","ABC") []) (Rule [] (Or (Or (Comb ConsCall ("Common","A") []) (Comb ConsCall ("Common","B") [])) (Comb ConsCall ("Common","C") []))),Func ("Common","_inst#Prelude.Data#Common.ResultABC") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Data") [TCons ("Common","ResultABC") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Data") [Comb (FuncPartCall 2) ("Common","_impl#===#Prelude.Data#Common.ResultABC") [],Comb FuncCall ("Common","_impl#aValue#Prelude.Data#Common.ResultABC") []])])),Func ("Common","_impl#===#Prelude.Data#Common.ResultABC") 2 Public (FuncType (TCons ("Common","ResultABC") []) (FuncType (TCons ("Common","ResultABC") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("Common","G_A") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_A") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_B") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_C") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_A") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_B") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_C") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","G_B") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_A") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_B") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_C") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_A") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_B") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_C") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","G_C") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_A") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_B") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_C") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_A") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_B") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_C") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","H_A") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_A") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_B") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_C") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_A") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_B") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_C") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","H_B") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_A") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_B") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_C") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_A") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_B") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_C") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","H_C") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_A") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_B") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_C") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_A") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_B") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_C") []) (Comb ConsCall ("Prelude","True") [])])])),Func ("Common","_impl#aValue#Prelude.Data#Common.ResultABC") 0 Public (TCons ("Common","ResultABC") []) (Rule [] (Or (Or (Or (Or (Or (Comb ConsCall ("Common","G_A") []) (Comb ConsCall ("Common","G_B") [])) (Comb ConsCall ("Common","G_C") [])) (Comb ConsCall ("Common","H_A") [])) (Comb ConsCall ("Common","H_B") [])) (Comb ConsCall ("Common","H_C") []))),Func ("Common","_inst#Prelude.Eq#Common.Result1") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Eq") [TCons ("Common","Result1") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Eq") [Comb (FuncPartCall 2) ("Common","_impl#==#Prelude.Eq#Common.Result1") [],Comb FuncCall ("Common","_impl#/=#Prelude.Eq#Common.Result1") []])])),Func ("Common","_impl#==#Prelude.Eq#Common.Result1") 2 Public (FuncType (TCons ("Common","Result1") []) (FuncType (TCons ("Common","Result1") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("Common","G_T") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_T") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_F") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_T") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_F") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","G_F") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_T") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_F") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_T") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_F") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","H_T") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_T") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_F") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_T") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_F") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","H_F") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_T") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_F") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_T") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_F") []) (Comb ConsCall ("Prelude","True") [])])])),Func ("Common","_impl#/=#Prelude.Eq#Common.Result1") 0 Public (FuncType (TCons ("Common","Result1") []) (FuncType (TCons ("Common","Result1") []) (TCons ("Prelude","Bool") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#/=#Prelude.Eq") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Eq#Common.Result1") []])),Func ("Common","_inst#Prelude.Ord#Common.Result1") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Ord") [TCons ("Common","Result1") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Ord") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Eq#Common.Result1") [],Comb FuncCall ("Common","_impl#compare#Prelude.Ord#Common.Result1") [],Comb FuncCall ("Common","_impl#<#Prelude.Ord#Common.Result1") [],Comb FuncCall ("Common","_impl#>#Prelude.Ord#Common.Result1") [],Comb (FuncPartCall 2) ("Common","_impl#<=#Prelude.Ord#Common.Result1") [],Comb FuncCall ("Common","_impl#>=#Prelude.Ord#Common.Result1") [],Comb FuncCall ("Common","_impl#min#Prelude.Ord#Common.Result1") [],Comb FuncCall ("Common","_impl#max#Prelude.Ord#Common.Result1") []])])),Func ("Common","_impl#compare#Prelude.Ord#Common.Result1") 0 Public (FuncType (TCons ("Common","Result1") []) (FuncType (TCons ("Common","Result1") []) (TCons ("Prelude","Ordering") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#compare#Prelude.Ord") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Ord#Common.Result1") []])),Func ("Common","_impl#<#Prelude.Ord#Common.Result1") 0 Public (FuncType (TCons ("Common","Result1") []) (FuncType (TCons ("Common","Result1") []) (TCons ("Prelude","Bool") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#<#Prelude.Ord") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Ord#Common.Result1") []])),Func ("Common","_impl#>#Prelude.Ord#Common.Result1") 0 Public (FuncType (TCons ("Common","Result1") []) (FuncType (TCons ("Common","Result1") []) (TCons ("Prelude","Bool") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#>#Prelude.Ord") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Ord#Common.Result1") []])),Func ("Common","_impl#<=#Prelude.Ord#Common.Result1") 2 Public (FuncType (TCons ("Common","Result1") []) (FuncType (TCons ("Common","Result1") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("Common","G_T") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_T") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_F") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_T") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_F") []) (Comb ConsCall ("Prelude","True") [])]),Branch (Pattern ("Common","G_F") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_T") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_F") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_T") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_F") []) (Comb ConsCall ("Prelude","True") [])]),Branch (Pattern ("Common","H_T") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_T") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_F") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_T") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_F") []) (Comb ConsCall ("Prelude","True") [])]),Branch (Pattern ("Common","H_F") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_T") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_F") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_T") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_F") []) (Comb ConsCall ("Prelude","True") [])])])),Func ("Common","_impl#>=#Prelude.Ord#Common.Result1") 0 Public (FuncType (TCons ("Common","Result1") []) (FuncType (TCons ("Common","Result1") []) (TCons ("Prelude","Bool") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#>=#Prelude.Ord") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Ord#Common.Result1") []])),Func ("Common","_impl#min#Prelude.Ord#Common.Result1") 0 Public (FuncType (TCons ("Common","Result1") []) (FuncType (TCons ("Common","Result1") []) (TCons ("Common","Result1") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#min#Prelude.Ord") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Ord#Common.Result1") []])),Func ("Common","_impl#max#Prelude.Ord#Common.Result1") 0 Public (FuncType (TCons ("Common","Result1") []) (FuncType (TCons ("Common","Result1") []) (TCons ("Common","Result1") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#max#Prelude.Ord") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Ord#Common.Result1") []])),Func ("Common","_inst#Prelude.Show#Common.Result1") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Show") [TCons ("Common","Result1") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Show") [Comb FuncCall ("Common","_impl#show#Prelude.Show#Common.Result1") [],Comb (FuncPartCall 2) ("Common","_impl#showsPrec#Prelude.Show#Common.Result1") [],Comb FuncCall ("Common","_impl#showList#Prelude.Show#Common.Result1") []])])),Func ("Common","_impl#show#Prelude.Show#Common.Result1") 0 Public (FuncType (TCons ("Common","Result1") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb (FuncPartCall 1) ("Prelude","_def#show#Prelude.Show") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Show#Common.Result1") []])),Func ("Common","_impl#showsPrec#Prelude.Show#Common.Result1") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Common","Result1") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])))) (Rule [1,2] (Case Flex (Var 2) [Branch (Pattern ("Common","G_T") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'G'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude","[]") []]]]]),Branch (Pattern ("Common","G_F") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'G'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude","[]") []]]]]),Branch (Pattern ("Common","H_T") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'H'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude","[]") []]]]]),Branch (Pattern ("Common","H_F") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'H'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude","[]") []]]]])])),Func ("Common","_impl#showList#Prelude.Show#Common.Result1") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Common","Result1") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]))) (Rule [] (Comb FuncCall ("Prelude","_def#showList#Prelude.Show") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Show#Common.Result1") []])),Func ("Common","_inst#Prelude.Eq#Common.Result2") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Eq") [TCons ("Common","Result2") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Eq") [Comb (FuncPartCall 2) ("Common","_impl#==#Prelude.Eq#Common.Result2") [],Comb FuncCall ("Common","_impl#/=#Prelude.Eq#Common.Result2") []])])),Func ("Common","_impl#==#Prelude.Eq#Common.Result2") 2 Public (FuncType (TCons ("Common","Result2") []) (FuncType (TCons ("Common","Result2") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("Common","G_TT") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_TF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","G_TF") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_FT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","G_FT") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_FF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","G_FF") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","H_TT") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","H_TF") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","H_FT") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","H_FF") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FF") []) (Comb ConsCall ("Prelude","True") [])])])),Func ("Common","_impl#/=#Prelude.Eq#Common.Result2") 0 Public (FuncType (TCons ("Common","Result2") []) (FuncType (TCons ("Common","Result2") []) (TCons ("Prelude","Bool") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#/=#Prelude.Eq") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Eq#Common.Result2") []])),Func ("Common","_inst#Prelude.Ord#Common.Result2") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Ord") [TCons ("Common","Result2") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Ord") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Eq#Common.Result2") [],Comb FuncCall ("Common","_impl#compare#Prelude.Ord#Common.Result2") [],Comb FuncCall ("Common","_impl#<#Prelude.Ord#Common.Result2") [],Comb FuncCall ("Common","_impl#>#Prelude.Ord#Common.Result2") [],Comb (FuncPartCall 2) ("Common","_impl#<=#Prelude.Ord#Common.Result2") [],Comb FuncCall ("Common","_impl#>=#Prelude.Ord#Common.Result2") [],Comb FuncCall ("Common","_impl#min#Prelude.Ord#Common.Result2") [],Comb FuncCall ("Common","_impl#max#Prelude.Ord#Common.Result2") []])])),Func ("Common","_impl#compare#Prelude.Ord#Common.Result2") 0 Public (FuncType (TCons ("Common","Result2") []) (FuncType (TCons ("Common","Result2") []) (TCons ("Prelude","Ordering") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#compare#Prelude.Ord") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Ord#Common.Result2") []])),Func ("Common","_impl#<#Prelude.Ord#Common.Result2") 0 Public (FuncType (TCons ("Common","Result2") []) (FuncType (TCons ("Common","Result2") []) (TCons ("Prelude","Bool") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#<#Prelude.Ord") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Ord#Common.Result2") []])),Func ("Common","_impl#>#Prelude.Ord#Common.Result2") 0 Public (FuncType (TCons ("Common","Result2") []) (FuncType (TCons ("Common","Result2") []) (TCons ("Prelude","Bool") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#>#Prelude.Ord") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Ord#Common.Result2") []])),Func ("Common","_impl#<=#Prelude.Ord#Common.Result2") 2 Public (FuncType (TCons ("Common","Result2") []) (FuncType (TCons ("Common","Result2") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("Common","G_TT") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_TF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_FT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_FF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FF") []) (Comb ConsCall ("Prelude","True") [])]),Branch (Pattern ("Common","G_TF") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_FT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_FF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FF") []) (Comb ConsCall ("Prelude","True") [])]),Branch (Pattern ("Common","G_FT") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_FF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FF") []) (Comb ConsCall ("Prelude","True") [])]),Branch (Pattern ("Common","G_FF") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FF") []) (Comb ConsCall ("Prelude","True") [])]),Branch (Pattern ("Common","H_TT") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FF") []) (Comb ConsCall ("Prelude","True") [])]),Branch (Pattern ("Common","H_TF") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FF") []) (Comb ConsCall ("Prelude","True") [])]),Branch (Pattern ("Common","H_FT") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FF") []) (Comb ConsCall ("Prelude","True") [])]),Branch (Pattern ("Common","H_FF") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FF") []) (Comb ConsCall ("Prelude","True") [])])])),Func ("Common","_impl#>=#Prelude.Ord#Common.Result2") 0 Public (FuncType (TCons ("Common","Result2") []) (FuncType (TCons ("Common","Result2") []) (TCons ("Prelude","Bool") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#>=#Prelude.Ord") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Ord#Common.Result2") []])),Func ("Common","_impl#min#Prelude.Ord#Common.Result2") 0 Public (FuncType (TCons ("Common","Result2") []) (FuncType (TCons ("Common","Result2") []) (TCons ("Common","Result2") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#min#Prelude.Ord") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Ord#Common.Result2") []])),Func ("Common","_impl#max#Prelude.Ord#Common.Result2") 0 Public (FuncType (TCons ("Common","Result2") []) (FuncType (TCons ("Common","Result2") []) (TCons ("Common","Result2") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#max#Prelude.Ord") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Ord#Common.Result2") []])),Func ("Common","_inst#Prelude.Show#Common.Result2") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Show") [TCons ("Common","Result2") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Show") [Comb FuncCall ("Common","_impl#show#Prelude.Show#Common.Result2") [],Comb (FuncPartCall 2) ("Common","_impl#showsPrec#Prelude.Show#Common.Result2") [],Comb FuncCall ("Common","_impl#showList#Prelude.Show#Common.Result2") []])])),Func ("Common","_impl#show#Prelude.Show#Common.Result2") 0 Public (FuncType (TCons ("Common","Result2") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb (FuncPartCall 1) ("Prelude","_def#show#Prelude.Show") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Show#Common.Result2") []])),Func ("Common","_impl#showsPrec#Prelude.Show#Common.Result2") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Common","Result2") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])))) (Rule [1,2] (Case Flex (Var 2) [Branch (Pattern ("Common","G_TT") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'G'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude","[]") []]]]]]),Branch (Pattern ("Common","G_TF") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'G'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude","[]") []]]]]]),Branch (Pattern ("Common","G_FT") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'G'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude","[]") []]]]]]),Branch (Pattern ("Common","G_FF") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'G'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude","[]") []]]]]]),Branch (Pattern ("Common","H_TT") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'H'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude","[]") []]]]]]),Branch (Pattern ("Common","H_TF") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'H'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude","[]") []]]]]]),Branch (Pattern ("Common","H_FT") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'H'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude","[]") []]]]]]),Branch (Pattern ("Common","H_FF") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'H'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude","[]") []]]]]])])),Func ("Common","_impl#showList#Prelude.Show#Common.Result2") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Common","Result2") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]))) (Rule [] (Comb FuncCall ("Prelude","_def#showList#Prelude.Show") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Show#Common.Result2") []])),Func ("Common","_inst#Prelude.Eq#Common.Result3") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Eq") [TCons ("Common","Result3") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Eq") [Comb (FuncPartCall 2) ("Common","_impl#==#Prelude.Eq#Common.Result3") [],Comb FuncCall ("Common","_impl#/=#Prelude.Eq#Common.Result3") []])])),Func ("Common","_impl#==#Prelude.Eq#Common.Result3") 2 Public (FuncType (TCons ("Common","Result3") []) (FuncType (TCons ("Common","Result3") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("Common","G_TTT") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","G_TTF") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","G_TFT") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","G_TFF") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","G_FTT") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","G_FTF") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","G_FFT") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","G_FFF") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","H_TTT") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","H_TTF") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","H_TFT") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","H_TFF") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","H_FTT") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","H_FTF") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","H_FFT") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","H_FFF") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","True") [])])])),Func ("Common","_impl#/=#Prelude.Eq#Common.Result3") 0 Public (FuncType (TCons ("Common","Result3") []) (FuncType (TCons ("Common","Result3") []) (TCons ("Prelude","Bool") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#/=#Prelude.Eq") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Eq#Common.Result3") []])),Func ("Common","_inst#Prelude.Ord#Common.Result3") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Ord") [TCons ("Common","Result3") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Ord") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Eq#Common.Result3") [],Comb FuncCall ("Common","_impl#compare#Prelude.Ord#Common.Result3") [],Comb FuncCall ("Common","_impl#<#Prelude.Ord#Common.Result3") [],Comb FuncCall ("Common","_impl#>#Prelude.Ord#Common.Result3") [],Comb (FuncPartCall 2) ("Common","_impl#<=#Prelude.Ord#Common.Result3") [],Comb FuncCall ("Common","_impl#>=#Prelude.Ord#Common.Result3") [],Comb FuncCall ("Common","_impl#min#Prelude.Ord#Common.Result3") [],Comb FuncCall ("Common","_impl#max#Prelude.Ord#Common.Result3") []])])),Func ("Common","_impl#compare#Prelude.Ord#Common.Result3") 0 Public (FuncType (TCons ("Common","Result3") []) (FuncType (TCons ("Common","Result3") []) (TCons ("Prelude","Ordering") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#compare#Prelude.Ord") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Ord#Common.Result3") []])),Func ("Common","_impl#<#Prelude.Ord#Common.Result3") 0 Public (FuncType (TCons ("Common","Result3") []) (FuncType (TCons ("Common","Result3") []) (TCons ("Prelude","Bool") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#<#Prelude.Ord") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Ord#Common.Result3") []])),Func ("Common","_impl#>#Prelude.Ord#Common.Result3") 0 Public (FuncType (TCons ("Common","Result3") []) (FuncType (TCons ("Common","Result3") []) (TCons ("Prelude","Bool") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#>#Prelude.Ord") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Ord#Common.Result3") []])),Func ("Common","_impl#<=#Prelude.Ord#Common.Result3") 2 Public (FuncType (TCons ("Common","Result3") []) (FuncType (TCons ("Common","Result3") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("Common","G_TTT") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","True") [])]),Branch (Pattern ("Common","G_TTF") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","True") [])]),Branch (Pattern ("Common","G_TFT") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","True") [])]),Branch (Pattern ("Common","G_TFF") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","True") [])]),Branch (Pattern ("Common","G_FTT") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","True") [])]),Branch (Pattern ("Common","G_FTF") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","True") [])]),Branch (Pattern ("Common","G_FFT") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","True") [])]),Branch (Pattern ("Common","G_FFF") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","True") [])]),Branch (Pattern ("Common","H_TTT") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","True") [])]),Branch (Pattern ("Common","H_TTF") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","True") [])]),Branch (Pattern ("Common","H_TFT") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","True") [])]),Branch (Pattern ("Common","H_TFF") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","True") [])]),Branch (Pattern ("Common","H_FTT") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","True") [])]),Branch (Pattern ("Common","H_FTF") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","True") [])]),Branch (Pattern ("Common","H_FFT") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","True") [])]),Branch (Pattern ("Common","H_FFF") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_FFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_TFF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FTF") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFT") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_FFF") []) (Comb ConsCall ("Prelude","True") [])])])),Func ("Common","_impl#>=#Prelude.Ord#Common.Result3") 0 Public (FuncType (TCons ("Common","Result3") []) (FuncType (TCons ("Common","Result3") []) (TCons ("Prelude","Bool") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#>=#Prelude.Ord") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Ord#Common.Result3") []])),Func ("Common","_impl#min#Prelude.Ord#Common.Result3") 0 Public (FuncType (TCons ("Common","Result3") []) (FuncType (TCons ("Common","Result3") []) (TCons ("Common","Result3") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#min#Prelude.Ord") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Ord#Common.Result3") []])),Func ("Common","_impl#max#Prelude.Ord#Common.Result3") 0 Public (FuncType (TCons ("Common","Result3") []) (FuncType (TCons ("Common","Result3") []) (TCons ("Common","Result3") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#max#Prelude.Ord") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Ord#Common.Result3") []])),Func ("Common","_inst#Prelude.Show#Common.Result3") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Show") [TCons ("Common","Result3") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Show") [Comb FuncCall ("Common","_impl#show#Prelude.Show#Common.Result3") [],Comb (FuncPartCall 2) ("Common","_impl#showsPrec#Prelude.Show#Common.Result3") [],Comb FuncCall ("Common","_impl#showList#Prelude.Show#Common.Result3") []])])),Func ("Common","_impl#show#Prelude.Show#Common.Result3") 0 Public (FuncType (TCons ("Common","Result3") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb (FuncPartCall 1) ("Prelude","_def#show#Prelude.Show") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Show#Common.Result3") []])),Func ("Common","_impl#showsPrec#Prelude.Show#Common.Result3") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Common","Result3") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])))) (Rule [1,2] (Case Flex (Var 2) [Branch (Pattern ("Common","G_TTT") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'G'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude","[]") []]]]]]]),Branch (Pattern ("Common","G_TTF") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'G'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude","[]") []]]]]]]),Branch (Pattern ("Common","G_TFT") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'G'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude","[]") []]]]]]]),Branch (Pattern ("Common","G_TFF") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'G'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude","[]") []]]]]]]),Branch (Pattern ("Common","G_FTT") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'G'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude","[]") []]]]]]]),Branch (Pattern ("Common","G_FTF") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'G'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude","[]") []]]]]]]),Branch (Pattern ("Common","G_FFT") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'G'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude","[]") []]]]]]]),Branch (Pattern ("Common","G_FFF") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'G'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude","[]") []]]]]]]),Branch (Pattern ("Common","H_TTT") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'H'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude","[]") []]]]]]]),Branch (Pattern ("Common","H_TTF") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'H'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude","[]") []]]]]]]),Branch (Pattern ("Common","H_TFT") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'H'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude","[]") []]]]]]]),Branch (Pattern ("Common","H_TFF") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'H'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude","[]") []]]]]]]),Branch (Pattern ("Common","H_FTT") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'H'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude","[]") []]]]]]]),Branch (Pattern ("Common","H_FTF") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'H'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude","[]") []]]]]]]),Branch (Pattern ("Common","H_FFT") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'H'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc 'T'),Comb ConsCall ("Prelude","[]") []]]]]]]),Branch (Pattern ("Common","H_FFF") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'H'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude",":") [Lit (Charc 'F'),Comb ConsCall ("Prelude","[]") []]]]]]])])),Func ("Common","_impl#showList#Prelude.Show#Common.Result3") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Common","Result3") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]))) (Rule [] (Comb FuncCall ("Prelude","_def#showList#Prelude.Show") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Show#Common.Result3") []])),Func ("Common","_inst#Prelude.Eq#Common.ABC") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Eq") [TCons ("Common","ABC") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Eq") [Comb (FuncPartCall 2) ("Common","_impl#==#Prelude.Eq#Common.ABC") [],Comb FuncCall ("Common","_impl#/=#Prelude.Eq#Common.ABC") []])])),Func ("Common","_impl#==#Prelude.Eq#Common.ABC") 2 Public (FuncType (TCons ("Common","ABC") []) (FuncType (TCons ("Common","ABC") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("Common","A") []) (Case Flex (Var 2) [Branch (Pattern ("Common","A") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","B") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","C") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","B") []) (Case Flex (Var 2) [Branch (Pattern ("Common","A") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","B") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","C") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","C") []) (Case Flex (Var 2) [Branch (Pattern ("Common","A") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","B") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","C") []) (Comb ConsCall ("Prelude","True") [])])])),Func ("Common","_impl#/=#Prelude.Eq#Common.ABC") 0 Public (FuncType (TCons ("Common","ABC") []) (FuncType (TCons ("Common","ABC") []) (TCons ("Prelude","Bool") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#/=#Prelude.Eq") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Eq#Common.ABC") []])),Func ("Common","_inst#Prelude.Ord#Common.ABC") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Ord") [TCons ("Common","ABC") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Ord") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Eq#Common.ABC") [],Comb FuncCall ("Common","_impl#compare#Prelude.Ord#Common.ABC") [],Comb FuncCall ("Common","_impl#<#Prelude.Ord#Common.ABC") [],Comb FuncCall ("Common","_impl#>#Prelude.Ord#Common.ABC") [],Comb (FuncPartCall 2) ("Common","_impl#<=#Prelude.Ord#Common.ABC") [],Comb FuncCall ("Common","_impl#>=#Prelude.Ord#Common.ABC") [],Comb FuncCall ("Common","_impl#min#Prelude.Ord#Common.ABC") [],Comb FuncCall ("Common","_impl#max#Prelude.Ord#Common.ABC") []])])),Func ("Common","_impl#compare#Prelude.Ord#Common.ABC") 0 Public (FuncType (TCons ("Common","ABC") []) (FuncType (TCons ("Common","ABC") []) (TCons ("Prelude","Ordering") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#compare#Prelude.Ord") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Ord#Common.ABC") []])),Func ("Common","_impl#<#Prelude.Ord#Common.ABC") 0 Public (FuncType (TCons ("Common","ABC") []) (FuncType (TCons ("Common","ABC") []) (TCons ("Prelude","Bool") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#<#Prelude.Ord") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Ord#Common.ABC") []])),Func ("Common","_impl#>#Prelude.Ord#Common.ABC") 0 Public (FuncType (TCons ("Common","ABC") []) (FuncType (TCons ("Common","ABC") []) (TCons ("Prelude","Bool") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#>#Prelude.Ord") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Ord#Common.ABC") []])),Func ("Common","_impl#<=#Prelude.Ord#Common.ABC") 2 Public (FuncType (TCons ("Common","ABC") []) (FuncType (TCons ("Common","ABC") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("Common","A") []) (Case Flex (Var 2) [Branch (Pattern ("Common","A") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","B") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","C") []) (Comb ConsCall ("Prelude","True") [])]),Branch (Pattern ("Common","B") []) (Case Flex (Var 2) [Branch (Pattern ("Common","A") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","B") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","C") []) (Comb ConsCall ("Prelude","True") [])]),Branch (Pattern ("Common","C") []) (Case Flex (Var 2) [Branch (Pattern ("Common","A") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","B") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","C") []) (Comb ConsCall ("Prelude","True") [])])])),Func ("Common","_impl#>=#Prelude.Ord#Common.ABC") 0 Public (FuncType (TCons ("Common","ABC") []) (FuncType (TCons ("Common","ABC") []) (TCons ("Prelude","Bool") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#>=#Prelude.Ord") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Ord#Common.ABC") []])),Func ("Common","_impl#min#Prelude.Ord#Common.ABC") 0 Public (FuncType (TCons ("Common","ABC") []) (FuncType (TCons ("Common","ABC") []) (TCons ("Common","ABC") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#min#Prelude.Ord") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Ord#Common.ABC") []])),Func ("Common","_impl#max#Prelude.Ord#Common.ABC") 0 Public (FuncType (TCons ("Common","ABC") []) (FuncType (TCons ("Common","ABC") []) (TCons ("Common","ABC") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#max#Prelude.Ord") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Ord#Common.ABC") []])),Func ("Common","_inst#Prelude.Show#Common.ABC") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Show") [TCons ("Common","ABC") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Show") [Comb FuncCall ("Common","_impl#show#Prelude.Show#Common.ABC") [],Comb (FuncPartCall 2) ("Common","_impl#showsPrec#Prelude.Show#Common.ABC") [],Comb FuncCall ("Common","_impl#showList#Prelude.Show#Common.ABC") []])])),Func ("Common","_impl#show#Prelude.Show#Common.ABC") 0 Public (FuncType (TCons ("Common","ABC") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb (FuncPartCall 1) ("Prelude","_def#show#Prelude.Show") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Show#Common.ABC") []])),Func ("Common","_impl#showsPrec#Prelude.Show#Common.ABC") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Common","ABC") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])))) (Rule [1,2] (Case Flex (Var 2) [Branch (Pattern ("Common","A") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'A'),Comb ConsCall ("Prelude","[]") []]]),Branch (Pattern ("Common","B") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'B'),Comb ConsCall ("Prelude","[]") []]]),Branch (Pattern ("Common","C") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'C'),Comb ConsCall ("Prelude","[]") []]])])),Func ("Common","_impl#showList#Prelude.Show#Common.ABC") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Common","ABC") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]))) (Rule [] (Comb FuncCall ("Prelude","_def#showList#Prelude.Show") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Show#Common.ABC") []])),Func ("Common","_inst#Prelude.Eq#Common.ResultABC") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Eq") [TCons ("Common","ResultABC") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Eq") [Comb (FuncPartCall 2) ("Common","_impl#==#Prelude.Eq#Common.ResultABC") [],Comb FuncCall ("Common","_impl#/=#Prelude.Eq#Common.ResultABC") []])])),Func ("Common","_impl#==#Prelude.Eq#Common.ResultABC") 2 Public (FuncType (TCons ("Common","ResultABC") []) (FuncType (TCons ("Common","ResultABC") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("Common","G_A") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_A") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_B") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_C") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_A") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_B") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_C") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","G_B") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_A") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_B") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_C") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_A") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_B") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_C") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","G_C") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_A") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_B") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_C") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_A") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_B") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_C") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","H_A") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_A") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_B") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_C") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_A") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_B") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_C") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","H_B") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_A") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_B") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_C") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_A") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_B") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_C") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Common","H_C") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_A") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_B") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_C") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_A") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_B") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_C") []) (Comb ConsCall ("Prelude","True") [])])])),Func ("Common","_impl#/=#Prelude.Eq#Common.ResultABC") 0 Public (FuncType (TCons ("Common","ResultABC") []) (FuncType (TCons ("Common","ResultABC") []) (TCons ("Prelude","Bool") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#/=#Prelude.Eq") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Eq#Common.ResultABC") []])),Func ("Common","_inst#Prelude.Ord#Common.ResultABC") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Ord") [TCons ("Common","ResultABC") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Ord") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Eq#Common.ResultABC") [],Comb FuncCall ("Common","_impl#compare#Prelude.Ord#Common.ResultABC") [],Comb FuncCall ("Common","_impl#<#Prelude.Ord#Common.ResultABC") [],Comb FuncCall ("Common","_impl#>#Prelude.Ord#Common.ResultABC") [],Comb (FuncPartCall 2) ("Common","_impl#<=#Prelude.Ord#Common.ResultABC") [],Comb FuncCall ("Common","_impl#>=#Prelude.Ord#Common.ResultABC") [],Comb FuncCall ("Common","_impl#min#Prelude.Ord#Common.ResultABC") [],Comb FuncCall ("Common","_impl#max#Prelude.Ord#Common.ResultABC") []])])),Func ("Common","_impl#compare#Prelude.Ord#Common.ResultABC") 0 Public (FuncType (TCons ("Common","ResultABC") []) (FuncType (TCons ("Common","ResultABC") []) (TCons ("Prelude","Ordering") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#compare#Prelude.Ord") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Ord#Common.ResultABC") []])),Func ("Common","_impl#<#Prelude.Ord#Common.ResultABC") 0 Public (FuncType (TCons ("Common","ResultABC") []) (FuncType (TCons ("Common","ResultABC") []) (TCons ("Prelude","Bool") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#<#Prelude.Ord") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Ord#Common.ResultABC") []])),Func ("Common","_impl#>#Prelude.Ord#Common.ResultABC") 0 Public (FuncType (TCons ("Common","ResultABC") []) (FuncType (TCons ("Common","ResultABC") []) (TCons ("Prelude","Bool") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#>#Prelude.Ord") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Ord#Common.ResultABC") []])),Func ("Common","_impl#<=#Prelude.Ord#Common.ResultABC") 2 Public (FuncType (TCons ("Common","ResultABC") []) (FuncType (TCons ("Common","ResultABC") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("Common","G_A") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_A") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_B") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_C") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_A") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_B") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_C") []) (Comb ConsCall ("Prelude","True") [])]),Branch (Pattern ("Common","G_B") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_A") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_B") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","G_C") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_A") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_B") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_C") []) (Comb ConsCall ("Prelude","True") [])]),Branch (Pattern ("Common","G_C") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_A") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_B") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_C") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_A") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_B") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_C") []) (Comb ConsCall ("Prelude","True") [])]),Branch (Pattern ("Common","H_A") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_A") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_B") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_C") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_A") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_B") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_C") []) (Comb ConsCall ("Prelude","True") [])]),Branch (Pattern ("Common","H_B") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_A") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_B") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_C") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_A") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_B") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Common","H_C") []) (Comb ConsCall ("Prelude","True") [])]),Branch (Pattern ("Common","H_C") []) (Case Flex (Var 2) [Branch (Pattern ("Common","G_A") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_B") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","G_C") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_A") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_B") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Common","H_C") []) (Comb ConsCall ("Prelude","True") [])])])),Func ("Common","_impl#>=#Prelude.Ord#Common.ResultABC") 0 Public (FuncType (TCons ("Common","ResultABC") []) (FuncType (TCons ("Common","ResultABC") []) (TCons ("Prelude","Bool") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#>=#Prelude.Ord") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Ord#Common.ResultABC") []])),Func ("Common","_impl#min#Prelude.Ord#Common.ResultABC") 0 Public (FuncType (TCons ("Common","ResultABC") []) (FuncType (TCons ("Common","ResultABC") []) (TCons ("Common","ResultABC") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#min#Prelude.Ord") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Ord#Common.ResultABC") []])),Func ("Common","_impl#max#Prelude.Ord#Common.ResultABC") 0 Public (FuncType (TCons ("Common","ResultABC") []) (FuncType (TCons ("Common","ResultABC") []) (TCons ("Common","ResultABC") []))) (Rule [] (Comb (FuncPartCall 2) ("Prelude","_def#max#Prelude.Ord") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Ord#Common.ResultABC") []])),Func ("Common","_inst#Prelude.Show#Common.ResultABC") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Show") [TCons ("Common","ResultABC") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Show") [Comb FuncCall ("Common","_impl#show#Prelude.Show#Common.ResultABC") [],Comb (FuncPartCall 2) ("Common","_impl#showsPrec#Prelude.Show#Common.ResultABC") [],Comb FuncCall ("Common","_impl#showList#Prelude.Show#Common.ResultABC") []])])),Func ("Common","_impl#show#Prelude.Show#Common.ResultABC") 0 Public (FuncType (TCons ("Common","ResultABC") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb (FuncPartCall 1) ("Prelude","_def#show#Prelude.Show") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Show#Common.ResultABC") []])),Func ("Common","_impl#showsPrec#Prelude.Show#Common.ResultABC") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Common","ResultABC") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])))) (Rule [1,2] (Case Flex (Var 2) [Branch (Pattern ("Common","G_A") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'G'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'A'),Comb ConsCall ("Prelude","[]") []]]]]),Branch (Pattern ("Common","G_B") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'G'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'B'),Comb ConsCall ("Prelude","[]") []]]]]),Branch (Pattern ("Common","G_C") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'G'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'C'),Comb ConsCall ("Prelude","[]") []]]]]),Branch (Pattern ("Common","H_A") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'H'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'A'),Comb ConsCall ("Prelude","[]") []]]]]),Branch (Pattern ("Common","H_B") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'H'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'B'),Comb ConsCall ("Prelude","[]") []]]]]),Branch (Pattern ("Common","H_C") []) (Comb (FuncPartCall 1) ("Prelude","showString") [Comb ConsCall ("Prelude",":") [Lit (Charc 'H'),Comb ConsCall ("Prelude",":") [Lit (Charc '_'),Comb ConsCall ("Prelude",":") [Lit (Charc 'C'),Comb ConsCall ("Prelude","[]") []]]]])])),Func ("Common","_impl#showList#Prelude.Show#Common.ResultABC") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Common","ResultABC") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]))) (Rule [] (Comb FuncCall ("Prelude","_def#showList#Prelude.Show") [Comb (FuncPartCall 1) ("Common","_inst#Prelude.Show#Common.ResultABC") []])),Func ("Common","a") 0 Public (TCons ("Prelude","Bool") []) (Rule [] (Comb FuncCall ("Prelude","?") [Comb ConsCall ("Prelude","True") [],Comb ConsCall ("Prelude","False") []])),Func ("Common","comb") 1 Public (FuncType (TCons ("Prelude","Bool") []) (TCons ("Prelude","Bool") [])) (Rule [1] (Comb FuncCall ("Prelude","?") [Var 1,Comb FuncCall ("Prelude","not") [Var 1]])),Func ("Common","k") 1 Public (FuncType (TCons ("Prelude","Bool") []) (TCons ("Prelude","[]") [TCons ("Prelude","Bool") []])) (Rule [1] (Comb ConsCall ("Prelude",":") [Var 1,Comb ConsCall ("Prelude",":") [Comb FuncCall ("Common","a") [],Comb ConsCall ("Prelude","[]") []]])),Func ("Common","narrow") 1 Public (FuncType (TCons ("Prelude","Bool") []) (TCons ("Prelude","Bool") [])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","False") [])])),Func ("Common","f1") 0 Public (FuncType (TCons ("Prelude","Bool") []) (TCons ("Common","Result1") [])) (Rule [] (Comb FuncCall ("Prelude","?") [Comb (FuncPartCall 1) ("Common","g1") [],Comb (FuncPartCall 1) ("Common","h1") []])),Func ("Common","f1'") 1 Public (FuncType (TCons ("Prelude","Bool") []) (TCons ("Common","Result1") [])) (Rule [1] (Comb FuncCall ("Prelude","?") [Comb FuncCall ("Common","g1") [Var 1],Comb FuncCall ("Common","h1") [Var 1]])),Func ("Common","g1") 1 Public (FuncType (TCons ("Prelude","Bool") []) (TCons ("Common","Result1") [])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Common","G_T") []),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Common","G_F") [])])),Func ("Common","h1") 1 Public (FuncType (TCons ("Prelude","Bool") []) (TCons ("Common","Result1") [])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Common","H_T") []),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Common","H_F") [])])),Func ("Common","f2") 0 Public (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("Prelude","Bool") []) (TCons ("Common","Result2") []))) (Rule [] (Comb FuncCall ("Prelude","?") [Comb (FuncPartCall 2) ("Common","g2") [],Comb (FuncPartCall 2) ("Common","h2") []])),Func ("Common","f2'") 2 Public (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("Prelude","Bool") []) (TCons ("Common","Result2") []))) (Rule [1,2] (Comb FuncCall ("Prelude","?") [Comb FuncCall ("Common","g2") [Var 1,Var 2],Comb FuncCall ("Common","h2") [Var 1,Var 2]])),Func ("Common","g2") 2 Public (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("Prelude","Bool") []) (TCons ("Common","Result2") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("Prelude","True") []) (Case Flex (Var 2) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Common","G_TT") []),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Common","G_TF") [])]),Branch (Pattern ("Prelude","False") []) (Case Flex (Var 2) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Common","G_FT") []),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Common","G_FF") [])])])),Func ("Common","h2") 2 Public (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("Prelude","Bool") []) (TCons ("Common","Result2") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("Prelude","True") []) (Case Flex (Var 2) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Common","H_TT") []),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Common","H_TF") [])]),Branch (Pattern ("Prelude","False") []) (Case Flex (Var 2) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Common","H_FT") []),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Common","H_FF") [])])])),Func ("Common","f3") 0 Public (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("Prelude","Bool") []) (TCons ("Common","Result3") [])))) (Rule [] (Comb FuncCall ("Prelude","?") [Comb (FuncPartCall 3) ("Common","g3") [],Comb (FuncPartCall 3) ("Common","h3") []])),Func ("Common","f3'") 3 Public (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("Prelude","Bool") []) (TCons ("Common","Result3") [])))) (Rule [1,2,3] (Comb FuncCall ("Prelude","?") [Comb FuncCall ("Common","g3") [Var 1,Var 2,Var 3],Comb FuncCall ("Common","h3") [Var 1,Var 2,Var 3]])),Func ("Common","g3") 3 Public (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("Prelude","Bool") []) (TCons ("Common","Result3") [])))) (Rule [1,2,3] (Case Flex (Var 1) [Branch (Pattern ("Prelude","True") []) (Case Flex (Var 2) [Branch (Pattern ("Prelude","True") []) (Case Flex (Var 3) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Common","G_TTT") []),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Common","G_TTF") [])]),Branch (Pattern ("Prelude","False") []) (Case Flex (Var 3) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Common","G_TFT") []),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Common","G_TFF") [])])]),Branch (Pattern ("Prelude","False") []) (Case Flex (Var 2) [Branch (Pattern ("Prelude","True") []) (Case Flex (Var 3) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Common","G_FTT") []),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Common","G_FTF") [])]),Branch (Pattern ("Prelude","False") []) (Case Flex (Var 3) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Common","G_FFT") []),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Common","G_FFF") [])])])])),Func ("Common","h3") 3 Public (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("Prelude","Bool") []) (TCons ("Common","Result3") [])))) (Rule [1,2,3] (Case Flex (Var 1) [Branch (Pattern ("Prelude","True") []) (Case Flex (Var 2) [Branch (Pattern ("Prelude","True") []) (Case Flex (Var 3) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Common","H_TTT") []),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Common","H_TTF") [])]),Branch (Pattern ("Prelude","False") []) (Case Flex (Var 3) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Common","H_TFT") []),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Common","H_TFF") [])])]),Branch (Pattern ("Prelude","False") []) (Case Flex (Var 2) [Branch (Pattern ("Prelude","True") []) (Case Flex (Var 3) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Common","H_FTT") []),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Common","H_FTF") [])]),Branch (Pattern ("Prelude","False") []) (Case Flex (Var 3) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Common","H_FFT") []),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Common","H_FFF") [])])])])),Func ("Common","ab") 0 Public (TCons ("Common","ABC") []) (Rule [] (Comb FuncCall ("Prelude","?") [Comb ConsCall ("Common","A") [],Comb ConsCall ("Common","B") []])),Func ("Common","abc") 0 Public (TCons ("Common","ABC") []) (Rule [] (Comb FuncCall ("Prelude","?") [Comb ConsCall ("Common","A") [],Comb FuncCall ("Prelude","?") [Comb ConsCall ("Common","B") [],Comb ConsCall ("Common","C") []]])),Func ("Common","fa") 0 Public (FuncType (TCons ("Common","ABC") []) (TCons ("Common","ResultABC") [])) (Rule [] (Comb FuncCall ("Prelude","?") [Comb (FuncPartCall 1) ("Common","ga") [],Comb (FuncPartCall 1) ("Common","ha") []])),Func ("Common","ga") 1 Public (FuncType (TCons ("Common","ABC") []) (TCons ("Common","ResultABC") [])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Common","A") []) (Comb ConsCall ("Common","G_A") []),Branch (Pattern ("Common","B") []) (Comb ConsCall ("Common","G_B") []),Branch (Pattern ("Common","C") []) (Comb ConsCall ("Common","G_C") [])])),Func ("Common","ha") 1 Public (FuncType (TCons ("Common","ABC") []) (TCons ("Common","ResultABC") [])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Common","A") []) (Comb ConsCall ("Common","H_A") []),Branch (Pattern ("Common","B") []) (Comb ConsCall ("Common","H_B") []),Branch (Pattern ("Common","C") []) (Comb ConsCall ("Common","H_C") [])]))] []