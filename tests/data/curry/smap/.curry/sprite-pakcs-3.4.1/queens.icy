(IProg "queens" ["Prelude","Control.SetFunctions"] [] [(IFunction ("queens","perm",0) 1 Public [0] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (ICaseCons 1 [(IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) [])))),(IConsBranch ("Prelude",":",1) 2 (IBlock [(IVarDecl 2),(IVarDecl 3)] [(IVarAssign 2 (IVarAccess 1 [0])),(IVarAssign 3 (IVarAccess 1 [1]))] (IReturn (IFCall ("queens","perm.ndinsert.4",5) [(IVar 2),(IFCall ("queens","perm",0) [(IVar 3)])]))))])))),(IFunction ("queens","perm.ndinsert.4",5) 2 Private [] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (IReturn (IOr (IFCall ("queens","perm.ndinsert.4_CASE0",6) [(IVar 2),(IVar 1)]) (ICCall ("Prelude",":",1) [(IVar 1),(IVar 2)])))))),(IFunction ("queens","perm.ndinsert.4_CASE0",6) 2 Private [0] (IFuncBody (IBlock [(IVarDecl 2),(IVarDecl 1)] [(IVarAssign 2 (IVarAccess 0 [0])),(IVarAssign 1 (IVarAccess 0 [1]))] (ICaseCons 2 [(IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] IExempt)),(IConsBranch ("Prelude",":",1) 2 (IBlock [(IVarDecl 3),(IVarDecl 4)] [(IVarAssign 3 (IVarAccess 2 [0])),(IVarAssign 4 (IVarAccess 2 [1]))] (IReturn (ICCall ("Prelude",":",1) [(IVar 3),(IFCall ("queens","perm.ndinsert.4",5) [(IVar 1),(IVar 4)])]))))])))),(IFunction ("queens","queens",1) 1 Public [] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IFCall ("queens","perm",0) [(IFCall ("Prelude","_impl#enumFromTo#Prelude.Enum#Prelude.Int",304) [(ILit (IInt 1)),(IVar 1)])]))] (IReturn (IFCall ("queens","queens_COMPLEXCASE0",7) [(IVar 2),(IFCall ("Control.SetFunctions","isEmpty",20) [(IFCall ("Control.SetFunctions","set1",4) [(IFPCall ("queens","queens.unsafe.10",8) 1 []),(IVar 2)])])]))))),(IFunction ("queens","queens_COMPLEXCASE0",7) 2 Private [1] (IFuncBody (IBlock [(IVarDecl 2),(IVarDecl 3)] [(IVarAssign 2 (IVarAccess 0 [0])),(IVarAssign 3 (IVarAccess 0 [1]))] (ICaseCons 3 [(IConsBranch ("Prelude","False",0) 0 (IBlock [] [] IExempt)),(IConsBranch ("Prelude","True",1) 0 (IBlock [] [] (IReturn (IVar 2))))])))),(IFunction ("queens","queens.unsafe.10",8) 1 Private [] (IFuncBody (IBlock [(IVarDecl 1),(IFreeDecl 2),(IFreeDecl 3),(IFreeDecl 4)] [(IVarAssign 1 (IVarAccess 0 [0]))] (IReturn (IFCall ("Prelude","cond",761) [(IFCall ("Prelude","=:<=",751) [(IFPCall ("Prelude","_inst#Prelude.Data#[]",11) 1 [(IFPCall ("Prelude","_inst#Prelude.Data#Prelude.Int",5) 1 [])]),(IFCall ("Prelude","++",697) [(IFCall ("Prelude","unknown",757) [(IFPCall ("Prelude","_inst#Prelude.Data#[]",11) 1 [(IFPCall ("Prelude","_inst#Prelude.Data#Prelude.Int",5) 1 [])])]),(IFCall ("Prelude","++",697) [(ICCall ("Prelude",":",1) [(IVar 2),(ICCall ("Prelude","[]",0) [])]),(IFCall ("Prelude","++",697) [(IVar 3),(IFCall ("Prelude","++",697) [(ICCall ("Prelude",":",1) [(IVar 4),(ICCall ("Prelude","[]",0) [])]),(IFCall ("Prelude","unknown",757) [(IFPCall ("Prelude","_inst#Prelude.Data#[]",11) 1 [(IFPCall ("Prelude","_inst#Prelude.Data#Prelude.Int",5) 1 [])])])])])])]),(IVar 1)]),(IFCall ("Prelude","=:=",749) [(IFPCall ("Prelude","_inst#Prelude.Data#Prelude.Int",5) 1 []),(IFCall ("Prelude","_impl#abs#Prelude.Num#Prelude.Int",345) [(IFCall ("Prelude","_impl#-#Prelude.Num#Prelude.Int",342) [(IVar 2),(IVar 4)])]),(IFCall ("Prelude","_impl#+#Prelude.Num#Prelude.Int",341) [(IFCall ("Prelude","length",698) [(IVar 3)]),(ILit (IInt 1))])])]))))),(IFunction ("queens","goal1",2) 0 Public [] (IFuncBody (IBlock [] [] (IReturn (IFCall ("queens","queens",1) [(ILit (IInt 4))]))))),(IFunction ("queens","goal2",3) 0 Public [] (IFuncBody (IBlock [] [] (IReturn (IFCall ("queens","queens",1) [(ILit (IInt 6))]))))),(IFunction ("queens","main",4) 0 Public [] (IFuncBody (IBlock [] [] (IReturn (IFCall ("queens","goal1",2) [])))))])