{- AbstractCurry 3.0 -}
CurryProg "poker_four_of_a_kind"
["Control.SetFunctions"]
Nothing
 []
 []
 [CType ("poker_four_of_a_kind","Suit") Public [] [CCons ("poker_four_of_a_kind","Club") Public [],CCons ("poker_four_of_a_kind","Spade") Public [],CCons ("poker_four_of_a_kind","Heart") Public [],CCons ("poker_four_of_a_kind","Diamond") Public []] [("Prelude","Eq")],
  CType ("poker_four_of_a_kind","Rank") Public [] [CCons ("poker_four_of_a_kind","Ace") Public [],CCons ("poker_four_of_a_kind","King") Public [],CCons ("poker_four_of_a_kind","Queen") Public [],CCons ("poker_four_of_a_kind","Jack") Public [],CCons ("poker_four_of_a_kind","Ten") Public [],CCons ("poker_four_of_a_kind","Nine") Public [],CCons ("poker_four_of_a_kind","Eight") Public [],CCons ("poker_four_of_a_kind","Seven") Public [],CCons ("poker_four_of_a_kind","Six") Public [],CCons ("poker_four_of_a_kind","Five") Public [],CCons ("poker_four_of_a_kind","Four") Public [],CCons ("poker_four_of_a_kind","Three") Public [],CCons ("poker_four_of_a_kind","Two") Public []] [("Prelude","Show"),("Prelude","Eq")],
  CType ("poker_four_of_a_kind","Card") Public [] [CCons ("poker_four_of_a_kind","Card") Public [CTCons ("poker_four_of_a_kind","Rank"),CTCons ("poker_four_of_a_kind","Suit")]] [("Prelude","Eq")]]
 [CFunc ("poker_four_of_a_kind","rank") 1 Public (CQualType (CContext []) (CFuncType (CTCons ("poker_four_of_a_kind","Card")) (CTCons ("poker_four_of_a_kind","Rank")))) [CRule [CPComb ("poker_four_of_a_kind","Card") [CPVar (0,"r"),CPVar (1,"_")]] (CSimpleRhs (CVar (0,"r")) [])],
  CFunc ("poker_four_of_a_kind","isFour_ORGRULES") 1 Private (CQualType (CContext []) (CFuncType (CTApply (CTCons ("Prelude","[]")) (CTCons ("poker_four_of_a_kind","Card"))) (CTApply (CTCons ("Prelude","Maybe")) (CTCons ("poker_four_of_a_kind","Rank"))))) [CRule [CPFuncComb ("Prelude","++") [CPVar (0,"x"),CPFuncComb ("Prelude","++") [CPComb ("Prelude",":") [CPVar (1,"_"),CPComb ("Prelude","[]") []],CPVar (2,"z")]]] (CGuardedRhs [(CApply (CApply (CSymbol ("Prelude","==")) (CApply (CApply (CSymbol ("Prelude","map")) (CSymbol ("poker_four_of_a_kind","rank"))) (CApply (CApply (CSymbol ("Prelude","++")) (CVar (0,"x"))) (CVar (2,"z"))))) (CApply (CApply (CSymbol ("Prelude",":")) (CVar (3,"r"))) (CApply (CApply (CSymbol ("Prelude",":")) (CVar (3,"r"))) (CApply (CApply (CSymbol ("Prelude",":")) (CVar (3,"r"))) (CApply (CApply (CSymbol ("Prelude",":")) (CVar (3,"r"))) (CSymbol ("Prelude","[]")))))),CApply (CSymbol ("Prelude","Just")) (CVar (3,"r")))] [CLocalVars [(3,"r")]])],
  CFunc ("poker_four_of_a_kind","isFour_APPLICABLE") 1 Private (CQualType (CContext []) (CFuncType (CTApply (CTCons ("Prelude","[]")) (CTCons ("poker_four_of_a_kind","Card"))) (CTCons ("Prelude","()")))) [CRule [CPFuncComb ("Prelude","++") [CPVar (0,"x"),CPFuncComb ("Prelude","++") [CPComb ("Prelude",":") [CPVar (1,"_"),CPComb ("Prelude","[]") []],CPVar (2,"z")]]] (CGuardedRhs [(CApply (CApply (CSymbol ("Prelude","==")) (CApply (CApply (CSymbol ("Prelude","map")) (CSymbol ("poker_four_of_a_kind","rank"))) (CApply (CApply (CSymbol ("Prelude","++")) (CVar (0,"x"))) (CVar (2,"z"))))) (CApply (CApply (CSymbol ("Prelude",":")) (CVar (3,"r"))) (CApply (CApply (CSymbol ("Prelude",":")) (CVar (3,"r"))) (CApply (CApply (CSymbol ("Prelude",":")) (CVar (3,"r"))) (CApply (CApply (CSymbol ("Prelude",":")) (CVar (3,"r"))) (CSymbol ("Prelude","[]")))))),CSymbol ("Prelude","()"))] [CLocalVars [(3,"r")]])],
  CFunc ("poker_four_of_a_kind","isFour_DEFAULT") 1 Private (CQualType (CContext []) (CFuncType (CTApply (CTCons ("Prelude","[]")) (CTCons ("poker_four_of_a_kind","Card"))) (CTApply (CTCons ("Prelude","Maybe")) (CTVar (0,"a"))))) [CRule [CPVar (0,"patvar_1001")] (CGuardedRhs [(CApply (CSymbol ("Control.SetFunctions","isEmpty")) (CApply (CApply (CSymbol ("Control.SetFunctions","set1")) (CSymbol ("poker_four_of_a_kind","isFour_APPLICABLE"))) (CVar (0,"patvar_1001"))),CSymbol ("Prelude","Nothing"))] [])],
  CFunc ("poker_four_of_a_kind","isFour") 1 Public (CQualType (CContext []) (CFuncType (CTApply (CTCons ("Prelude","[]")) (CTCons ("poker_four_of_a_kind","Card"))) (CTApply (CTCons ("Prelude","Maybe")) (CTCons ("poker_four_of_a_kind","Rank"))))) [CRule [CPVar (0,"x1")] (CSimpleRhs (CApply (CApply (CSymbol ("Prelude","?")) (CApply (CSymbol ("poker_four_of_a_kind","isFour_ORGRULES")) (CVar (0,"x1")))) (CApply (CSymbol ("poker_four_of_a_kind","isFour_DEFAULT")) (CVar (0,"x1")))) [])],
  CFunc ("poker_four_of_a_kind","main") 0 Public (CQualType (CContext []) (CTApply (CTApply (CTCons ("Prelude","(,)")) (CTApply (CTCons ("Prelude","Maybe")) (CTCons ("poker_four_of_a_kind","Rank")))) (CTApply (CTCons ("Prelude","Maybe")) (CTCons ("poker_four_of_a_kind","Rank"))))) [CRule [] (CSimpleRhs (CApply (CApply (CSymbol ("Prelude","(,)")) (CApply (CSymbol ("poker_four_of_a_kind","isFour")) (CSymbol ("poker_four_of_a_kind","testYes")))) (CApply (CSymbol ("poker_four_of_a_kind","isFour")) (CSymbol ("poker_four_of_a_kind","testNo")))) [])],
  CFunc ("poker_four_of_a_kind","testYes") 0 Public (CQualType (CContext []) (CTApply (CTCons ("Prelude","[]")) (CTCons ("poker_four_of_a_kind","Card")))) [CRule [] (CSimpleRhs (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("poker_four_of_a_kind","Card")) (CSymbol ("poker_four_of_a_kind","Six"))) (CSymbol ("poker_four_of_a_kind","Club")))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("poker_four_of_a_kind","Card")) (CSymbol ("poker_four_of_a_kind","Six"))) (CSymbol ("poker_four_of_a_kind","Spade")))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("poker_four_of_a_kind","Card")) (CSymbol ("poker_four_of_a_kind","Five"))) (CSymbol ("poker_four_of_a_kind","Heart")))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("poker_four_of_a_kind","Card")) (CSymbol ("poker_four_of_a_kind","Six"))) (CSymbol ("poker_four_of_a_kind","Heart")))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("poker_four_of_a_kind","Card")) (CSymbol ("poker_four_of_a_kind","Six"))) (CSymbol ("poker_four_of_a_kind","Diamond")))) (CSymbol ("Prelude","[]"))))))) [])],
  CFunc ("poker_four_of_a_kind","testNo") 0 Public (CQualType (CContext []) (CTApply (CTCons ("Prelude","[]")) (CTCons ("poker_four_of_a_kind","Card")))) [CRule [] (CSimpleRhs (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("poker_four_of_a_kind","Card")) (CSymbol ("poker_four_of_a_kind","Six"))) (CSymbol ("poker_four_of_a_kind","Club")))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("poker_four_of_a_kind","Card")) (CSymbol ("poker_four_of_a_kind","Ace"))) (CSymbol ("poker_four_of_a_kind","Spade")))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("poker_four_of_a_kind","Card")) (CSymbol ("poker_four_of_a_kind","Five"))) (CSymbol ("poker_four_of_a_kind","Heart")))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("poker_four_of_a_kind","Card")) (CSymbol ("poker_four_of_a_kind","Ace"))) (CSymbol ("poker_four_of_a_kind","Club")))) (CApply (CApply (CSymbol ("Prelude",":")) (CApply (CApply (CSymbol ("poker_four_of_a_kind","Card")) (CSymbol ("poker_four_of_a_kind","Six"))) (CSymbol ("poker_four_of_a_kind","Diamond")))) (CSymbol ("Prelude","[]"))))))) [])]]
 []
