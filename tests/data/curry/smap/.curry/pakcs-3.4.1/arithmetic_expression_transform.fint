Prog "arithmetic_expression_transform" ["Prelude","Control.SetFunctions"] [Type ("arithmetic_expression_transform","Exp") Public [] [Cons ("arithmetic_expression_transform","Lit") 1 Public [TCons ("Prelude","Int") []],Cons ("arithmetic_expression_transform","Var") 1 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],Cons ("arithmetic_expression_transform","Add") 2 Public [TCons ("arithmetic_expression_transform","Exp") [],TCons ("arithmetic_expression_transform","Exp") []],Cons ("arithmetic_expression_transform","Mul") 2 Public [TCons ("arithmetic_expression_transform","Exp") [],TCons ("arithmetic_expression_transform","Exp") []]]] [Func ("arithmetic_expression_transform","_inst#Prelude.Data#arithmetic_expression_transform.Exp") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Data") [TCons ("arithmetic_expression_transform","Exp") []])) (Rule [] (Var 0)),Func ("arithmetic_expression_transform","_impl#===#Prelude.Data#arithmetic_expression_transform.Exp") 2 Public (FuncType (TCons ("arithmetic_expression_transform","Exp") []) (FuncType (TCons ("arithmetic_expression_transform","Exp") []) (TCons ("Prelude","Bool") []))) (Rule [] (Var 0)),Func ("arithmetic_expression_transform","_impl#aValue#Prelude.Data#arithmetic_expression_transform.Exp") 0 Public (TCons ("arithmetic_expression_transform","Exp") []) (Rule [] (Var 0)),Func ("arithmetic_expression_transform","exp1") 0 Public (TCons ("arithmetic_expression_transform","Exp") []) (Rule [] (Var 0)),Func ("arithmetic_expression_transform","replace") 3 Public (FuncType (TCons ("arithmetic_expression_transform","Exp") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Int") []]) (FuncType (TCons ("arithmetic_expression_transform","Exp") []) (TCons ("arithmetic_expression_transform","Exp") [])))) (Rule [] (Var 0)),Func ("arithmetic_expression_transform","evalTo") 1 Public (FuncType (TCons ("arithmetic_expression_transform","Exp") []) (TCons ("arithmetic_expression_transform","Exp") [])) (Rule [] (Var 0)),Func ("arithmetic_expression_transform","simplify") 1 Public (FuncType (TCons ("arithmetic_expression_transform","Exp") []) (TCons ("arithmetic_expression_transform","Exp") [])) (Rule [] (Var 0)),Func ("arithmetic_expression_transform","main0") 0 Public (TCons ("arithmetic_expression_transform","Exp") []) (Rule [] (Var 0)),Func ("arithmetic_expression_transform","simplifyAll") 1 Public (FuncType (TCons ("arithmetic_expression_transform","Exp") []) (TCons ("arithmetic_expression_transform","Exp") [])) (Rule [] (Var 0)),Func ("arithmetic_expression_transform","main1") 0 Public (TCons ("arithmetic_expression_transform","Exp") []) (Rule [] (Var 0)),Func ("arithmetic_expression_transform","varInExp") 1 Public (FuncType (TCons ("arithmetic_expression_transform","Exp") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("arithmetic_expression_transform","exp2") 0 Public (TCons ("arithmetic_expression_transform","Exp") []) (Rule [] (Var 0)),Func ("arithmetic_expression_transform","allVars") 1 Public (FuncType (TCons ("arithmetic_expression_transform","Exp") []) (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]])) (Rule [] (Var 0)),Func ("arithmetic_expression_transform","main2") 0 Public (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (Rule [] (Var 0))] []