Prog "funpat_perm02" ["Prelude"] [Type ("funpat_perm02","N") Public [] [Cons ("funpat_perm02","N1") 0 Public [],Cons ("funpat_perm02","N2") 0 Public [],Cons ("funpat_perm02","N3") 0 Public [],Cons ("funpat_perm02","N4") 0 Public [],Cons ("funpat_perm02","N5") 0 Public []]] [Func ("funpat_perm02","_inst#Prelude.Data#funpat_perm02.N") 1 Public (FuncType (TCons ("Prelude","()") []) (TCons ("Prelude","_Dict#Data") [TCons ("funpat_perm02","N") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","()") []) (Comb ConsCall ("Prelude","_Dict#Data") [Comb (FuncPartCall 2) ("funpat_perm02","_impl#===#Prelude.Data#funpat_perm02.N") [],Comb FuncCall ("funpat_perm02","_impl#aValue#Prelude.Data#funpat_perm02.N") []])])),Func ("funpat_perm02","_impl#===#Prelude.Data#funpat_perm02.N") 2 Public (FuncType (TCons ("funpat_perm02","N") []) (FuncType (TCons ("funpat_perm02","N") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case Flex (Var 1) [Branch (Pattern ("funpat_perm02","N1") []) (Case Flex (Var 2) [Branch (Pattern ("funpat_perm02","N1") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("funpat_perm02","N2") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("funpat_perm02","N3") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("funpat_perm02","N4") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("funpat_perm02","N5") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("funpat_perm02","N2") []) (Case Flex (Var 2) [Branch (Pattern ("funpat_perm02","N1") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("funpat_perm02","N2") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("funpat_perm02","N3") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("funpat_perm02","N4") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("funpat_perm02","N5") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("funpat_perm02","N3") []) (Case Flex (Var 2) [Branch (Pattern ("funpat_perm02","N1") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("funpat_perm02","N2") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("funpat_perm02","N3") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("funpat_perm02","N4") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("funpat_perm02","N5") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("funpat_perm02","N4") []) (Case Flex (Var 2) [Branch (Pattern ("funpat_perm02","N1") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("funpat_perm02","N2") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("funpat_perm02","N3") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("funpat_perm02","N4") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("funpat_perm02","N5") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("funpat_perm02","N5") []) (Case Flex (Var 2) [Branch (Pattern ("funpat_perm02","N1") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("funpat_perm02","N2") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("funpat_perm02","N3") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("funpat_perm02","N4") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("funpat_perm02","N5") []) (Comb ConsCall ("Prelude","True") [])])])),Func ("funpat_perm02","_impl#aValue#Prelude.Data#funpat_perm02.N") 0 Public (TCons ("funpat_perm02","N") []) (Rule [] (Or (Or (Or (Or (Comb ConsCall ("funpat_perm02","N1") []) (Comb ConsCall ("funpat_perm02","N2") [])) (Comb ConsCall ("funpat_perm02","N3") [])) (Comb ConsCall ("funpat_perm02","N4") [])) (Comb ConsCall ("funpat_perm02","N5") []))),Func ("funpat_perm02","insert") 2 Public (FuncType (TCons ("funpat_perm02","N") []) (FuncType (TCons ("Prelude","[]") [TCons ("funpat_perm02","N") []]) (TCons ("Prelude","[]") [TCons ("funpat_perm02","N") []]))) (Rule [1,2] (Case Flex (Var 2) [Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude",":") [Var 1,Comb ConsCall ("Prelude","[]") []]),Branch (Pattern ("Prelude",":") [3,4]) (Or (Comb ConsCall ("Prelude",":") [Var 1,Comb ConsCall ("Prelude",":") [Var 3,Var 4]]) (Comb ConsCall ("Prelude",":") [Var 3,Comb FuncCall ("funpat_perm02","insert") [Var 1,Var 4]]))])),Func ("funpat_perm02","perm") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("funpat_perm02","N") []]) (TCons ("Prelude","[]") [TCons ("funpat_perm02","N") []])) (Rule [1] (Case Flex (Var 1) [Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","[]") []),Branch (Pattern ("Prelude",":") [2,3]) (Comb FuncCall ("funpat_perm02","insert") [Var 2,Comb FuncCall ("funpat_perm02","perm") [Var 3]])])),Func ("funpat_perm02","main") 0 Public (TCons ("Prelude","[]") [TCons ("funpat_perm02","N") []]) (Rule [] (Comb FuncCall ("funpat_perm02","perm") [Comb ConsCall ("Prelude",":") [Comb ConsCall ("funpat_perm02","N1") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("funpat_perm02","N2") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("funpat_perm02","N3") [],Comb ConsCall ("Prelude","[]") []]]]]))] []