(IProg "funpat_isin04" ["Prelude"] [(IDataType ("funpat_isin04","N",0) [(("funpat_isin04","N1",0),0),(("funpat_isin04","N2",1),0),(("funpat_isin04","N3",2),0),(("funpat_isin04","N4",3),0),(("funpat_isin04","N5",4),0)])] [(IFunction ("funpat_isin04","_inst#Prelude.Data#funpat_isin04.N",0) 1 Public [0] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (ICaseCons 1 [(IConsBranch ("Prelude","()",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","_Dict#Data",0) [(IFPCall ("funpat_isin04","_impl#===#Prelude.Data#funpat_isin04.N",1) 2 []),(IFCall ("funpat_isin04","_impl#aValue#Prelude.Data#funpat_isin04.N",2) [])]))))])))),(IFunction ("funpat_isin04","_impl#===#Prelude.Data#funpat_isin04.N",1) 2 Public [0] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (ICaseCons 1 [(IConsBranch ("funpat_isin04","N1",0) 0 (IBlock [] [] (IReturn (IFCall ("funpat_isin04","_impl#===#Prelude.Data#funpat_isin04.N_CASE0",9) [(IVar 2)])))),(IConsBranch ("funpat_isin04","N2",1) 0 (IBlock [] [] (IReturn (IFCall ("funpat_isin04","_impl#===#Prelude.Data#funpat_isin04.N_CASE1",8) [(IVar 2)])))),(IConsBranch ("funpat_isin04","N3",2) 0 (IBlock [] [] (IReturn (IFCall ("funpat_isin04","_impl#===#Prelude.Data#funpat_isin04.N_CASE2",7) [(IVar 2)])))),(IConsBranch ("funpat_isin04","N4",3) 0 (IBlock [] [] (IReturn (IFCall ("funpat_isin04","_impl#===#Prelude.Data#funpat_isin04.N_CASE3",6) [(IVar 2)])))),(IConsBranch ("funpat_isin04","N5",4) 0 (IBlock [] [] (IReturn (IFCall ("funpat_isin04","_impl#===#Prelude.Data#funpat_isin04.N_CASE4",5) [(IVar 2)]))))])))),(IFunction ("funpat_isin04","_impl#===#Prelude.Data#funpat_isin04.N_CASE4",5) 1 Private [0] (IFuncBody (IBlock [(IVarDecl 2)] [(IVarAssign 2 (IVarAccess 0 [0]))] (ICaseCons 2 [(IConsBranch ("funpat_isin04","N1",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("funpat_isin04","N2",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("funpat_isin04","N3",2) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("funpat_isin04","N4",3) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("funpat_isin04","N5",4) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",1) []))))])))),(IFunction ("funpat_isin04","_impl#===#Prelude.Data#funpat_isin04.N_CASE3",6) 1 Private [0] (IFuncBody (IBlock [(IVarDecl 2)] [(IVarAssign 2 (IVarAccess 0 [0]))] (ICaseCons 2 [(IConsBranch ("funpat_isin04","N1",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("funpat_isin04","N2",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("funpat_isin04","N3",2) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("funpat_isin04","N4",3) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",1) [])))),(IConsBranch ("funpat_isin04","N5",4) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) []))))])))),(IFunction ("funpat_isin04","_impl#===#Prelude.Data#funpat_isin04.N_CASE2",7) 1 Private [0] (IFuncBody (IBlock [(IVarDecl 2)] [(IVarAssign 2 (IVarAccess 0 [0]))] (ICaseCons 2 [(IConsBranch ("funpat_isin04","N1",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("funpat_isin04","N2",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("funpat_isin04","N3",2) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",1) [])))),(IConsBranch ("funpat_isin04","N4",3) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("funpat_isin04","N5",4) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) []))))])))),(IFunction ("funpat_isin04","_impl#===#Prelude.Data#funpat_isin04.N_CASE1",8) 1 Private [0] (IFuncBody (IBlock [(IVarDecl 2)] [(IVarAssign 2 (IVarAccess 0 [0]))] (ICaseCons 2 [(IConsBranch ("funpat_isin04","N1",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("funpat_isin04","N2",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",1) [])))),(IConsBranch ("funpat_isin04","N3",2) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("funpat_isin04","N4",3) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("funpat_isin04","N5",4) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) []))))])))),(IFunction ("funpat_isin04","_impl#===#Prelude.Data#funpat_isin04.N_CASE0",9) 1 Private [0] (IFuncBody (IBlock [(IVarDecl 2)] [(IVarAssign 2 (IVarAccess 0 [0]))] (ICaseCons 2 [(IConsBranch ("funpat_isin04","N1",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",1) [])))),(IConsBranch ("funpat_isin04","N2",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("funpat_isin04","N3",2) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("funpat_isin04","N4",3) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("funpat_isin04","N5",4) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) []))))])))),(IFunction ("funpat_isin04","_impl#aValue#Prelude.Data#funpat_isin04.N",2) 0 Public [] (IFuncBody (IBlock [] [] (IReturn (IOr (IOr (IOr (IOr (ICCall ("funpat_isin04","N1",0) []) (ICCall ("funpat_isin04","N2",1) [])) (ICCall ("funpat_isin04","N3",2) [])) (ICCall ("funpat_isin04","N4",3) [])) (ICCall ("funpat_isin04","N5",4) [])))))),(IFunction ("funpat_isin04","isin",3) 2 Public [] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2),(IFreeDecl 3)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (IReturn (IFCall ("Prelude","cond",761) [(IFCall ("Prelude","=:<=",751) [(IFPCall ("Prelude","_inst#Prelude.Data#(,)",17) 1 [(IFPCall ("Prelude","_inst#Prelude.Data#[]",11) 1 [(IFPCall ("funpat_isin04","_inst#Prelude.Data#funpat_isin04.N",0) 1 [])]),(IFPCall ("funpat_isin04","_inst#Prelude.Data#funpat_isin04.N",0) 1 [])]),(ICCall ("Prelude","(,)",0) [(IFCall ("Prelude","++",697) [(IFCall ("Prelude","unknown",757) [(IFPCall ("Prelude","_inst#Prelude.Data#[]",11) 1 [(IFPCall ("funpat_isin04","_inst#Prelude.Data#funpat_isin04.N",0) 1 [])])]),(IFCall ("Prelude","++",697) [(ICCall ("Prelude",":",1) [(IVar 3),(ICCall ("Prelude","[]",0) [])]),(IFCall ("Prelude","unknown",757) [(IFPCall ("Prelude","_inst#Prelude.Data#[]",11) 1 [(IFPCall ("funpat_isin04","_inst#Prelude.Data#funpat_isin04.N",0) 1 [])])])])]),(IVar 3)]),(ICCall ("Prelude","(,)",0) [(IVar 2),(IVar 1)])]),(ICCall ("Prelude","True",1) [])]))))),(IFunction ("funpat_isin04","main",4) 0 Public [] (IFuncBody (IBlock [] [] (IReturn (IFCall ("funpat_isin04","isin",3) [(ICCall ("funpat_isin04","N1",0) []),(ICCall ("Prelude",":",1) [(ICCall ("funpat_isin04","N2",1) []),(ICCall ("Prelude",":",1) [(ICCall ("funpat_isin04","N3",2) []),(ICCall ("Prelude",":",1) [(ICCall ("funpat_isin04","N1",0) []),(ICCall ("Prelude",":",1) [(ICCall ("funpat_isin04","N4",3) []),(ICCall ("Prelude",":",1) [(ICCall ("funpat_isin04","N5",4) []),(ICCall ("Prelude","[]",0) [])])])])])])])))))])