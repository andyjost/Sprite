(IProg "funpat_isinXX" ["Prelude"] [(IDataType ("funpat_isinXX","N",0) [(("funpat_isinXX","N1",0),0),(("funpat_isinXX","N2",1),0)])] [(IFunction ("funpat_isinXX","_inst#Prelude.Data#funpat_isinXX.N",0) 0 Public [] (IFuncBody (IBlock [] [] (IReturn (ICCall ("Prelude","_Dict#Data",0) [(IFPCall ("funpat_isinXX","_impl#===#Prelude.Data#funpat_isinXX.N",1) 2 []),(IFPCall ("funpat_isinXX","_impl#aValue#Prelude.Data#funpat_isinXX.N",2) 1 [])]))))),(IFunction ("funpat_isinXX","_impl#===#Prelude.Data#funpat_isinXX.N",1) 2 Public [0] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (ICaseCons 1 [(IConsBranch ("funpat_isinXX","N1",0) 0 (IBlock [] [] (IReturn (IFCall ("funpat_isinXX","_impl#===#Prelude.Data#funpat_isinXX.N_CASE0",6) [(IVar 2)])))),(IConsBranch ("funpat_isinXX","N2",1) 0 (IBlock [] [] (IReturn (IFCall ("funpat_isinXX","_impl#===#Prelude.Data#funpat_isinXX.N_CASE1",5) [(IVar 2)]))))])))),(IFunction ("funpat_isinXX","_impl#===#Prelude.Data#funpat_isinXX.N_CASE1",5) 1 Private [0] (IFuncBody (IBlock [(IVarDecl 2)] [(IVarAssign 2 (IVarAccess 0 [0]))] (ICaseCons 2 [(IConsBranch ("funpat_isinXX","N1",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("funpat_isinXX","N2",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",1) []))))])))),(IFunction ("funpat_isinXX","_impl#===#Prelude.Data#funpat_isinXX.N_CASE0",6) 1 Private [0] (IFuncBody (IBlock [(IVarDecl 2)] [(IVarAssign 2 (IVarAccess 0 [0]))] (ICaseCons 2 [(IConsBranch ("funpat_isinXX","N1",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",1) [])))),(IConsBranch ("funpat_isinXX","N2",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) []))))])))),(IFunction ("funpat_isinXX","_impl#aValue#Prelude.Data#funpat_isinXX.N",2) 1 Public [0] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (ICaseCons 1 [(IConsBranch ("Prelude","()",0) 0 (IBlock [] [] (IReturn (IOr (ICCall ("funpat_isinXX","N1",0) []) (ICCall ("funpat_isinXX","N2",1) [])))))])))),(IFunction ("funpat_isinXX","isin",3) 2 Public [] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2),(IFreeDecl 3)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (IReturn (IFCall ("Prelude","cond",738) [(IFCall ("Prelude","=:<=",728) [(IFCall ("Prelude","++",675) [(IFCall ("Prelude","unknown",734) [(IFCall ("Prelude","_inst#Prelude.Data#[]",11) [(IFCall ("funpat_isinXX","_inst#Prelude.Data#funpat_isinXX.N",0) [])])]),(IFCall ("Prelude","++",675) [(ICCall ("Prelude",":",1) [(IVar 3),(ICCall ("Prelude","[]",0) [])]),(IFCall ("Prelude","unknown",734) [(IFCall ("Prelude","_inst#Prelude.Data#[]",11) [(IFCall ("funpat_isinXX","_inst#Prelude.Data#funpat_isinXX.N",0) [])])])])]),(IVar 2)]),(IFCall ("Prelude","cond",738) [(IFCall ("Prelude","=:=",727) [(IVar 1),(IVar 3)]),(ICCall ("Prelude","True",1) [])])]))))),(IFunction ("funpat_isinXX","main",4) 0 Public [] (IFuncBody (IBlock [] [] (IReturn (IFCall ("funpat_isinXX","isin",3) [(ICCall ("funpat_isinXX","N1",0) []),(ICCall ("Prelude",":",1) [(ICCall ("funpat_isinXX","N2",1) []),(ICCall ("Prelude",":",1) [(ICCall ("funpat_isinXX","N1",0) []),(ICCall ("Prelude","[]",0) [])])])])))))])