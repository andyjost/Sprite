(IProg "funpat_perm02" ["Prelude"] [(IDataType ("funpat_perm02","N",0) [(("funpat_perm02","N1",0),0),(("funpat_perm02","N2",1),0),(("funpat_perm02","N3",2),0),(("funpat_perm02","N4",3),0),(("funpat_perm02","N5",4),0)])] [(IFunction ("funpat_perm02","_inst#Prelude.Data#funpat_perm02.N",0) 0 Public [] (IFuncBody (IBlock [] [] (IReturn (ICCall ("Prelude","_Dict#Data",0) [(IFPCall ("funpat_perm02","_impl#===#Prelude.Data#funpat_perm02.N",1) 2 []),(IFPCall ("funpat_perm02","_impl#aValue#Prelude.Data#funpat_perm02.N",2) 1 [])]))))),(IFunction ("funpat_perm02","_impl#===#Prelude.Data#funpat_perm02.N",1) 2 Public [0] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (ICaseCons 1 [(IConsBranch ("funpat_perm02","N1",0) 0 (IBlock [] [] (IReturn (IFCall ("funpat_perm02","_impl#===#Prelude.Data#funpat_perm02.N_CASE0",10) [(IVar 2)])))),(IConsBranch ("funpat_perm02","N2",1) 0 (IBlock [] [] (IReturn (IFCall ("funpat_perm02","_impl#===#Prelude.Data#funpat_perm02.N_CASE1",9) [(IVar 2)])))),(IConsBranch ("funpat_perm02","N3",2) 0 (IBlock [] [] (IReturn (IFCall ("funpat_perm02","_impl#===#Prelude.Data#funpat_perm02.N_CASE2",8) [(IVar 2)])))),(IConsBranch ("funpat_perm02","N4",3) 0 (IBlock [] [] (IReturn (IFCall ("funpat_perm02","_impl#===#Prelude.Data#funpat_perm02.N_CASE3",7) [(IVar 2)])))),(IConsBranch ("funpat_perm02","N5",4) 0 (IBlock [] [] (IReturn (IFCall ("funpat_perm02","_impl#===#Prelude.Data#funpat_perm02.N_CASE4",6) [(IVar 2)]))))])))),(IFunction ("funpat_perm02","_impl#===#Prelude.Data#funpat_perm02.N_CASE4",6) 1 Private [0] (IFuncBody (IBlock [(IVarDecl 2)] [(IVarAssign 2 (IVarAccess 0 [0]))] (ICaseCons 2 [(IConsBranch ("funpat_perm02","N1",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("funpat_perm02","N2",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("funpat_perm02","N3",2) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("funpat_perm02","N4",3) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("funpat_perm02","N5",4) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",1) []))))])))),(IFunction ("funpat_perm02","_impl#===#Prelude.Data#funpat_perm02.N_CASE3",7) 1 Private [0] (IFuncBody (IBlock [(IVarDecl 2)] [(IVarAssign 2 (IVarAccess 0 [0]))] (ICaseCons 2 [(IConsBranch ("funpat_perm02","N1",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("funpat_perm02","N2",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("funpat_perm02","N3",2) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("funpat_perm02","N4",3) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",1) [])))),(IConsBranch ("funpat_perm02","N5",4) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) []))))])))),(IFunction ("funpat_perm02","_impl#===#Prelude.Data#funpat_perm02.N_CASE2",8) 1 Private [0] (IFuncBody (IBlock [(IVarDecl 2)] [(IVarAssign 2 (IVarAccess 0 [0]))] (ICaseCons 2 [(IConsBranch ("funpat_perm02","N1",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("funpat_perm02","N2",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("funpat_perm02","N3",2) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",1) [])))),(IConsBranch ("funpat_perm02","N4",3) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("funpat_perm02","N5",4) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) []))))])))),(IFunction ("funpat_perm02","_impl#===#Prelude.Data#funpat_perm02.N_CASE1",9) 1 Private [0] (IFuncBody (IBlock [(IVarDecl 2)] [(IVarAssign 2 (IVarAccess 0 [0]))] (ICaseCons 2 [(IConsBranch ("funpat_perm02","N1",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("funpat_perm02","N2",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",1) [])))),(IConsBranch ("funpat_perm02","N3",2) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("funpat_perm02","N4",3) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("funpat_perm02","N5",4) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) []))))])))),(IFunction ("funpat_perm02","_impl#===#Prelude.Data#funpat_perm02.N_CASE0",10) 1 Private [0] (IFuncBody (IBlock [(IVarDecl 2)] [(IVarAssign 2 (IVarAccess 0 [0]))] (ICaseCons 2 [(IConsBranch ("funpat_perm02","N1",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",1) [])))),(IConsBranch ("funpat_perm02","N2",1) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("funpat_perm02","N3",2) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("funpat_perm02","N4",3) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("funpat_perm02","N5",4) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) []))))])))),(IFunction ("funpat_perm02","_impl#aValue#Prelude.Data#funpat_perm02.N",2) 1 Public [0] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (ICaseCons 1 [(IConsBranch ("Prelude","()",0) 0 (IBlock [] [] (IReturn (IOr (IOr (IOr (IOr (ICCall ("funpat_perm02","N1",0) []) (ICCall ("funpat_perm02","N2",1) [])) (ICCall ("funpat_perm02","N3",2) [])) (ICCall ("funpat_perm02","N4",3) [])) (ICCall ("funpat_perm02","N5",4) [])))))])))),(IFunction ("funpat_perm02","insert",3) 2 Public [1] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (ICaseCons 2 [(IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude",":",1) [(IVar 1),(ICCall ("Prelude","[]",0) [])])))),(IConsBranch ("Prelude",":",1) 2 (IBlock [(IVarDecl 3),(IVarDecl 4)] [(IVarAssign 3 (IVarAccess 2 [0])),(IVarAssign 4 (IVarAccess 2 [1]))] (IReturn (IOr (ICCall ("Prelude",":",1) [(IVar 1),(ICCall ("Prelude",":",1) [(IVar 3),(IVar 4)])]) (ICCall ("Prelude",":",1) [(IVar 3),(IFCall ("funpat_perm02","insert",3) [(IVar 1),(IVar 4)])])))))])))),(IFunction ("funpat_perm02","perm",4) 1 Public [0] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (ICaseCons 1 [(IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) [])))),(IConsBranch ("Prelude",":",1) 2 (IBlock [(IVarDecl 2),(IVarDecl 3)] [(IVarAssign 2 (IVarAccess 1 [0])),(IVarAssign 3 (IVarAccess 1 [1]))] (IReturn (IFCall ("funpat_perm02","insert",3) [(IVar 2),(IFCall ("funpat_perm02","perm",4) [(IVar 3)])]))))])))),(IFunction ("funpat_perm02","main",5) 0 Public [] (IFuncBody (IBlock [] [] (IReturn (IFCall ("funpat_perm02","perm",4) [(ICCall ("Prelude",":",1) [(ICCall ("funpat_perm02","N1",0) []),(ICCall ("Prelude",":",1) [(ICCall ("funpat_perm02","N2",1) []),(ICCall ("Prelude",":",1) [(ICCall ("funpat_perm02","N3",2) []),(ICCall ("Prelude","[]",0) [])])])])])))))])