// Note: no include guards desired.
#include <boost/preprocessor/cat.hpp>
#include <boost/preprocessor/stringize.hpp>
#include <boost/preprocessor/tuple/elem.hpp>

#ifndef SPEC
#error "Define SPEC as a 2-tuple of NAME, ARITY"
#endif

#define NAME     BOOST_PP_TUPLE_ELEM(0, SPEC)
#define ARITY    BOOST_PP_TUPLE_ELEM(1, SPEC)

#if ARITY != 0
  #if ARITY != 1
    #if ARITY != 2
      #error "Expected arity 0, 1 or 2."
    #endif
  #endif
#endif

#define STEP_FUNCTION_NAME  BOOST_PP_CAT(NAME, _step)
#define INFOTABLE_NAME      BOOST_PP_CAT(NAME, _Info)

tag_type STEP_FUNCTION_NAME(RuntimeState * rts, Configuration * C)
{
  return cyrt::not_used(rts, C);
}

InfoTable const INFOTABLE_NAME {
    /*tag*/        T_FUNC
  , /*arity*/      ARITY
  , /*alloc_size*/ sizeof(BOOST_PP_CAT(Node, ARITY))
  , /*flags*/      F_STATIC_OBJECT
  , /*name*/       BOOST_PP_STRINGIZE(NAME)
#if ARITY == 0
  , /*format*/     ""
#elif ARITY == 1
  , /*format*/     "p"
#else
  , /*format*/     "pp"
#endif
  , /*step*/       STEP_FUNCTION_NAME
  , /*type*/       nullptr
  };

#undef ARITY
#undef INFOTABLE_NAME
#undef NAME
#undef SPEC
#undef STEP_FUNCTION_NAME
