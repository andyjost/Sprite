(IProg "Data.Maybe" ["Prelude"] [] [(IFunction ("Data.Maybe","isJust",0) 1 Public [0] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (ICaseCons 1 [(IConsBranch ("Prelude","Nothing",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) [])))),(IConsBranch ("Prelude","Just",1) 1 (IBlock [] [] (IReturn (ICCall ("Prelude","True",1) []))))])))),(IFunction ("Data.Maybe","isNothing",1) 1 Public [0] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (ICaseCons 1 [(IConsBranch ("Prelude","Nothing",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","True",1) [])))),(IConsBranch ("Prelude","Just",1) 1 (IBlock [] [] (IReturn (ICCall ("Prelude","False",0) []))))])))),(IFunction ("Data.Maybe","fromJust",2) 1 Public [0] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (ICaseCons 1 [(IConsBranch ("Prelude","Nothing",0) 0 (IBlock [] [] (IReturn (IFCall ("Prelude","error",759) [(ICCall ("Prelude",":",1) [(ILit (IChar 'M')),(ICCall ("Prelude",":",1) [(ILit (IChar 'a')),(ICCall ("Prelude",":",1) [(ILit (IChar 'y')),(ICCall ("Prelude",":",1) [(ILit (IChar 'b')),(ICCall ("Prelude",":",1) [(ILit (IChar 'e')),(ICCall ("Prelude",":",1) [(ILit (IChar '.')),(ICCall ("Prelude",":",1) [(ILit (IChar 'f')),(ICCall ("Prelude",":",1) [(ILit (IChar 'r')),(ICCall ("Prelude",":",1) [(ILit (IChar 'o')),(ICCall ("Prelude",":",1) [(ILit (IChar 'm')),(ICCall ("Prelude",":",1) [(ILit (IChar 'J')),(ICCall ("Prelude",":",1) [(ILit (IChar 'u')),(ICCall ("Prelude",":",1) [(ILit (IChar 's')),(ICCall ("Prelude",":",1) [(ILit (IChar 't')),(ICCall ("Prelude",":",1) [(ILit (IChar ':')),(ICCall ("Prelude",":",1) [(ILit (IChar ' ')),(ICCall ("Prelude",":",1) [(ILit (IChar 'N')),(ICCall ("Prelude",":",1) [(ILit (IChar 'o')),(ICCall ("Prelude",":",1) [(ILit (IChar 't')),(ICCall ("Prelude",":",1) [(ILit (IChar 'h')),(ICCall ("Prelude",":",1) [(ILit (IChar 'i')),(ICCall ("Prelude",":",1) [(ILit (IChar 'n')),(ICCall ("Prelude",":",1) [(ILit (IChar 'g')),(ICCall ("Prelude","[]",0) [])])])])])])])])])])])])])])])])])])])])])])])])])))),(IConsBranch ("Prelude","Just",1) 1 (IBlock [(IVarDecl 2)] [(IVarAssign 2 (IVarAccess 1 [0]))] (IReturn (IVar 2))))])))),(IFunction ("Data.Maybe","fromMaybe",3) 2 Public [1] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (ICaseCons 2 [(IConsBranch ("Prelude","Nothing",0) 0 (IBlock [] [] (IReturn (IVar 1)))),(IConsBranch ("Prelude","Just",1) 1 (IBlock [(IVarDecl 3)] [(IVarAssign 3 (IVarAccess 2 [0]))] (IReturn (IVar 3))))])))),(IFunction ("Data.Maybe","listToMaybe",4) 1 Public [0] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (ICaseCons 1 [(IConsBranch ("Prelude","[]",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","Nothing",0) [])))),(IConsBranch ("Prelude",":",1) 2 (IBlock [(IVarDecl 2)] [(IVarAssign 2 (IVarAccess 1 [0]))] (IReturn (ICCall ("Prelude","Just",1) [(IVar 2)]))))])))),(IFunction ("Data.Maybe","maybeToList",5) 1 Public [0] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (ICaseCons 1 [(IConsBranch ("Prelude","Nothing",0) 0 (IBlock [] [] (IReturn (ICCall ("Prelude","[]",0) [])))),(IConsBranch ("Prelude","Just",1) 1 (IBlock [(IVarDecl 2)] [(IVarAssign 2 (IVarAccess 1 [0]))] (IReturn (ICCall ("Prelude",":",1) [(IVar 2),(ICCall ("Prelude","[]",0) [])]))))])))),(IFunction ("Data.Maybe","catMaybes",6) 1 Public [] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (IReturn (IFCall ("Prelude","foldr",703) [(IFPCall ("Data.Maybe","catMaybes._#lambda3",8) 2 []),(ICCall ("Prelude","[]",0) []),(IVar 1)]))))),(IFunction ("Data.Maybe","catMaybes._#lambda3",8) 2 Private [0] (IFuncBody (IBlock [(IVarDecl 1),(IVarDecl 2)] [(IVarAssign 1 (IVarAccess 0 [0])),(IVarAssign 2 (IVarAccess 0 [1]))] (ICaseCons 1 [(IConsBranch ("Prelude","Nothing",0) 0 (IBlock [] [] (IReturn (IVar 2)))),(IConsBranch ("Prelude","Just",1) 1 (IBlock [(IVarDecl 3)] [(IVarAssign 3 (IVarAccess 1 [0]))] (IReturn (ICCall ("Prelude",":",1) [(IVar 3),(IVar 2)]))))])))),(IFunction ("Data.Maybe","mapMaybe",7) 1 Public [] (IFuncBody (IBlock [(IVarDecl 1)] [(IVarAssign 1 (IVarAccess 0 [0]))] (IReturn (IFCall ("Prelude",".",679) [(IFPCall ("Data.Maybe","catMaybes",6) 1 []),(IFPCall ("Prelude","map",700) 1 [(IVar 1)])])))))])