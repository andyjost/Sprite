interface Data.Either where {
import Prelude;
data Prelude.Either a b = Left a | Right b;
fromLeft 1 :: Prelude.Either a b -> a;
fromRight 1 :: Prelude.Either a b -> b;
isLeft 1 :: Prelude.Either a b -> Prelude.Bool;
isRight 1 :: Prelude.Either a b -> Prelude.Bool;
lefts 1 :: [Prelude.Either a b] -> [a];
partitionEithers 0 :: [Prelude.Either a b] -> ([a], [b]);
rights 1 :: [Prelude.Either a b] -> [b];
Prelude.either
3
::
(a -> b) -> (c -> b) -> Prelude.Either a c -> b;
hiding data Prelude.Bool
}