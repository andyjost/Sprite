Prog "Data.Function" ["Prelude"] [] [Func ("Data.Function","fix") 1 Public (ForallType [(0,KStar)] (FuncType (FuncType (TVar 0) (TVar 0)) (TVar 0))) (Rule [1] (Let [(2,Comb FuncCall ("Prelude","apply") [Var 1,Var 2])] (Var 2))),Func ("Data.Function","on") 4 Public (ForallType [(0,KStar),(1,KStar),(2,KStar)] (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TVar 1))) (FuncType (FuncType (TVar 2) (TVar 0)) (FuncType (TVar 2) (FuncType (TVar 2) (TVar 1)))))) (Rule [1,2,3,4] (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 1,Comb FuncCall ("Prelude","apply") [Var 2,Var 3]],Comb FuncCall ("Prelude","apply") [Var 2,Var 4]]))] []