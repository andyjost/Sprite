# Project variables
# =================
# These have the same value in all makefiles.
ROOT_DIR := $(dir $(abspath $(lastword $(MAKEFILE_LIST))))
OBJECT_ROOT := $(abspath $(ROOT_DIR)/object-root)
include $(ROOT_DIR)/Make.config

# Contextual variables
# ====================
# These take values that depend on the submodule being built.

# Get the directory under $(OBJECT_ROOT) corresponding to the current source
# directory and make sure it exists.
OBJECT_DIR := $(OBJECT_ROOT)/$(shell realpath --relative-to $(ROOT_DIR)/src $(shell pwd))
$(shell mkdir -p $(OBJECT_DIR))

# Submodules may override SRCS.
ifndef SRCS
  SRCS := $(wildcard *.c *.cpp)
endif

# Submodules may override OBJS.
ifndef OBJS
  OBJS := $(patsubst %,%.o,$(basename $(SRCS)))
endif
OBJS_OUT := $(patsubst %,$(OBJECT_DIR)/%,$(OBJS))

# Submodules may override SHLIBS.
ifndef SHLIBS
  SHLIBS :=
endif
SHLIBS_OUT := $(patsubst %,$(OBJECT_DIR)/%.so,$(SHLIBS))

# Files passed to the "clean" target.  Additional ones can be added with +=.
FILES_TO_CLEAN += $(OBJS_OUT) $(SHLIBS_OUT) .d/


# Recursion
# =========
# For defined submodules (default: all directories) and certain targets,
# recursively invoke make.
ifndef SUBMODULES
  SUBMODULES = $(dir $(wildcard */.))
endif
RECURSIVE_TARGETS := all shlibs objs clean install uninstall
.PHONY: $(RECURSIVE_TARGETS) $(SUBMODULES)
$(RECURSIVE_TARGETS): $(SUBMODULES)
$(SUBMODULES):
	$(MAKE) -C $@ $(MAKECMDGOALS)


# Rules and targets
# =================
all: objs shlibs # DEFAULT RULE
shlibs: $(SHLIBS_OUT)
objs: $(OBJS_OUT)
clean:
	rm -rf $(FILES_TO_CLEAN)

install uninstall: require-prefix
require-prefix:
	@:$(if $(PREFIX),, $(error PREFIX must be defined))
	@test -d $(PREFIX) -o \! -e $(PREFIX) || { echo "PREFIX \"$(PREFIX)\" exists but is not a directory."; exit 1; }

$(OBJECT_DIR)/%.so : $(OBJECT_DIR)/%.o
$(OBJECT_DIR)/%.so : $(OBJECT_DIR)/%.o
	$(CXX) -shared $< $(LDFLAGS) $(OUTPUT_OPTION)


# Debugging
# =========
# E.g., print-ROOT_DIR
print-% : ; $(info $* is a $(flavor $*) variable set to [$($*)]) @true


# Dependencies
# ============
include $(ROOT_DIR)/Make.depends

