# Project variables
# =================
# These have the same value in all makefiles.
ROOT_DIR := $(dir $(abspath $(lastword $(MAKEFILE_LIST))))
OBJECT_ROOT := $(abspath $(ROOT_DIR)/object-root)
include $(ROOT_DIR)/Make.config

# Usage
# =====
.PHONY: usage
usage: # DEFAULT RULE
	@echo "Usage: make [target ...] [var=value ...]"
	@echo "Build targets:"
	@echo "    all     : compile and link all objects and executables"
	@echo "    clean   : remove generated files"
	@echo "    objs    : compile object files"
	@echo "    libs    : compile and link static libraries"
	@echo "    shlibs  : compile and link shared libraries"
	@echo ""
	@echo "Install targets:"
	@echo "    install PREFIX=<dirname>   : install files under <dirname>"
	@echo "    uninstall PREFIX=<dirname> : uninstall files under <dirname>"
	@echo ""
	@echo "Debug targets:"
	@echo "    print-<varname>: print the value of make variable <varname>"
	@echo ""
	@echo "Example:"
	@echo "    make -j all            --build in parallel"
	@echo "    make install ~/sprite  --install under home directory"


# Recursion
# =========
# For defined submodules (default: all directories) and certain targets,
# recursively invoke make.
ifndef SUBMODULES
  SUBMODULES = $(dir $(wildcard */.))
endif
RECURSIVE_TARGETS := all clean install libs objs shlibs uninstall
.PHONY: $(RECURSIVE_TARGETS) $(SUBMODULES)
$(RECURSIVE_TARGETS): $(SUBMODULES)
$(SUBMODULES):
	$(MAKE) -C $@ $(MAKECMDGOALS)


# Installation checks
# ===================
INSTALLING := $(findstring install, $(MAKECMDGOALS))
ifneq ($(INSTALLING),)
  # Validate PREFIX.
  ifndef PREFIX
    $(error PREFIX is not defined.  Please specify it when invoking make))
  endif
  ifneq ($(shell test -d $(PREFIX) -o \! -e $(PREFIX); echo $$?),0)
    $(error PREFIX "$(PREFIX)" exists but is not a directory)
  endif
	1 = $(shell echo $(PREFIX)) # expand ~
	2 = $(shell python -c 'from __future__ import print_function; \
	                       import os;                             \
												 print(os.path.isabs("""$1"""))         \
												')
  ifneq ($(strip $2),True)
    $(error PREFIX must be an absolute path)
  endif
endif


# Debugging
# =========
# E.g., print-ROOT_DIR
print-% : ; $(info $* is a $(flavor $*) variable set to [$($*)]) @true

